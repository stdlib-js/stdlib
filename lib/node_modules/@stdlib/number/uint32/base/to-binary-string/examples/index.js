/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var randu = require('@stdlib/random/base/randu');
var round = require('@stdlib/math/base/special/round');
var Uint32Array = require('@stdlib/array/uint32');
var toBinaryString = require('@stdlib/number/uint32/base/to-binary-string');

var x;
var y;
var b;
var specificIntegers;

// Example 1: Generate random unsigned 32-bit integers and convert them to literal bit representations
var numberOfIntegers = 100;
var integers = new Uint32Array(numberOfIntegers);

for (var i = 0; i < numberOfIntegers; i++) {
    integers[i] = round(randu() * 1.0e5);
}

for (var i = 0; i < numberOfIntegers; i++) {
    b = toBinaryString(integers[i]);
    y = parseInt(b, 2);
    console.log('Integer: %d, Binary Representation: %s, Parsed Integer: %d', integers[i], b, y);
}

// Example 2: Convert specific integers to literal bit representations
specificIntegers = [123, 456, 789, 1024];
for (var i = 0; i < specificIntegers.length; i++) {
    b = toBinaryString(specificIntegers[i]);
    y = parseInt(b, 2);
    console.log('%d => %s => %d', specificIntegers[i], b, y);
}
