/*
 * @license Apache-2.0
 *
 * Copyright (c) 2021 The Stdlib Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* tslint:disable:no-unused-expression */

import CircularBuffer = require("./index");

// TESTS //

// The function returns a circular buffer instance...
{
	new CircularBuffer(3); // $ExpectType CircularBuffer
	new CircularBuffer([2, 3]); // $ExpectType CircularBuffer
}

// The functions or fields of instance should be ok
{
	const buf = new CircularBuffer(3); // $ExpectType CircularBuffer
	buf.push("foo");
	let circularBuf: CircularBuffer;
	let numberType: number;
	let booleanType: boolean;
	let stringType: string;
	let arrayType: any[];

	numberType = buf.count;
	numberType = buf.length;
	booleanType = buf.full;
	circularBuf = buf.clear();
	stringType = buf.toJSON();
	arrayType = buf.toArray();
}

// The compiler throws an error if the constructor function is provided an invalid number of arguments...
{
	new CircularBuffer(); // $ExpectError
	new CircularBuffer(3, 4); // $ExpectError
}

// The compiler throws an error if the constructor function is provided an invalid type of argument...
{
	new CircularBuffer("invalidType"); // $ExpectError
	new CircularBuffer(12.2); // $ExpectError
	new CircularBuffer({}); // $ExpectError
	new CircularBuffer(true); // $ExpectError
	new CircularBuffer(null); // $ExpectError
	new CircularBuffer(undefined); // $ExpectError
	new CircularBuffer(new Date()); // $ExpectError
}
