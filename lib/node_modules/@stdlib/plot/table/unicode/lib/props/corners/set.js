/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isStringArray = require( '@stdlib/assert/is-string-array' );
var numGraphemeClusters = require( '@stdlib/string/num-grapheme-clusters' );
var isEqual = require( '@stdlib/assert/deep-equal' );
var format = require( '@stdlib/string/format' );


// VARIABLES //

var NUM_CORNERS = 4;


// MAIN //

/**
* Sets the table's corner characters.
*
* @private
* @param {Array<string>} corners - corners
* @throws {TypeError} must be an array of four grapheme clusters
*/
function set( corners ) {
	/* eslint-disable no-invalid-this */
	var i;

	if ( !isStringArray( corners ) || corners.length !== NUM_CORNERS ) {
		throw new TypeError( format( 'invalid assignment. `%s` must be an array of four grapheme clusters. Value: `%s`.', 'corners', corners ) );
	}
	for ( i = 0; i < NUM_CORNERS; i++ ) {
		if ( numGraphemeClusters( corners[ i ] ) !== 1 ) {
			throw new TypeError( format( 'invalid assignment. `%s` must be an array of four grapheme clusters. Value: `%s`.', 'corners', corners ) );
		}
	}
	if ( !isEqual( corners, this._corners ) ) {
		this._corners = corners;
		this.emit( 'change' );
	}
}


// EXPORTS //

module.exports = set;
