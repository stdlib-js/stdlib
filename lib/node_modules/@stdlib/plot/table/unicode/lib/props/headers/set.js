/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var format = require( '@stdlib/string/format' );
var isCollection = require( '@stdlib/assert/is-collection' );
var isEqual = require( '@stdlib/assert/deep-equal' );
var parseHeaders = require( './../../parser/parse_headers.js' );


// MAIN //

/**
* Sets the table headers.
*
* @private
* @param {Collection} headers - table headers
* @throws {TypeError} must be a collection
* @throws {RangeError} must provide correct number of columns
*/
function set( headers ) {
	/* eslint-disable no-invalid-this */
	var parsed;
	if ( !isCollection( headers ) ) {
		throw new TypeError( format( 'invalid argument. `%s` must be a collection. Value: `%s`.', 'headers', headers ) );
	}
	parsed = parseHeaders( headers, this._columnWidths );
	if ( this._numColumns ) {
		if ( parsed.headers.length !== this._numColumns ) {
			throw new RangeError( format( 'invalid assignment. `%s` must have `%d` number of columns. Value: `%d`.', 'headers', this._numColumns, parsed.columnWidths.length ) );
		}
	} else {
		this._numColumns = parsed.columnWidths.length;
	}
	if ( !isEqual( parsed.headers, this._headers ) ) {
		this._headers = parsed.headers;
		this._columnWidths = parsed.columnWidths;
		this.emit( 'change' );
	}
}


// EXPORTS //

module.exports = set;
