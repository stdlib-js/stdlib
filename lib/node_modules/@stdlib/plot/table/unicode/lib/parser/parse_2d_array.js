/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Parses 2D array into tabular data.
*
* @private
* @param {Array<Array>} data - tabular data
* @param {Collection} [headers] - column names
* @throws {RangeError} must provide correct number of columns
* @returns {Object} table metadata
*/
function parse2dArray( data, headers ) {
	var widths = [];
	var cols;
	var len;
	var i;
	var j;

	// If headers exist, initialize the widths array...
	if ( headers ) {
		cols = headers.length;
		for ( i = 0; i < cols; i++ ) {
			widths.push( String( headers[ i ] ).length );
		}
	} else {
		headers = null;
		cols = data[ 0 ].length;
		for ( i = 0; i < cols; i++ ) {
			widths.push( 0 );
		}
	}
	// Calculating max widths of all columns:
	for ( i = 0; i < data.length; i++ ) {
		if ( cols !== data[ i ].length ) {
			throw new RangeError( 'invalid data. All rows must have equal number of columns' );
		}
		for ( j = 0; j < cols; j++ ) {
			len = String( data[ i ][ j ] ).length;
			if ( len > widths[ j ] ) {
				widths[ j ] = len;
			}
		}
	}
	return {
		'headers': headers,
		'data': data,
		'columnWidths': widths
	};
}


// EXPORTS //

module.exports = parse2dArray;
