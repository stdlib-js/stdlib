/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var format = require( '@stdlib/string/format' );
var objectKeys = require( '@stdlib/utils/keys' );
var hasOwnProp = require( '@stdlib/assert/has-own-property' );


// MAIN //

/**
* Parses array of objects into tabular data.
*
* @private
* @param {Array<Object>} data - tabular data
* @param {Collection} [headers] - column names
* @throws {Error} must provide valid data
* @returns {Object} table metadata
*/
function parseObjectsList( data, headers ) {
	var header;
	var widths;
	var rows;
	var len;
	var i;
	var j;

	// If headers don't exist, extract headers from data:
	if ( !headers ) {
		headers = objectKeys( data[ 0 ] );
	}

	// Parsing data into a 2D array...
	rows = []; // final data after parsing
	widths = []; // max widths of each column
	for ( i = 0; i < headers.length; i++ ) { // initialize widths
		widths.push( String( headers[ i ] ).length );
	}
	for ( i = 0; i < data.length; i++ ) {
		rows[ i ] = [];
		for ( j = 0; j < headers.length; j++ ) {
			header = headers[ j ];
			if ( !hasOwnProp( data[ i ], header ) ) {
				throw new Error( format( 'invalid data. Column `%s` not found in data. Value: `%s`.', header, data ) );
			}
			len = String( data[ i ][ header ] ).length;

			// Updating max width of column:
			if ( len > widths[ j ] ) {
				widths[ j ] = len;
			}
			rows[ i ][ j ] = data[ i ][ header ];
		}
	}
	return {
		'headers': headers,
		'data': rows,
		'columnWidths': widths
	};
}


// EXPORTS //

module.exports = parseObjectsList;
