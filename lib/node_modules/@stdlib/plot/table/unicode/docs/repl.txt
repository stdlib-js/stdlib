
{{alias}}( [data,] [headers,] [options] )
    Returns a Unicode table instance.

    Parameters
    ----------
    data: Object|Array<Object>|Array<Array>|MatrixLike (optional)
        Table data.

    headers: Collection (optional)
        Table headers.

    options: Object (optional)
        Table options.

    options.alignment: Array<string>|string (optional)
        Datum's cell alignment(s). Default: 'right'.

    options.autoRender: boolean (optional)
        Boolean indicating whether to re-render on a 'change' event. Default:
        false.

    options.borders: Array<string> (optional)
        Border characters. Default: [ '─', '│', '─', '│' ].

    options.bufferSize: integer|null (optional)
        Data buffer size. If provided, data is kept in a first-in first-out
        (FIFO) buffer which cannot exceed the buffer size. Default: +infinity.

    options.cellPaddingLeft: Array<NonNegativeInteger>|NonNegativeInteger
    (optional)
        Cell's left padding(s). Default: 1.

    options.cellPaddingRight: Array<NonNegativeInteger>|NonNegativeInteger
    (optional)
        Cell's right padding(s). Default: 1.

    options.columnSeparator: string (optional)
        Column separator character(s). Default: '│'.

    options.corners: Array<string> (optional)
        Corner characters. Default: [ '┌', '┐', '┘', '└' ].

    options.headerSeparator: string (optional)
        Header separator character(s). Default: '─'.

    options.horizontalSeparatorMode: string (optional)
        Horizontal line separator mode. The following modes are supported:

        - resume: resume line sequence after a joint.
        - interpolate: skip line character at a joint.
        - repeat: repeat line sequence after a joint.

        Default: `resume`.

    options.joints: Array<string> (optional)
        Joint characters. Default: [ '┼', '┬', '┤', '┴', '├' ].

    options.marginX: NonNegativeInteger (optional)
        Horizontal output margin. Default: 0.

    options.marginY: NonNegativeInteger (optional)
        Vertical output margin. Default: 0.

    options.maxCellWidth: Array<NonNegativeInteger>|NonNegativeInteger|null
    (optional)
        Maximum cell width(s). Default: +infinity.

    options.maxOutputWidth: NonNegativeInteger|null (optional)
        Maximum output width. Default: +infinity.

    options.rowSeparator: string (optional)
        Row separator character(s). Default: ''.

    options.verticalSeparatorMode: string (optional)
        Vertical line separator mode. The following modes are supported:

        - resume: resume line sequence after a joint.
        - interpolate: skip line character at a joint.
        - repeat: repeat line sequence after a joint.

        Default: `resume`.

    Returns
    -------
    table.alignment
        Datum's cell alignment(s).

    table.autoRender
        Rendering mode. If `true`, an instance renders on each 'change' event;
        otherwise, rendering must be triggered manually.

    table.borders
        Border characters.

    table.bufferSize
        Data buffer size.

    table.cellPaddingLeft
        Cell's left Padding.

    table.cellPaddingRight
        Cell's right Padding.

    table.columnSeparator
        Column separator character(s).

    table.corners
        Corner characters.

    table.data
        Table data.

    table.headers
        Table headers.

    table.headerSeparator
        Header separator character(s).

    table.horizontalSeparatorMode
        Horizontal line separator mode.

    table.joints
        Joint characters.

    table.marginX
        Horizontal output margin.

    table.marginY
        Vertical output margin.

    table.maxCellWidth
        Maximum cell width.

    table.maxOutputWidth
        Maximum output width.

    table.push( row )
        Appends a row to table data.

    table.render()
        Renders a table.

    table.rowSeparator
        Row separator character(s).

    table.verticalSeparatorMode
        Vertical line separator mode.

    Examples
    --------
    > var data = [ [ 45, 33, 'hello' ], [ 32.54, true, null ] ];
    > var headers = [ 'col1', 'col2', 'col3' ];
    > var table = new {{alias}}( data, headers );
    > table.render()
    '...'

    See Also
    --------

