#!/usr/bin/env node

/**
* @license Apache-2.0
*
* Copyright (c) 2017 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
* Script to analyze the REPL namespace.
*/
'use strict';

// MODULES //

var propertyNames = require( '@stdlib/utils/property-names' );
var isFunction = require( '@stdlib/assert/is-function' );
var isRegExp = require( '@stdlib/assert/is-regexp' );
var namespace = require( '@stdlib/namespace' );


// VARIABLES //

var NAMESPACE = namespace();


// FUNCTIONS //

/**
* Prints analysis results.
*
* @private
* @param {Object} results - results
*/
function printResults( results ) {
	var str = '';
	str += '\n';
	str += 'REPL Namespace\n';
	str += '================\n';
	str += '\n';
	str += 'Size:       '+results.total+'\n';
	str += 'Functions:  '+results.functions+'\n';
	str += 'Methods:    '+results.methods+'\n';
	str += 'RegExp:     '+results.regexp+'\n';
	str += 'Constants:  '+results.constants+'\n';
	console.log( str );
}


// MAIN //

/**
* Analyzes REPL namespace.
*
* @private
*/
function main() {
	var stats;
	var keys;
	var key;
	var v;
	var i;
	var j;

	stats = {
		'total': NAMESPACE.length,
		'functions': 0,
		'regexp': 0,
		'constants': 0,
		'methods': 0
	};
	for ( i = 0; i < NAMESPACE.length; i++ ) {
		v = NAMESPACE[ i ].value;
		if ( isFunction( v ) ) {
			stats.functions += 1;
			keys = propertyNames( v );
			for ( j = 0; j < keys.length; j++ ) {
				key = keys[ j ];
				if ( isFunction( v[ key ] ) ) {
					stats.methods += 1;
				}
			}
		} else if ( isRegExp( v ) ) {
			stats.regexp += 1;
		} else {
			stats.constants += 1;
		}
	}
	printResults( stats );
}

main();
