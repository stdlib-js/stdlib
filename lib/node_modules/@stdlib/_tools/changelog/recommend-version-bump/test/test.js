/**
* @license Apache-2.0
*
* Copyright (c) 2024 by Your Name or Organization.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var recommendVersionBump = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof recommendVersionBump, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns `null` for an empty array of commits', function test( t ) {
	var result = recommendVersionBump( [] );
	t.equal( result, null, 'returns expected value' );
	t.end();
});

tape( 'the function returns `\'patch\'` for commits with only bug fixes', function test( t ) {
	var commits = [
		{
			'type': 'fix',
			'notes': []
		},
		{
			'type': 'fix',
			'notes': []
		}
	];
	var result = recommendVersionBump( commits );
	t.equal( result, 'patch', 'returns expected value' );
	t.end();
});

tape( 'the function returns `\'minor\'` for commits with backward-compatible feature additions', function test( t ) {
	var commits = [
		{
			'type': 'feat',
			'notes': []
		},
		{
			'type': 'fix',
			'notes': []
		}
	];
	var result = recommendVersionBump( commits );
	t.equal( result, 'minor', 'returns expected value' );
	t.end();
});

tape( 'the function returns `\'major\'` for commits with breaking changes', function test( t ) {
	var commits = [
		{
			'type': 'fix',
			'notes': []
		},
		{
			'type': 'feat',
			'notes': []
		},
		{
			'type': 'feat',
			'notes': [{
				'title': 'BREAKING CHANGE',
				'text': 'Changes in API'
			}]
		}
	];
	var result = recommendVersionBump( commits );
	t.equal( result, 'major', 'returns expected value' );
	t.end();
});
