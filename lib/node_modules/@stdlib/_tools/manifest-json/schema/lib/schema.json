{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "type": "object",
    "properties": {
      "options": {
        "type": "object",
        "description": "Key-value pairs where each key corresponds to a field in 'confs' and may be used to conditionally select a configuration. Each value corresponds to the key's default value.",
        "additionalProperties": true
      },
      "fields": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "field": {
              "type": "string",
              "description": "Key name corresponding to a field in 'confs'.",
              "minLength": 1
            },
            "resolve": {
              "type": "boolean",
              "description": "Indicates whether to resolve field values as file paths. If 'true', all field values are resolved relative to the manifest file."
            },
            "relative": {
              "type": "boolean",
              "description": "Indicates whether to resolve field values as relative file paths. This field is only considered when a manifest is a root manifest. If 'true', all field values, including those originating from dependencies, are resolved as relative file paths relative to the root manifest."
            }
          },
          "required": ["field", "resolve", "relative"],
          "additionalProperties": false
        },
        "uniqueItems": true
      },
      "confs": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "src": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "description": "Array of source files.",
              "uniqueItems": true,
              "minItems": 1
            },
            "include": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "description": "Array of include directories.",
              "uniqueItems": true
            },
            "libraries": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "description": "Array of linked library dependencies.",
              "uniqueItems": true
            },
            "libpath": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "description": "Array of linked library paths.",
              "uniqueItems": true
            },
            "dependencies": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "description": "Array of package dependencies containing source files.",
              "uniqueItems": true
            }
          },
          "required": ["src", "include", "libraries", "libpath", "dependencies"],
          "additionalProperties": true
        },
        "uniqueItems": true
      }
    },
    "required": ["options", "fields", "confs"],
    "additionalProperties": false
  }
