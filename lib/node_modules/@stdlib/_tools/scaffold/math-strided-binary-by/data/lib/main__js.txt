/**
* @license Apache-2.0
*
* Copyright (c) {{YEAR}} {{COPYRIGHT}}.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var mapBy2 = require( '@stdlib/strided/base/map-by2' );
var {{BINARY_ALIAS}} = require( '@{{BINARY_PKG}}' );


// MAIN //

/**
* {{MAIN_DESC}}
*
* @param {NonNegativeInteger} N - number of indexed elements
* @param {Collection} x - input array/collection
* @param {integer} sx - `x` stride length
* @param {Collection} y - input array/collection
* @param {integer} sy - `y` stride length
* @param {Collection} z - destination array/collection
* @param {integer} sz - `z` stride length
* @param {Callback} clbk - callback
* @param {*} [thisArg] - callback execution context
* @returns {Collection} `z`
*
* @example
* function accessor( values ) {
*     return values;
* }
*
* var x = [ {{X_VALUES_LEN_5}} ];
* var y = [ {{Y_VALUES_LEN_5}} ];
* var z = [ 0.0, 0.0, 0.0, 0.0, 0.0 ];
*
* {{ALIAS}}( x.length, x, 1, y, 1, z, 1, accessor );
*
* console.log( z );
* // => [ {{EXPECTED_LEN_5}} ]
*/
function {{ALIAS}}( N, x, sx, y, sy, z, sz, clbk, thisArg ) {
	return mapBy2( N, x, sx, y, sy, z, sz, {{BINARY_ALIAS}}, clbk, thisArg );
}


// EXPORTS //

module.exports = {{ALIAS}};
