
{{alias}}( N, x, sx, y, sy, clbk[, thisArg] )
    {{REPL_TEXT_MAIN_DESC}}

    The `N` and stride parameters determine which strided array elements are
    accessed at runtime.

    Indexing is relative to the first index. To introduce an offset, use typed
    array views.

    The callback function is provided four arguments:

    - value: array element
    - idx: iteration index
    - indices: strided array indices (offset + idx*stride)
    - arrays: input and output arrays

    If the callback function does not return any value (or equivalently,
    explicitly returns `undefined`), the value is ignored.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    x: {{TYPED_ARRAY_CTOR}}
        Input array.

    sx: integer
        Index increment for `x`.

    y: {{TYPED_ARRAY_CTOR}}
        Destination array.

    sy: integer
        Index increment for `y`.

    clbk: Function
        Callback function.

    thisArg: any (optional)
        Callback execution context.

    Returns
    -------
    y: {{TYPED_ARRAY_CTOR}}
        Destination array.

    Examples
    --------
    // Standard usage:
    > var x = new {{alias:@stdlib/array/{{TYPED_ARRAY_DTYPE}}}}( [ {{X_VALUES_LEN_4}} ] );
    > var y = new {{alias:@stdlib/array/{{TYPED_ARRAY_DTYPE}}}}( [ 0.0, 0.0, 0.0, 0.0 ] );
    > function clbk( v ) { return v; };
    > {{alias}}( x.length, x, 1, y, 1, clbk )
    <{{TYPED_ARRAY_CTOR}}>[ {{EXPECTED_LEN_4}} ]

    // Using `N` and stride parameters:
    > y = new {{alias:@stdlib/array/{{TYPED_ARRAY_DTYPE}}}}( [ 0.0, 0.0, 0.0, 0.0 ] );
    > {{alias}}( 2, x, 2, y, -1, clbk )
    <{{TYPED_ARRAY_CTOR}}>[ {{EXPECTED_LEN_2_X2_YM1}}, 0.0, 0.0 ]

    // Using view offsets:
    > var x0 = new {{alias:@stdlib/array/{{TYPED_ARRAY_DTYPE}}}}( [ {{X_VALUES_LEN_4}} ] );
    > var y0 = new {{alias:@stdlib/array/{{TYPED_ARRAY_DTYPE}}}}( [ 0.0, 0.0, 0.0, 0.0 ] );
    > var x1 = new {{alias:@stdlib/array/{{TYPED_ARRAY_DTYPE}}}}( x0.buffer, x0.BYTES_PER_ELEMENT*1 );
    > var y1 = new {{alias:@stdlib/array/{{TYPED_ARRAY_DTYPE}}}}( y0.buffer, y0.BYTES_PER_ELEMENT*2 );
    > {{alias}}( 2, x1, -2, y1, 1, clbk )
    <{{TYPED_ARRAY_CTOR}}>[ {{EXPECTED_LEN_2_XM2_Y1}} ]
    > y0
    <{{TYPED_ARRAY_CTOR}}>[ 0.0, 0.0, {{EXPECTED_LEN_2_XM2_Y1}} ]


{{alias}}.ndarray( N, x, sx, ox, y, sy, oy, clbk[, thisArg] )
    {{REPL_TEXT_NDARRAY_DESC}}

    While typed array views mandate a view offset based on the underlying
    buffer, the offset parameters support indexing semantics based on starting
    indices.

    The callback function is provided four arguments:

    - value: array element
    - idx: iteration index
    - indices: strided array indices (offset + idx*stride)
    - arrays: input and output arrays

    If the callback function does not return any value (or equivalently,
    explicitly returns `undefined`), the value is ignored.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    x: {{TYPED_ARRAY_CTOR}}
        Input array.

    sx: integer
        Index increment for `x`.

    ox: integer
        Starting index for `x`.

    y: {{TYPED_ARRAY_CTOR}}
        Destination array.

    sy: integer
        Index increment for `y`.

    oy: integer
        Starting index for `y`.

    clbk: Function
        Callback function.

    thisArg: any (optional)
        Callback execution context.

    Returns
    -------
    y: {{TYPED_ARRAY_CTOR}}
        Destination array.

    Examples
    --------
    // Standard usage:
    > var x = new {{alias:@stdlib/array/{{TYPED_ARRAY_DTYPE}}}}( [ {{X_VALUES_LEN_4}} ] );
    > var y = new {{alias:@stdlib/array/{{TYPED_ARRAY_DTYPE}}}}( [ 0.0, 0.0, 0.0, 0.0 ] );
    > function clbk( v ) { return v; };
    > {{alias}}.ndarray( x.length, x, 1, 0, y, 1, 0, clbk )
    <{{TYPED_ARRAY_CTOR}}>[ {{EXPECTED_LEN_4}} ]

    // Advanced indexing:
    > x = new {{alias:@stdlib/array/{{TYPED_ARRAY_DTYPE}}}}( [ {{X_VALUES_LEN_4}} ] );
    > y = new {{alias:@stdlib/array/{{TYPED_ARRAY_DTYPE}}}}( [ 0.0, 0.0, 0.0, 0.0 ] );
    > {{alias}}.ndarray( 2, x, 2, 1, y, -1, y.length-1, clbk )
    <{{TYPED_ARRAY_CTOR}}>[ 0.0, 0.0, {{EXPECTED_LEN_2_XM2_Y1}} ]

    See Also
    --------

