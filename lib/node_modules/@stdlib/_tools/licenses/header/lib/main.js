/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isString = require( '@stdlib/assert/is-string' ).isPrimitive;
var replace = require( '@stdlib/string/replace' );
var contains = require( '@stdlib/assert/contains' );
var lowercase = require( '@stdlib/string/lowercase' );
var format = require( '@stdlib/string/format' );
var validate = require( './validate.js' );
var licenses = require( './licenses.json' );
var header = require( './header.js' );


// MAIN //

/**
* Returns a license header.
*
* @param {string} license - license type
* @param {string} type - file type
* @param {Options} [options] - function options
* @param {PositiveInteger} [options.year] - copyright year
* @param {string} [options.copyright] - copyright owner
* @throws {Error} first argument must be a supported license SPDX identifier
* @throws {TypeError} second argument must be a string
* @throws {TypeError} options argument must be an object
* @throws {TypeError} must provide valid options
* @returns {(string|null)} license header or null
*
* @example
* var opts = {
*     'year': 2018,
*     'copyright': 'The Stdlib Authors'
* };
* var out = licenseHeader( 'Apache-2.0', 'js', opts );
* // returns <string>
*/
function licenseHeader( license, type, options ) {
	var opts;
	var err;
	var out;

	if ( !contains( licenses, license ) ) {
		throw new Error( format( 'invalid argument. Must provide a supported license SPDX identifier. Value: `%s`.', license ) );
	}
	if ( !isString( type ) ) {
		throw new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', type ) );
	}
	opts = {};
	if ( arguments.length > 2 ) {
		err = validate( opts, options );
		if ( err ) {
			throw err;
		}
	}
	// Attempt to read a license header:
	out = header( lowercase( license ), lowercase( type ) );
	if ( out === null ) {
		return out;
	}
	// Insert template values:
	if ( opts.year ) {
		out = replace( out, '{{YEAR}}', opts.year.toString() );
	}
	if ( opts.copyright ) {
		out = replace( out, '{{COPYRIGHT_OWNER}}', opts.copyright );
	}
	return out;
}


// EXPORTS //

module.exports = licenseHeader;
