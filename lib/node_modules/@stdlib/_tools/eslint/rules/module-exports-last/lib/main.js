/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// VARIABLES //

var rule;


// FUNCTIONS //

/**
* Checks whether a node represents an export statement.
*
* @private
* @param {ASTNode} node - node to examine
* @returns {boolean} boolean indicating whether node represents an export statement
*/
function isExportStatement( node ) {
	var expr;
	var type;

	type = node.type;
	if (
		type === 'ExportAllDeclaration' ||
		type === 'ExportDefaultDeclaration' ||
		type === 'ExportNamedDeclaration'
	) {
		return true;
	}
	if ( type === 'ExpressionStatement' ) {
		expr = node.expression;
		if (
			expr.type === 'AssignmentExpression' &&
			expr.left.type === 'MemberExpression'
		) {
			if (
				expr.left.object.name === 'module' &&
				expr.left.property.name === 'exports'
			) {
				return true;
			}
			if ( expr.left.object.name === 'exports' ) {
				return true;
			}
		}
	}
	return false;
}

/**
* Rule for validating that export statements appear at the end of a file.
*
* @param {Object} context - ESLint context
* @returns {Object} validators
*/
function main( context ) {
	/**
	* Reports the error message.
	*
	* @private
	* @param {ASTNode} node - node to report
	*/
	function report( node ) {
		context.report({
			'node': node,
			'message': 'Export statements should appear at the end of the file'
		});
	}

	/**
	* Checks whether export statements appear at the end of a file.
	*
	* @private
	* @param {ASTNode} node - node to examine
	*/
	function validate( node ) {
		var lastIndex;
		var body;
		var item;
		var i;

		body = node.body;
		lastIndex = -1;

		// Find the last non-export statement...
		for ( i = body.length-1; i >= 0; i-- ) {
			item = body[ i ];
			if ( !isExportStatement( item ) ) {
				lastIndex = i;
				break;
			}
		}
		// Report any export statements occurring from the beginning of the program until the last non-export statement...
		if ( lastIndex !== -1 ) {
			for ( i = 0; i < lastIndex; i++ ) {
				item = body[ i ];
				if ( isExportStatement( item ) ) {
					report( item );
				}
			}
		}
	}

	return {
		'Program': validate
	};
}


// MAIN //

rule = {
	'meta': {
		'docs': {
			'description': 'enforce that export statements appear at the end of a file'
		},
		'schema': []
	},
	'create': main
};


// EXPORTS //

module.exports = rule;
