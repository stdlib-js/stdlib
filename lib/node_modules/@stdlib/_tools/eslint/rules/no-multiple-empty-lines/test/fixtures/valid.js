/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var valid = [];
var test;

test = {
	'code': [
		'\'use strict\';',
		'',
		'// MODULES //',
		'',
		'var sqrt = require( \'@stdlib/math/base/special/sqrt\' );',
		'',
		'',
		'// VARIABLES //',
		'',
		'var TWO_PI = 2.0 * Math.PI;'
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		'\'use strict\';',
		'',
		'// TODO: Change implementation',
		'',
		'// MODULES //',
		'',
		'var sqrt = require( \'@stdlib/math/base/special/sqrt\' );',
		'',
		'',
		'// VARIABLES //',
		'',
		'var TWO_PI = 2.0 * Math.PI;'
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		'\'use strict\';',
		'',
		'/**',
		'* Test whether a character belongs to the ASCII character set and whether this is true for all characters in a provided string.',
		'*',
		'* @module @stdlib/assert/is-ascii',
		'*',
		'* @example',
		'* var isASCII = require( \'@stdlib/assert/is-ascii\' );',
		'*',
		'* var out = isASCII( \'beep\' );',
		'* // returns true',
		'*',
		'* out = isASCII( \'È\' );',
		'* // returns false',
		'*',
		'* out = isASCII( \'\' );',
		'* // returns false',
		'*/',
		'',
		'// MODULES //',
		'',
		'var isASCII = require( \'./is_ascii.js\' );',
		'',
		'',
		'// EXPORTS //',
		'',
		'module.exports = isASCII;'
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		'\'use strict\';',
		'',
		'/**',
		'* Test whether a character belongs to the ASCII character set and whether this is true for all characters in a provided string.',
		'*',
		'* @module @stdlib/assert/is-ascii',
		'*',
		'* @example',
		'* var isASCII = require( \'@stdlib/assert/is-ascii\' );',
		'*',
		'* var out = isASCII( \'beep\' );',
		'* // returns true',
		'*',
		'* out = isASCII( \'È\' );',
		'* // returns false',
		'*',
		'* out = isASCII( \'\' );',
		'* // returns false',
		'*/',
		'',
		'// MODULES //',
		'',
		'var isASCII = require( \'./is_ascii.js\' );',
		'',
		'',
		'// EXPORTS //',
		'',
		'module.exports = isASCII;',
		''
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		'function fizzBuzz() {',
		'  // This comment is okay...',
		'  var out;',
		'  var i;',
		'',
		'  for ( i = 1; i <= 100; i++ ) {',
		'    // This comment is okay...',
		'    out = ( i % 5 === 0 ) ? "Buzz" : ( i % 3 === 0 ) ? "Fizz" : i;',
		'    console.log( out );',
		'  }',
		'}'
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		'',
		'\'use strict\';',
		'',
		'// MODULES //',
		'',
		'var sqrt = require( \'@stdlib/math/base/special/sqrt\' );',
		'',
		'',
		'// VARIABLES //',
		'',
		'var TWO_PI = 2.0 * Math.PI;',
		''
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		'/* eslint-disable max-len */',
		'',
		'var a = 2 * 4;'
	].join( '\n' )
};
valid.push( test );


// EXPORTS //

module.exports = valid;
