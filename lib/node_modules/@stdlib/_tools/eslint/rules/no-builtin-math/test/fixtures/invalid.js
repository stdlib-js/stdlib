/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var invalid = [];
var test;

test = {
	'code': [
		'// VARIABLES //',
		'',
		'var E = Math.exp( 1.0 );'
	].join( '\n' ),
	'errors': [
		{
			'message': 'Use the package `@stdlib/math/base/special/exp` instead of `Math.exp`',
			'type': 'MemberExpression'
		}
	]
};
invalid.push( test );

test = {
	'code': [
		'// VARIABLES //',
		'',
		'var PI_SQUARED = Math.PI*Math.PI;'
	].join( '\n' ),
	'errors': [
		{
			'message': 'Use the package `@stdlib/constants/math/float64-pi` instead of `Math.PI`',
			'type': 'MemberExpression'
		},
		{
			'message': 'Use the package `@stdlib/constants/math/float64-pi` instead of `Math.PI`',
			'type': 'MemberExpression'
		}
	]
};
invalid.push( test );

test = {
	'code': [
		'// VARIABLES //',
		'',
		'var PI_CUBED = Math.pow( Math.PI, 3.0 );'
	].join( '\n' ),
	'errors': [
		{
			'message': 'Use the package `@stdlib/math/base/special/pow` instead of `Math.pow`',
			'type': 'MemberExpression'
		},
		{
			'message': 'Use the package `@stdlib/constants/math/float64-pi` instead of `Math.PI`',
			'type': 'MemberExpression'
		}
	]
};
invalid.push( test );

test = {
	'code': [
		'// VARIABLES //',
		'',
		'function sqrt( x ) {',
		'  return Math.sqrt( x );',
		'}'
	].join( '\n' ),
	'errors': [
		{
			'message': 'Use the package `@stdlib/math/base/special/sqrt` instead of `Math.sqrt`',
			'type': 'MemberExpression'
		}
	]
};
invalid.push( test );


// EXPORTS //

module.exports = invalid;
