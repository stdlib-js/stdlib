/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var invalid = [];
var test;

test = {
	'code': [
		'var arr = Array( 10 );'
	].join( '\n' ),
	'errors': [
		{
			'message': '`Array` constructor is invoked without the `new` keyword',
			'type': 'CallExpression'
		}
	],
	'output': [
		'var arr = new Array( 10 );'
	].join( '\n' )
};
invalid.push( test );

test = {
	'code': [
		'var types = {};',
		'types.Array = Array;',
		'var arr = types.Array();'
	].join( '\n' ),
	'errors': [
		{
			'message': '`Array` constructor is invoked without the `new` keyword',
			'type': 'CallExpression'
		}
	],
	'output': [
		'var types = {};',
		'types.Array = Array;',
		'var arr = new types.Array();'
	].join( '\n' )
};
invalid.push( test );

test = {
	'code': [
		'var types = {};',
		'types.Array = Array;',
		'var arr = types[ \'Array\' ]();'
	].join( '\n' ),
	'errors': [
		{
			'message': '`Array` constructor is invoked without the `new` keyword',
			'type': 'CallExpression'
		}
	],
	'output': [
		'var types = {};',
		'types.Array = Array;',
		'var arr = new types[ \'Array\' ]();'
	].join( '\n' )
};
invalid.push( test );

test = {
	'code': [
		'// MAIN //',
		'',
		'function zeros( n ) {',
		'  var arr = Array( n );',
		'  for ( var i = 0; i < n; i++ ) {',
		'    arr[ i ] = 0;',
		'  }',
		'  return arr;',
		'}'
	].join( '\n' ),
	'errors': [
		{
			'message': '`Array` constructor is invoked without the `new` keyword',
			'type': 'CallExpression'
		}
	],
	'output': [
		'// MAIN //',
		'',
		'function zeros( n ) {',
		'  var arr = new Array( n );',
		'  for ( var i = 0; i < n; i++ ) {',
		'    arr[ i ] = 0;',
		'  }',
		'  return arr;',
		'}'
	].join( '\n' )
};
invalid.push( test );


// EXPORTS //

module.exports = invalid;
