/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var valid = [];
var test;

test = {
	'code': [
		'ns.push({',
		'  \'alias\': \'hasInt8ArraySupport\',',
		'  \'path\': \'@stdlib/assert/has-int8array-support\',',
		'  \'value\': require( \'@stdlib/assert/has-int8array-support\' ),',
		'  \'type\': \'Function\',',
		'  \'related\': []',
		'});',
		'',
		'ns.push({',
		'  \'alias\': \'hasInt32ArraySupport\',',
		'  \'path\': \'@stdlib/assert/has-int32array-support\',',
		'  \'value\': require( \'@stdlib/assert/has-int32array-support\' ),',
		'  \'type\': \'Function\',',
		'  \'related\': []',
		'});',
		'',
		'ns.push({',
		'  \'alias\': \'hasMapSupport\',',
		'  \'path\': \'@stdlib/assert/has-map-support\',',
		'  \'value\': require( \'@stdlib/assert/has-map-support\' ),',
		'  \'type\': \'Function\',',
		'  \'related\': []',
		'});'
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		'ns.push({',
		'  \'alias\': \'pluck\',',
		'  \'path\': \'@stdlib/utils/pluck\',',
		'  \'value\': require( \'@stdlib/utils/pluck\' ),',
		'  \'type\': \'Function\',',
		'  \'related\': [',
		'    \'@stdlib/utils/deep-pluck\',',
		'    \'@stdlib/utils/pick\'',
		'  ]',
		'});',
		'',
		'ns.push({',
		'  \'alias\': \'pop\',',
		'  \'path\': \'@stdlib/utils/pop\',',
		'  \'value\': require( \'@stdlib/utils/pop\' ),',
		'  \'type\': \'Function\',',
		'  \'related\': [',
		'    \'@stdlib/utils/push\',',
		'    \'@stdlib/utils/shift\',',
		'    \'@stdlib/utils/unshift\'',
		'  ]',
		'});'
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		'ns.push({',
		'  \'alias\': \'AFINN_96\',',
		'  \'path\': \'@stdlib/datasets/afinn-96\',',
		'  \'value\': require( \'@stdlib/datasets/afinn-96\' ),',
		'  \'type\': \'Function\',',
		'  \'related\': [',
		'    \'@stdlib/datasets/afinn-111\'',
		'  ]',
		'});',
		'',
		'ns.push({',
		'  \'alias\': \'AFINN_111\',',
		'  \'path\': \'@stdlib/datasets/afinn-111\',',
		'  \'value\': require( \'@stdlib/datasets/afinn-111\' ),',
		'  \'type\': \'Function\',',
		'  \'related\': [',
		'    \'@stdlib/datasets/afinn-96\'',
		'  ]',
		'});'
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		'ns.push({',
		'  \'alias\': \'INT8_NUM_BYTES\',',
		'  \'path\': \'@stdlib/constants/int8/num-bytes\',',
		'  \'value\': require( \'@stdlib/constants/int8/num-bytes\' ),',
		'  \'type\': \'number\',',
		'  \'related\': [',
		'    \'@stdlib/constants/int16/num-bytes\',',
		'    \'@stdlib/constants/int32/num-bytes\',',
		'    \'@stdlib/constants/uint8/num-bytes\'',
		'  ]',
		'});',
		'',
		'ns.push({',
		'  \'alias\': \'Int8Array\',',
		'  \'path\': \'@stdlib/array/int8\',',
		'  \'value\': require( \'@stdlib/array/int8\' ),',
		'  \'type\': \'Function\',',
		'  \'related\': [',
		'    \'@stdlib/array/buffer\',',
		'    \'@stdlib/array/float32\',',
		'    \'@stdlib/array/float64\',',
		'    \'@stdlib/array/int16\',',
		'    \'@stdlib/array/int32\',',
		'    \'@stdlib/array/uint16\',',
		'    \'@stdlib/array/uint32\',',
		'    \'@stdlib/array/uint8\',',
		'    \'@stdlib/array/uint8c\'',
		'  ]',
		'});'
	].join( '\n' )
};
valid.push( test );


// EXPORTS //

module.exports = valid;
