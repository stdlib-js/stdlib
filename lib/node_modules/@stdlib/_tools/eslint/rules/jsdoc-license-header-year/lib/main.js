/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var execSync = require( 'child_process' ).execSync;
var replace = require( '@stdlib/string/replace' );


// VARIABLES //

var RE_COPYRIGHT = /Copyright \(c\) (\d{4}) The Stdlib Authors./;
var rule;


// FUNCTIONS //

/**
* Rule for validating that the year in a stdlib license header matches the year the file was created.
*
* @param {Object} context - ESLint context
* @returns {Object} validators
*/
function main( context ) {
	var source = context.getSourceCode();
	var filename = context.getFilename();

	return {
		'Program': validate
	};

	/**
	* Reports the error message.
	*
	* @private
	* @param {string} msg - message to report
	* @param {Object} comment - comment node
	* @param {number} expected - expected year
	*/
	function report( msg, comment, expected ) {
		context.report({
			'node': null,
			'message': msg,
			'loc': comment.loc,
			'fix': fix
		});

		/**
		* Fixes the lint error.
		*
		* @private
		* @param {Object} fixer - ESLint fixer
		* @returns {Object} fix
		*/
		function fix( fixer ) {
			var header = comment.value;
			header = replace( header, RE_COPYRIGHT, 'Copyright (c) '+expected+' The Stdlib Authors.' );
			return fixer.replaceTextRange( comment.range, '/*'+header+'*/' );
		}
	}

	/**
	* Checks license header comments.
	*
	* @private
	*/
	function validate() {
		var comments;
		var expected;
		var comment;
		var match;
		var year;

		comments = source.getAllComments();
		if ( comments.length === 0 ) {
			return;
		}
		comment = comments[ 0 ];
		match = RE_COPYRIGHT.exec( comment.value );
		if ( match ) {
			year = match[ 1 ];

			// Use `git` to determine the year the file was created...
			try {
				expected = execSync( 'git log --diff-filter=A --follow --format=%ad --date=short -- '+filename, {
					'encoding': 'utf8'
				});
				expected = expected.split( '-' )[ 0 ];
				if ( year !== expected ) {
					report( 'Expected year to be '+expected+' and not '+year, comment, expected );
				}
			} catch ( err ) {
				// Do nothing if unable to determine the year the file was created (e.g., if the file is not tracked yet by `git`).
			}
		}
	}
}


// MAIN //

rule = {
	'meta': {
		'docs': {
			'description': 'ensure that the year in a stdlib license header matches the year the file was created'
		},
		'schema': [],
		'fixable': 'code'
	},
	'create': main
};


// EXPORTS //

module.exports = rule;
