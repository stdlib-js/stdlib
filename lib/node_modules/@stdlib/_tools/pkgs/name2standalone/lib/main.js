/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isString = require( '@stdlib/assert/is-string' ).isPrimitive;
var isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );
var startsWith = require( '@stdlib/string/starts-with' );
var replace = require( '@stdlib/string/replace' );
var format = require( '@stdlib/string/format' );


// VARIABLES //

var SCOPE = '@stdlib/';
var RE = /\//g;


// MAIN //

/**
* Converts a stdlib package name (or list of package names) to a standalone package name.
*
* ## Notes
*
* -   Non-stdlib package names are returned unchanged.
*
* @param {(string|StringArray)} name - package name(s)
* @throws {TypeError} must provide a string or an array of strings
* @returns {(string|StringArray)} standalone package name(s)
*
* @example
* var name = name2standalone( '@stdlib/math/base/special/sin' );
* // returns '@stdlib/math-base-special-sin'
*
* @example
* var pkgs = [
*     '@stdlib/math/base/special/sin'
* ];
*
* var out = name2standalone( pkgs );
* // returns [ '@stdlib/math-base-special-sin' ]
*/
function name2standalone( name ) {
	var out;
	var n;
	var i;
	if ( isString( name ) ) {
		if ( startsWith( name, SCOPE ) ) {
			return SCOPE + replace( name.substring( 8 ), RE, '-' );
		}
		return name;
	}
	if ( !isArrayLikeObject( name ) ) {
		throw new TypeError( format( 'invalid argument. Must provide either a string or an array of strings. Value: `%s`.', name ) );
	}
	out = [];
	for ( i = 0; i < name.length; i++ ) {
		n = name[ i ];
		if ( !isString( n ) ) {
			throw new TypeError( format( 'invalid argument. Must provide either a string or an array of strings. Value: `%s`. Index: `%u`.', n, i ) );
		}
		if ( startsWith( n, SCOPE ) ) {
			out.push( SCOPE + replace( n.substring( 8 ), RE, '-' ) );
		} else {
			out.push( n );
		}
	}
	return out;
}


// EXPORTS //

module.exports = name2standalone;
