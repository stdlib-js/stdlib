/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isString = require( '@stdlib/assert/is-string' ).isPrimitive;
var format = require( '@stdlib/string/format' );
var copy = require( '@stdlib/utils/copy' );
var validate = require( './validate.js' );
var deps = require( './deps.js' );
var config = require( './config.json' );


// FUNCTIONS //

/**
* Comparator function for sorting characters in ascending order.
*
* @private
* @param {string} a - character
* @param {string} b - character
* @returns {number} comparison value
*/
function ascending( a, b ) {
	if ( a < b ) {
		return -1;
	}
	if ( a === b ) {
		return 0;
	}
	return 1;
}


// MAIN //

/**
* Returns a list of dependencies for a specified stdlib package.
*
* @param {string} pkg - package name
* @param {Options} [options] - function options
* @param {string} [options.dev=false] - boolean indicating whether to return development dependencies
* @throws {TypeError} first argument must be a string
* @returns {(StringArray|EmptyArray)} dependencies
*/
function depList( pkg, options ) {
	var opts;
	var err;

	if ( !isString( pkg ) ) {
		throw new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', pkg ) );
	}
	opts = copy( config );
	if ( arguments.length > 1 ) {
		err = validate( opts, options );
		if ( err ) {
			throw err;
		}
	}
	return deps( pkg, opts.dev ).sort( ascending );
}


// EXPORTS //

module.exports = depList;
