/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var dirname = require( '@stdlib/utils/dirname' );
var convertPath = require( '@stdlib/utils/convert-path' );


// FUNCTIONS //

/**
* Returns the last index of a substring matching a specified string.
*
* @private
* @param {string} str - string to search
* @param {string} search - string to match
* @returns {integer} index
*/
function lastIndexOf( str, search ) {
	var sub;
	var len;
	var N;
	var i;
	var j;

	len = str.length;
	N = search.length;
	if ( N > len ) {
		return -1;
	}
	for ( j = str.length; j >= N; j-- ) {
		i = j - N;
		sub = str.substring( i, j );
		if ( sub === search ) {
			return i;
		}
	}
	return -1;
}


// MAIN //

/**
* Transforms a raw `package.json` list into package names.
*
* @private
* @param {StringArray} files - list of `package.json` absolute file paths
* @returns {StringArray} list of package names
*
* @example
* var files = [ '/stdlib/stdlib/lib/node_modules/@stdlib/constants/float64/min-safe-integer/package.json' ];
*
* var names = transform( files );
* // returns [ '@stdlib/constants/float64/min-safe-integer' ]
*/
function transform( files ) {
	var match;
	var name;
	var out;
	var i;

	out = [];
	for ( i = 0; i < files.length; i++ ) {
		match = lastIndexOf( files[ i ], '@stdlib' );
		if ( match >= 0 ) {
			name = files[ i ].substring( match );
			name = dirname( name );
			out.push( convertPath( name, 'posix' ) );
		}
	}
	return out;
}


// EXPORTS //

module.exports = transform;
