/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var logger = require( 'debug' );
var exists = require( '@stdlib/fs/exists' ).sync;
var format = require( '@stdlib/string/format' );


// VARIABLES //

var debug = logger( 'entry-points:sync:resolve-files' );


// MAIN //

/**
* Resolves a list of files.
*
* @private
* @param {StringArray} files - list of absolute file paths
* @returns {(StringArray|Error)} resolved files or error
*/
function resolveFiles( files ) {
	var bool;
	var file;
	var out;
	var len;
	var err;
	var i;
	var k;

	len = files.length;
	out = new Array( len );

	debug( 'Resolving %d files...', len );
	for ( i = 0; i < len; i++ ) {
		file = files[ i ];
		k = i + 1;
		debug( 'Resolving file: %s (%d of %d).', file, k, len );
		bool = exists( file );
		if ( !bool ) {
			err = new Error( format( 'unexpected error. File does not exist. Unable to resolve file: `%s`.', file ) );
			debug( 'Encountered an error while resolving file: %s (%d of %d). Error: %s', file, k, len, err.message );
			return err;
		}
		debug( 'Resolved file: %s (%d of %d). File: %s.', file, k, len, file );
		out[ i ] = file;
	}
	debug( 'Resolved all files.' );
	return out;
}


// EXPORTS //

module.exports = resolveFiles;
