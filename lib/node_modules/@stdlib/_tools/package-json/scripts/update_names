#!/usr/bin/env node

/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/*
* Update package `package.json` files by setting the `name` field.
*
* To enable verbose logging, set the `DEBUG` environment variable.
*
* ``` bash
* $ DEBUG=* update_names
* ```
*/

// MODULES //

var join = require( 'path' ).join;
var resolve = require( 'path' ).resolve;
var logger = require( 'debug' );
var writeFile = require( '@stdlib/fs/write-file' ).sync;
var hasOwnProp = require( '@stdlib/assert/has-own-property' );
var SEP = require( '@stdlib/constants/path/sep' );
var findPkgs = require( '@stdlib/_tools/pkgs/find' ).sync;
var rootDir = require( '@stdlib/_tools/utils/root-dir' );


// VARIABLES //

var debug = logger( 'update-package-names' );
var ROOT = resolve( rootDir(), 'lib', 'node_modules' );


// FUNCTIONS //

/**
* Updates package `package.json` files by setting the `name` field.
*
* ## Notes
*
* -   The implementation assumes that a package name can be inferred from the directory structure.
*
* @private
*/
function main() {
	var fpath;
	var parts;
	var name;
	var opts;
	var pkgs;
	var pkg;
	var i;

	debug( 'Searching for packages in %s.', ROOT );
	opts = {
		'dir': ROOT,
		'pattern': '**/package.json'
	};
	pkgs = findPkgs( opts );
	debug( 'Found %d packages.', pkgs.length );

	for ( i = 0; i < pkgs.length; i++ ) {
		fpath = join( pkgs[ i ], 'package.json' );
		debug( 'Loading package file: %s (%d of %d).', fpath, i+1, pkgs.length );
		pkg = require( fpath ); // eslint-disable-line stdlib/no-dynamic-require
		if ( !hasOwnProp( pkg, 'name' ) ) {
			debug( 'Found a package missing a `name` field: %s. Skipping.', fpath );
			continue;
		}
		name = fpath.substring( ROOT.length );
		debug( 'Package path: %s.', name );

		// Remove initial slash and `/package.json`:
		name = name.substring( 1, name.length-13 );

		// Split the path based on the platform:
		parts = name.split( SEP );

		// Recombine into a package name:
		name = parts.join( '/' );
		debug( 'Package name: %s.', name );
		pkg.name = name;

		debug( 'Serializing package data.' );
		pkg = JSON.stringify( pkg, null, 2 ); // 2-space indentation

		debug( 'Writing package data to file.' );
		writeFile( fpath, pkg+'\n', {
			'encoding': 'utf8'
		});
	}
	debug( 'Finished updating all packages.' );
}


// MAIN //

main();
