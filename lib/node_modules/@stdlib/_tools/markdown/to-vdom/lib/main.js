/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var remark = require( 'remark' );
var toVirtualDOM = require( 'remark-vdom' );
var headingSlugs = require( 'remark-slug' );
var isString = require( '@stdlib/assert/is-string' ).isPrimitive;
var isBuffer = require( '@stdlib/assert/is-buffer' );
var format = require( '@stdlib/string/format' );


// VARIABLES //

var transform = remark()
	.use( headingSlugs )
	.use( toVirtualDOM )
	.processSync;


// MAIN //

/**
* Converts Markdown to Virtual DOM.
*
* @param {(string|Buffer)} markdown - markdown to convert
* @throws {TypeError} must provide either a string or a Buffer
* @returns {VTree} virtual tree
*
* @example
* var markdown = '# Beep\n> Boop!';
*
* var vtree = convert( markdown );
*/
function convert( markdown ) {
	if (
		!isString( markdown ) &&
		!isBuffer( markdown )
	) {
		throw new TypeError( format( 'invalid argument. Must provide either a string or a Buffer. Value: `%s`.', markdown ) );
	}
	return transform( markdown.toString() ).contents;
}


// EXPORTS //

module.exports = convert;
