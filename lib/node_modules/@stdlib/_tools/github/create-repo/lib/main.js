/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var factory = require( './factory.js' );


// MAIN //

/**
* Creates a GitHub repository.
*
* @param {string} name - repository name
* @param {Object} opts - function options
* @param {string} opts.token - GitHub access token
* @param {string} [opts.useragent] - user agent string
* @param {string} [opts.desc=""] - repository description
* @param {string} [opts.homepage=""] - repository homepage
* @param {number} [opts.team] - team id (organizations)
* @param {string} [opts.gitignore] - .gitignore template
* @param {string} [opts.license] - LICENSE template
* @param {boolean} [opts.private=false] - boolean indicating whether a repository should be private
* @param {boolean} [opts.issues=true] - boolean indicating whether issues should be enabled
* @param {boolean} [options.projects=true] - boolean indicating whether project boards should be enabled
* @param {boolean} [opts.wiki=true] - boolean indicating whether a repository should have a wiki
* @param {boolean} [opts.downloads=true] - boolean indicating whether downloads should be enabled
* @param {boolean} [opts.init=false] - boolean indicating whether to initialize the repository with an empty README
* @param {boolean} [options.allowSquashMerge=true] - boolean indicating whether to allow squash-merging
* @param {boolean} [options.allowMergeCommit=true] - boolean indicating whether to allow merging pull requests with a merge commit
* @param {boolean} [options.allowRebaseMerge=true] - boolean indicating whether to allow rebase-merging pull requests
* @param {Function} clbk - callback to invoke upon query completion
* @returns {void}
*/
function createRepo( name, opts, clbk ) {
	factory( opts, clbk )( name );
}


// EXPORTS //

module.exports = createRepo;
