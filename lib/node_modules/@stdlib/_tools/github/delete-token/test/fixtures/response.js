/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var EventEmitter = require( 'events' ).EventEmitter;
var noop = require( '@stdlib/utils/noop' );


// MAIN //

/**
* Mock HTTP response constructor.
*
* @constructor
* @param {number} statusCode - mock status code
* @returns {Response} mock HTTP response object
*/
function Response( statusCode ) { // eslint-disable-line stdlib/no-redeclare
	var self;
	if ( !( this instanceof Response ) ) {
		return new Response( statusCode );
	}
	EventEmitter.call( this );
	this.statusCode = statusCode;

	self = this;
	setTimeout( onTimeout, 0 );

	return this;

	/**
	* Callback invoked in the next event loop.
	*
	* @private
	* @returns {void}
	*/
	function onTimeout() {
		if ( statusCode !== 204 ) {
			self.emit( 'data', 'bad request' );
			return self.emit( 'end' );
		}
		self.emit( 'end' );
	}
}
Response.prototype = Object.create( EventEmitter.prototype );

Response.prototype.constructor = Response;

Response.prototype.setEncoding = noop;


// EXPORTS //

module.exports = Response;
