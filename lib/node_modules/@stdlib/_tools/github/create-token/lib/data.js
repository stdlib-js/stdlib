/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var logger = require( 'debug' );
var lpad = require( '@stdlib/string/left-pad' );


// VARIABLES //

var debug = logger( 'github-create-token:data' );


// MAIN //

/**
* Extracts data to be posted to a remote endpoint.
*
* @param {Object} opts - function options
* @param {StringArray} opts.scopes - list of scopes
* @param {string} opts.note - note regarding the purpose of the token
* @param {string} [opts.note_url] - application URL
* @param {string} [opts.client_id] - app OAuth client id
* @param {string} [opts.client_secret] - app OAuth client secret
* @param {string} [opts.fingerprint] - unique token id
* @returns {string} data to post
*/
function data( opts ) {
	var out;
	var str;

	out = {};

	out.scopes = opts.scopes;
	debug( 'Token scopes: %s', opts.scopes );

	out.note = opts.note;
	debug( 'Token note: %s', opts.note );

	if ( opts.note_url ) {
		out.note_url = opts.note_url;
		debug( 'Token note URL: %s', opts.note_url );
	}
	if ( opts.client_id ) {
		out.client_id = opts.client_id;
		str = opts.client_id.substring( opts.client_id.length-4 );
		str = lpad( str, 20, 'x' );
		debug( 'Token client id: %s', str );
	}
	if ( opts.client_secret ) {
		out.client_secret = opts.client_secret;
		str = opts.client_secret.substring( opts.client_secret.length-4 );
		str = lpad( str, 40, 'x' );
		debug( 'Token client secret: %s', str );
	}
	if ( opts.fingerprint ) {
		out.fingerprint = opts.fingerprint;
		debug( 'Token fingerprint: %s', opts.fingerprint );
	}
	return JSON.stringify( out );
}


// EXPORTS //

module.exports = data;
