/**
* @license Apache-2.0
*
* Copyright (c) 2020 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var hasOwnProp = require( '@stdlib/assert/has-own-property' );
var ratelimit = require( './../lib/ratelimit.js' );


// FUNCTIONS //

function setup() {
	return {
		'x-ratelimit-limit': '5000',
		'x-ratelimit-remaining': '4984',
		'x-ratelimit-reset': '1372700873'
	};
}


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof ratelimit, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns an object', function test( t ) {
	var info = ratelimit( setup() );
	t.equal( typeof info, 'object', 'returns an object' );
	t.end();
});

tape( 'the function returns an object with a `limit` property', function test( t ) {
	var info = ratelimit( setup() );
	t.equal( hasOwnProp( info, 'limit' ), true, 'has property' );
	t.equal( info.limit, 5000, 'equals 5000' );
	t.end();
});

tape( 'the function returns an object with a `remaining` property', function test( t ) {
	var info = ratelimit( setup() );
	t.equal( hasOwnProp( info, 'remaining' ), true, 'has property' );
	t.equal( info.remaining, 4984, 'equals 4984' );
	t.end();
});

tape( 'the function returns an object with a `reset` property', function test( t ) {
	var info = ratelimit( setup() );
	t.equal( hasOwnProp( info, 'reset' ), true, 'has property' );
	t.equal( info.reset, 1372700873, 'equals 1372700873' );
	t.end();
});
