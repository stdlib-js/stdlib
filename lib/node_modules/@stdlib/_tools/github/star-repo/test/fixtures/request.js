/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var EventEmitter = require( 'events' ).EventEmitter;
var noop = require( '@stdlib/utils/noop' );
var Response = require( './response.js' ); // eslint-disable-line stdlib/no-redeclare


// MAIN //

/**
* Returns a mock HTTP request constructor.
*
* @param {Object} ref - reference to parent object
* @param {(Error|null)} err - error object
* @param {number} [statusCode=204] - response status code
* @returns {Request} mock HTTP request constructor
*/
function create( ref, err, statusCode ) {
	statusCode = statusCode || 204;

	/**
	* Mock HTTP request constructor.
	*
	* @constructor
	* @param {Object} opts - request options
	* @param {Function} clbk - callback to invoke after receiving a response
	* @returns {Request} mock HTTP request object
	*/
	function Request( opts, clbk ) {
		var self;
		if ( !( this instanceof Request ) ) {
			return new Request( opts, clbk );
		}
		self = this;
		EventEmitter.call( this );

		ref._opts = opts; // eslint-disable-line no-underscore-dangle

		setTimeout( onTimeout, 0 );

		return this;

		/**
		* Callback invoked in the next event loop.
		*
		* @private
		* @returns {void}
		*/
		function onTimeout() {
			if ( err ) {
				return self.emit( 'error', err );
			}
			clbk( new Response( statusCode ) );
		}
	}

	Request.prototype = Object.create( EventEmitter.prototype );

	Request.prototype.constructor = Request;

	Request.prototype.write = noop;

	Request.prototype.end = noop;

	return Request;
}


// EXPORTS //

module.exports = create;
