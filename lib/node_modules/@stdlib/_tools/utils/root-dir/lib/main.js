/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var resolve = require( 'path' ).resolve;
var resolveParentPathBy = require( '@stdlib/fs/resolve-parent-path-by' ).sync;
var readJSON = require( '@stdlib/fs/read-json' ).sync;
var dirname = require( '@stdlib/utils/dirname' );


// VARIABLES //

var OPTS = {
	'dir': resolve( __dirname, '..' ) // start from parent directory
};
var ROOT_DIR;


// FUNCTIONS //

/**
* Tests whether a resolved path satisfies test criteria.
*
* @private
* @param {string} path - a resolved path
* @returns {boolean} test result
*/
function predicate( path ) {
	var pkg = readJSON( path );
	return ( pkg.name === '@stdlib/stdlib' );
}


// MAIN //

/**
* Synchronously resolves the root project directory.
*
* @throws {Error} unable to resolve root project directory
* @returns {(string|null)} path of root project directory
*
* @example
* var path = rootDir();
* // returns '...'
*/
function rootDir() {
	var path;
	if ( ROOT_DIR ) {
		return ROOT_DIR;
	}
	path = resolveParentPathBy( 'package.json', OPTS, predicate );
	if ( path === null ) {
		throw new Error( 'unexpected error. Unable to resolve root project directory.' );
	}
	ROOT_DIR = dirname( path );
	return ROOT_DIR;
}


// EXPORTS //

module.exports = rootDir;
