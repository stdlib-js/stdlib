/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var proxyquire = require( 'proxyquire' );
var rootDir = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.strictEqual( typeof rootDir, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns a string', function test( t ) {
	t.strictEqual( typeof rootDir(), 'string', 'returns expected value' );
	t.strictEqual( typeof rootDir(), 'string', 'returns expected value' );
	t.strictEqual( typeof rootDir(), 'string', 'returns expected value' );
	t.end();
});

tape( 'the function throws an error if unable to resolve the root project directory', function test( t ) {
	var rootDir;
	var mock;

	mock = {
		'sync': resolve
	};
	rootDir = proxyquire( './../lib/main.js', {
		'@stdlib/fs/resolve-parent-path-by': mock
	});
	t.throws( rootDir, Error, 'returns expected value' );
	t.end();

	function resolve() {
		throw new Error( 'beep' );
	}
});
