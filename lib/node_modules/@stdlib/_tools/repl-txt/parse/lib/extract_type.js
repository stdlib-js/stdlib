/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var contains = require( '@stdlib/assert/contains' );


// VARIABLES //

var RE_ANGLE = /(Array)<([^>]*)>/;


// MAIN //

/**
* Extracts the type of the given tag.
*
* @private
* @param {string} str - tag string
* @returns {Object} object containing type information for the given tag
*/
function extractType( str ) {
	var types;
	var match;
	var i;

	if ( contains( str, '|' ) ) {
		types = str.split( '|' );
		for ( i = 0; i < types.length; i++ ) {
			match = types[ i ].match( RE_ANGLE );
			if ( match ) {
				types[ i ] = {
					'type': 'TypedObject',
					'name': match[ 1 ],
					'of': match[ 2 ]
				};
			} else {
				types[ i ] = {
					'name': types[ i ]
				};
			}
		}
		return {
			'type': 'UnionType',
			'elements': types
		};
	}
	match = str.match( RE_ANGLE );
	if ( match ) {
		return {
			'type': 'TypedObject',
			'name': match[ 1 ],
			'of': match[ 2 ]
		};
	}
	return {
		'name': str
	};
}


// EXPORTS //

module.exports = extractType;
