/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/*
* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );


// MAIN //

/**
* Top-level namespace.
*
* @namespace constants
*/
var constants = {};

/**
* @name COMPLEX128_NUM_BYTES
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/complex128-num-bytes}
*/
setReadOnly( constants, 'COMPLEX128_NUM_BYTES', require( '@stdlib/constants/math/complex128-num-bytes' ) );

/**
* @name COMPLEX64_NUM_BYTES
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/complex64-num-bytes}
*/
setReadOnly( constants, 'COMPLEX64_NUM_BYTES', require( '@stdlib/constants/math/complex64-num-bytes' ) );

/**
* @name FLOAT16_CBRT_EPS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float16-cbrt-eps}
*/
setReadOnly( constants, 'FLOAT16_CBRT_EPS', require( '@stdlib/constants/math/float16-cbrt-eps' ) );

/**
* @name FLOAT16_EPS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float16-eps}
*/
setReadOnly( constants, 'FLOAT16_EPS', require( '@stdlib/constants/math/float16-eps' ) );

/**
* @name FLOAT16_EXPONENT_BIAS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float16-exponent-bias}
*/
setReadOnly( constants, 'FLOAT16_EXPONENT_BIAS', require( '@stdlib/constants/math/float16-exponent-bias' ) );

/**
* @name FLOAT16_MAX
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float16-max}
*/
setReadOnly( constants, 'FLOAT16_MAX', require( '@stdlib/constants/math/float16-max' ) );

/**
* @name FLOAT16_MAX_SAFE_INTEGER
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float16-max-safe-integer}
*/
setReadOnly( constants, 'FLOAT16_MAX_SAFE_INTEGER', require( '@stdlib/constants/math/float16-max-safe-integer' ) );

/**
* @name FLOAT16_MIN_SAFE_INTEGER
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float16-min-safe-integer}
*/
setReadOnly( constants, 'FLOAT16_MIN_SAFE_INTEGER', require( '@stdlib/constants/math/float16-min-safe-integer' ) );

/**
* @name FLOAT16_NINF
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float16-ninf}
*/
setReadOnly( constants, 'FLOAT16_NINF', require( '@stdlib/constants/math/float16-ninf' ) );

/**
* @name FLOAT16_NUM_BYTES
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float16-num-bytes}
*/
setReadOnly( constants, 'FLOAT16_NUM_BYTES', require( '@stdlib/constants/math/float16-num-bytes' ) );

/**
* @name FLOAT16_PINF
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float16-pinf}
*/
setReadOnly( constants, 'FLOAT16_PINF', require( '@stdlib/constants/math/float16-pinf' ) );

/**
* @name FLOAT16_PRECISION
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float16-precision}
*/
setReadOnly( constants, 'FLOAT16_PRECISION', require( '@stdlib/constants/math/float16-precision' ) );

/**
* @name FLOAT16_SMALLEST_NORMAL
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float16-smallest-normal}
*/
setReadOnly( constants, 'FLOAT16_SMALLEST_NORMAL', require( '@stdlib/constants/math/float16-smallest-normal' ) );

/**
* @name FLOAT16_SMALLEST_SUBNORMAL
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float16-smallest-subnormal}
*/
setReadOnly( constants, 'FLOAT16_SMALLEST_SUBNORMAL', require( '@stdlib/constants/math/float16-smallest-subnormal' ) );

/**
* @name FLOAT16_SQRT_EPS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float16-sqrt-eps}
*/
setReadOnly( constants, 'FLOAT16_SQRT_EPS', require( '@stdlib/constants/math/float16-sqrt-eps' ) );

/**
* @name FLOAT32_CBRT_EPS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float32-cbrt-eps}
*/
setReadOnly( constants, 'FLOAT32_CBRT_EPS', require( '@stdlib/constants/math/float32-cbrt-eps' ) );

/**
* @name FLOAT32_EPS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float32-eps}
*/
setReadOnly( constants, 'FLOAT32_EPS', require( '@stdlib/constants/math/float32-eps' ) );

/**
* @name FLOAT32_EXPONENT_BIAS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float32-exponent-bias}
*/
setReadOnly( constants, 'FLOAT32_EXPONENT_BIAS', require( '@stdlib/constants/math/float32-exponent-bias' ) );

/**
* @name FLOAT32_MAX
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float32-max}
*/
setReadOnly( constants, 'FLOAT32_MAX', require( '@stdlib/constants/math/float32-max' ) );

/**
* @name FLOAT32_MAX_SAFE_INTEGER
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float32-max-safe-integer}
*/
setReadOnly( constants, 'FLOAT32_MAX_SAFE_INTEGER', require( '@stdlib/constants/math/float32-max-safe-integer' ) );

/**
* @name FLOAT32_MIN_SAFE_INTEGER
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float32-min-safe-integer}
*/
setReadOnly( constants, 'FLOAT32_MIN_SAFE_INTEGER', require( '@stdlib/constants/math/float32-min-safe-integer' ) );

/**
* @name FLOAT32_NINF
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float32-ninf}
*/
setReadOnly( constants, 'FLOAT32_NINF', require( '@stdlib/constants/math/float32-ninf' ) );

/**
* @name FLOAT32_NUM_BYTES
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float32-num-bytes}
*/
setReadOnly( constants, 'FLOAT32_NUM_BYTES', require( '@stdlib/constants/math/float32-num-bytes' ) );

/**
* @name FLOAT32_PINF
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float32-pinf}
*/
setReadOnly( constants, 'FLOAT32_PINF', require( '@stdlib/constants/math/float32-pinf' ) );

/**
* @name FLOAT32_PRECISION
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float32-precision}
*/
setReadOnly( constants, 'FLOAT32_PRECISION', require( '@stdlib/constants/math/float32-precision' ) );

/**
* @name FLOAT32_SMALLEST_NORMAL
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float32-smallest-normal}
*/
setReadOnly( constants, 'FLOAT32_SMALLEST_NORMAL', require( '@stdlib/constants/math/float32-smallest-normal' ) );

/**
* @name FLOAT32_SMALLEST_SUBNORMAL
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float32-smallest-subnormal}
*/
setReadOnly( constants, 'FLOAT32_SMALLEST_SUBNORMAL', require( '@stdlib/constants/math/float32-smallest-subnormal' ) );

/**
* @name FLOAT32_SQRT_EPS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float32-sqrt-eps}
*/
setReadOnly( constants, 'FLOAT32_SQRT_EPS', require( '@stdlib/constants/math/float32-sqrt-eps' ) );

/**
* @name APERY
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-apery}
*/
setReadOnly( constants, 'APERY', require( '@stdlib/constants/math/float64-apery' ) );

/**
* @name CATALAN
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-catalan}
*/
setReadOnly( constants, 'CATALAN', require( '@stdlib/constants/math/float64-catalan' ) );

/**
* @name CBRT_EPS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-cbrt-eps}
*/
setReadOnly( constants, 'CBRT_EPS', require( '@stdlib/constants/math/float64-cbrt-eps' ) );

/**
* @name E
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-e}
*/
setReadOnly( constants, 'E', require( '@stdlib/constants/math/float64-e' ) );

/**
* @name EPS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-eps}
*/
setReadOnly( constants, 'EPS', require( '@stdlib/constants/math/float64-eps' ) );

/**
* @name EULERGAMMA
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-eulergamma}
*/
setReadOnly( constants, 'EULERGAMMA', require( '@stdlib/constants/math/float64-eulergamma' ) );

/**
* @name FLOAT64_EXPONENT_BIAS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-exponent-bias}
*/
setReadOnly( constants, 'FLOAT64_EXPONENT_BIAS', require( '@stdlib/constants/math/float64-exponent-bias' ) );

/**
* @name FOURTH_PI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-fourth-pi}
*/
setReadOnly( constants, 'FOURTH_PI', require( '@stdlib/constants/math/float64-fourth-pi' ) );

/**
* @name FOURTH_ROOT_EPS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-fourth-root-eps}
*/
setReadOnly( constants, 'FOURTH_ROOT_EPS', require( '@stdlib/constants/math/float64-fourth-root-eps' ) );

/**
* @name GLAISHER
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-glaisher-kinkelin}
*/
setReadOnly( constants, 'GLAISHER', require( '@stdlib/constants/math/float64-glaisher-kinkelin' ) );

/**
* @name HALF_LN2
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-half-ln-two}
*/
setReadOnly( constants, 'HALF_LN2', require( '@stdlib/constants/math/float64-half-ln-two' ) );

/**
* @name HALF_PI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-half-pi}
*/
setReadOnly( constants, 'HALF_PI', require( '@stdlib/constants/math/float64-half-pi' ) );

/**
* @name FLOAT64_HIGH_WORD_EXPONENT_MASK
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-high-word-exponent-mask}
*/
setReadOnly( constants, 'FLOAT64_HIGH_WORD_EXPONENT_MASK', require( '@stdlib/constants/math/float64-high-word-exponent-mask' ) );

/**
* @name FLOAT64_HIGH_WORD_SIGNIFICAND_MASK
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-high-word-significand-mask}
*/
setReadOnly( constants, 'FLOAT64_HIGH_WORD_SIGNIFICAND_MASK', require( '@stdlib/constants/math/float64-high-word-significand-mask' ) );

/**
* @name LN_HALF
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-ln-half}
*/
setReadOnly( constants, 'LN_HALF', require( '@stdlib/constants/math/float64-ln-half' ) );

/**
* @name LN_PI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-ln-pi}
*/
setReadOnly( constants, 'LN_PI', require( '@stdlib/constants/math/float64-ln-pi' ) );

/**
* @name LN_SQRT_TWO_PI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-ln-sqrt-two-pi}
*/
setReadOnly( constants, 'LN_SQRT_TWO_PI', require( '@stdlib/constants/math/float64-ln-sqrt-two-pi' ) );

/**
* @name LN10
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-ln-ten}
*/
setReadOnly( constants, 'LN10', require( '@stdlib/constants/math/float64-ln-ten' ) );

/**
* @name LN2
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-ln-two}
*/
setReadOnly( constants, 'LN2', require( '@stdlib/constants/math/float64-ln-two' ) );

/**
* @name LN_TWO_PI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-ln-two-pi}
*/
setReadOnly( constants, 'LN_TWO_PI', require( '@stdlib/constants/math/float64-ln-two-pi' ) );

/**
* @name LOG10E
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-log10-e}
*/
setReadOnly( constants, 'LOG10E', require( '@stdlib/constants/math/float64-log10-e' ) );

/**
* @name LOG2E
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-log2-e}
*/
setReadOnly( constants, 'LOG2E', require( '@stdlib/constants/math/float64-log2-e' ) );

/**
* @name FLOAT64_MAX
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-max}
*/
setReadOnly( constants, 'FLOAT64_MAX', require( '@stdlib/constants/math/float64-max' ) );

/**
* @name FLOAT64_MAX_BASE10_EXPONENT
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-max-base10-exponent}
*/
setReadOnly( constants, 'FLOAT64_MAX_BASE10_EXPONENT', require( '@stdlib/constants/math/float64-max-base10-exponent' ) );

/**
* @name FLOAT64_MAX_BASE10_EXPONENT_SUBNORMAL
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-max-base10-exponent-subnormal}
*/
setReadOnly( constants, 'FLOAT64_MAX_BASE10_EXPONENT_SUBNORMAL', require( '@stdlib/constants/math/float64-max-base10-exponent-subnormal' ) );

/**
* @name FLOAT64_MAX_BASE2_EXPONENT
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-max-base2-exponent}
*/
setReadOnly( constants, 'FLOAT64_MAX_BASE2_EXPONENT', require( '@stdlib/constants/math/float64-max-base2-exponent' ) );

/**
* @name FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-max-base2-exponent-subnormal}
*/
setReadOnly( constants, 'FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL', require( '@stdlib/constants/math/float64-max-base2-exponent-subnormal' ) );

/**
* @name FLOAT64_MAX_LN
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-max-ln}
*/
setReadOnly( constants, 'FLOAT64_MAX_LN', require( '@stdlib/constants/math/float64-max-ln' ) );

/**
* @name FLOAT64_MAX_SAFE_FIBONACCI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-max-safe-fibonacci}
*/
setReadOnly( constants, 'FLOAT64_MAX_SAFE_FIBONACCI', require( '@stdlib/constants/math/float64-max-safe-fibonacci' ) );

/**
* @name FLOAT64_MAX_SAFE_INTEGER
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-max-safe-integer}
*/
setReadOnly( constants, 'FLOAT64_MAX_SAFE_INTEGER', require( '@stdlib/constants/math/float64-max-safe-integer' ) );

/**
* @name FLOAT64_MAX_SAFE_LUCAS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-max-safe-lucas}
*/
setReadOnly( constants, 'FLOAT64_MAX_SAFE_LUCAS', require( '@stdlib/constants/math/float64-max-safe-lucas' ) );

/**
* @name FLOAT64_MAX_SAFE_NTH_FIBONACCI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-max-safe-nth-fibonacci}
*/
setReadOnly( constants, 'FLOAT64_MAX_SAFE_NTH_FIBONACCI', require( '@stdlib/constants/math/float64-max-safe-nth-fibonacci' ) );

/**
* @name FLOAT64_MAX_SAFE_NTH_LUCAS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-max-safe-nth-lucas}
*/
setReadOnly( constants, 'FLOAT64_MAX_SAFE_NTH_LUCAS', require( '@stdlib/constants/math/float64-max-safe-nth-lucas' ) );

/**
* @name FLOAT64_MIN_BASE10_EXPONENT
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-min-base10-exponent}
*/
setReadOnly( constants, 'FLOAT64_MIN_BASE10_EXPONENT', require( '@stdlib/constants/math/float64-min-base10-exponent' ) );

/**
* @name FLOAT64_MIN_BASE10_EXPONENT_SUBNORMAL
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-min-base10-exponent-subnormal}
*/
setReadOnly( constants, 'FLOAT64_MIN_BASE10_EXPONENT_SUBNORMAL', require( '@stdlib/constants/math/float64-min-base10-exponent-subnormal' ) );

/**
* @name FLOAT64_MIN_BASE2_EXPONENT
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-min-base2-exponent}
*/
setReadOnly( constants, 'FLOAT64_MIN_BASE2_EXPONENT', require( '@stdlib/constants/math/float64-min-base2-exponent' ) );

/**
* @name FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-min-base2-exponent-subnormal}
*/
setReadOnly( constants, 'FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL', require( '@stdlib/constants/math/float64-min-base2-exponent-subnormal' ) );

/**
* @name FLOAT64_MIN_LN
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-min-ln}
*/
setReadOnly( constants, 'FLOAT64_MIN_LN', require( '@stdlib/constants/math/float64-min-ln' ) );

/**
* @name FLOAT64_MIN_SAFE_INTEGER
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-min-safe-integer}
*/
setReadOnly( constants, 'FLOAT64_MIN_SAFE_INTEGER', require( '@stdlib/constants/math/float64-min-safe-integer' ) );

/**
* @name GAMMA_LANCZOS_G
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-gamma-lanczos-g}
*/
setReadOnly( constants, 'GAMMA_LANCZOS_G', require( '@stdlib/constants/math/float64-gamma-lanczos-g' ) );

/**
* @name NINF
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-ninf}
*/
setReadOnly( constants, 'NINF', require( '@stdlib/constants/math/float64-ninf' ) );

/**
* @name FLOAT64_NUM_BYTES
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-num-bytes}
*/
setReadOnly( constants, 'FLOAT64_NUM_BYTES', require( '@stdlib/constants/math/float64-num-bytes' ) );

/**
* @name PHI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-phi}
*/
setReadOnly( constants, 'PHI', require( '@stdlib/constants/math/float64-phi' ) );

/**
* @name PI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-pi}
*/
setReadOnly( constants, 'PI', require( '@stdlib/constants/math/float64-pi' ) );

/**
* @name PI_SQUARED
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-pi-squared}
*/
setReadOnly( constants, 'PI_SQUARED', require( '@stdlib/constants/math/float64-pi-squared' ) );

/**
* @name PINF
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-pinf}
*/
setReadOnly( constants, 'PINF', require( '@stdlib/constants/math/float64-pinf' ) );

/**
* @name FLOAT64_PRECISION
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-precision}
*/
setReadOnly( constants, 'FLOAT64_PRECISION', require( '@stdlib/constants/math/float64-precision' ) );

/**
* @name FLOAT64_SMALLEST_NORMAL
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-smallest-normal}
*/
setReadOnly( constants, 'FLOAT64_SMALLEST_NORMAL', require( '@stdlib/constants/math/float64-smallest-normal' ) );

/**
* @name FLOAT64_SMALLEST_SUBNORMAL
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-smallest-subnormal}
*/
setReadOnly( constants, 'FLOAT64_SMALLEST_SUBNORMAL', require( '@stdlib/constants/math/float64-smallest-subnormal' ) );

/**
* @name SQRT_EPS
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-sqrt-eps}
*/
setReadOnly( constants, 'SQRT_EPS', require( '@stdlib/constants/math/float64-sqrt-eps' ) );

/**
* @name SQRT_HALF
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-sqrt-half}
*/
setReadOnly( constants, 'SQRT_HALF', require( '@stdlib/constants/math/float64-sqrt-half' ) );

/**
* @name SQRT_HALF_PI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-sqrt-half-pi}
*/
setReadOnly( constants, 'SQRT_HALF_PI', require( '@stdlib/constants/math/float64-sqrt-half-pi' ) );

/**
* @name SQRT_PHI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-sqrt-phi}
*/
setReadOnly( constants, 'SQRT_PHI', require( '@stdlib/constants/math/float64-sqrt-phi' ) );

/**
* @name SQRT_PI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-sqrt-pi}
*/
setReadOnly( constants, 'SQRT_PI', require( '@stdlib/constants/math/float64-sqrt-pi' ) );

/**
* @name SQRT_THREE
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-sqrt-three}
*/
setReadOnly( constants, 'SQRT_THREE', require( '@stdlib/constants/math/float64-sqrt-three' ) );

/**
* @name SQRT_TWO
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-sqrt-two}
*/
setReadOnly( constants, 'SQRT_TWO', require( '@stdlib/constants/math/float64-sqrt-two' ) );

/**
* @name SQRT_TWO_PI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-sqrt-two-pi}
*/
setReadOnly( constants, 'SQRT_TWO_PI', require( '@stdlib/constants/math/float64-sqrt-two-pi' ) );

/**
* @name TWO_PI
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/float64-two-pi}
*/
setReadOnly( constants, 'TWO_PI', require( '@stdlib/constants/math/float64-two-pi' ) );

/**
* @name INT16_MAX
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/int16-max}
*/
setReadOnly( constants, 'INT16_MAX', require( '@stdlib/constants/math/int16-max' ) );

/**
* @name INT16_MIN
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/int16-min}
*/
setReadOnly( constants, 'INT16_MIN', require( '@stdlib/constants/math/int16-min' ) );

/**
* @name INT16_NUM_BYTES
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/int16-num-bytes}
*/
setReadOnly( constants, 'INT16_NUM_BYTES', require( '@stdlib/constants/math/int16-num-bytes' ) );

/**
* @name INT32_MAX
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/int32-max}
*/
setReadOnly( constants, 'INT32_MAX', require( '@stdlib/constants/math/int32-max' ) );

/**
* @name INT32_MIN
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/int32-min}
*/
setReadOnly( constants, 'INT32_MIN', require( '@stdlib/constants/math/int32-min' ) );

/**
* @name INT32_NUM_BYTES
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/int32-num-bytes}
*/
setReadOnly( constants, 'INT32_NUM_BYTES', require( '@stdlib/constants/math/int32-num-bytes' ) );

/**
* @name INT8_MAX
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/int8-max}
*/
setReadOnly( constants, 'INT8_MAX', require( '@stdlib/constants/math/int8-max' ) );

/**
* @name INT8_MIN
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/int8-min}
*/
setReadOnly( constants, 'INT8_MIN', require( '@stdlib/constants/math/int8-min' ) );

/**
* @name INT8_NUM_BYTES
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/int8-num-bytes}
*/
setReadOnly( constants, 'INT8_NUM_BYTES', require( '@stdlib/constants/math/int8-num-bytes' ) );

/**
* @name UINT16_MAX
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/uint16-max}
*/
setReadOnly( constants, 'UINT16_MAX', require( '@stdlib/constants/math/uint16-max' ) );

/**
* @name UINT16_NUM_BYTES
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/uint16-num-bytes}
*/
setReadOnly( constants, 'UINT16_NUM_BYTES', require( '@stdlib/constants/math/uint16-num-bytes' ) );

/**
* @name UINT32_MAX
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/uint32-max}
*/
setReadOnly( constants, 'UINT32_MAX', require( '@stdlib/constants/math/uint32-max' ) );

/**
* @name UINT32_NUM_BYTES
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/uint32-num-bytes}
*/
setReadOnly( constants, 'UINT32_NUM_BYTES', require( '@stdlib/constants/math/uint32-num-bytes' ) );

/**
* @name UINT8_MAX
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/uint8-max}
*/
setReadOnly( constants, 'UINT8_MAX', require( '@stdlib/constants/math/uint8-max' ) );

/**
* @name UINT8_NUM_BYTES
* @memberof constants
* @readonly
* @constant
* @type {number}
* @see {@link module:@stdlib/constants/math/uint8-num-bytes}
*/
setReadOnly( constants, 'UINT8_NUM_BYTES', require( '@stdlib/constants/math/uint8-num-bytes' ) );


// EXPORTS //

module.exports = constants;
