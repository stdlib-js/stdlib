/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Complex128 = require( '@stdlib/complex/float64' );


// MAIN //

/**
* Parse a string representation of a complex number and returns a Complex128 instance.
*
* @param {string} str - string representation of a complex number
* @throws {TypeError} must provide a string
* @throws {Error} must provide a valid string representation of a complex number
* @returns {Complex128} 128-bit complex number
*
* @example
* var str = '1 + 2j';
*
* var z = parseComplex128( str );
* // returns <Complex128>
*/
function parseComplex128(str) {
	var regex;
	var match;
	var re;
	var im;

	if (typeof str !== 'string') {
		throw new TypeError('Invalid input: expected a string.');
	}

	// Regular expression to match a complex number in the form 'a + bj', 'a - bj', 'bj', or 'a'
	regex = /^([-+]?(\d*\.?\d*(?:[eE][-+]?\d+)?|Infinity|NaN)j?)?([-+])?((\d*\.?\d*(?:[eE][-+]?\d+)?|Infinity|NaN)j)?$/;
	match = str.replace(/\s/g, '').match(regex);

	if (!match) {
		throw new Error('Invalid input: expected a string representation of a complex number in the form "a + bj", "a - bj", "bj", or "a".');
	}

	re = ( match[1] && !match[1].endsWith('j') ) ? parseFloat(match[1]) : 0;  // Real part

	// Imaginary part
	im = 0;
	if (match[4]) {
		im = ((match[3] === '-') ? -1 : 1) * parseFloat(match[4].replace('j', ''));
	} else if (match[1] && match[1].endsWith('j')) {
		im = parseFloat(match[1].replace('j', ''));
	}

	return new Complex128(re, im);
}


// EXPORTS //

module.exports = parseComplex128;
