#!/usr/bin/env node

/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var resolve = require( 'path' ).resolve;
var readFileSync = require( '@stdlib/fs/read-file' ).sync;
var CLI = require( '@stdlib/cli/ctor' );
var lpad = require( '@stdlib/string/left-pad' );
var umask = require( './../lib' );


// MAIN //

/**
* Main execution sequence.
*
* @private
* @returns {void}
*/
function main() {
	var flags;
	var opts;
	var cli;
	var out;

	// Create a command-line interface:
	cli = new CLI({
		'pkg': require( './../package.json' ),
		'options': require( './../etc/cli_opts.json' ),
		'help': readFileSync( resolve( __dirname, '..', 'docs', 'usage.txt' ), {
			'encoding': 'utf8'
		})
	});

	// Get any provided command-line options:
	flags = cli.flags();
	if ( flags.help || flags.version ) {
		return;
	}

	opts = {};
	if ( flags.symbolic ) {
		opts.symbolic = flags.symbolic;
	}

	// Get the process `mask`:
	out = umask( opts );

	// Print the result:
	if ( opts.symbolic ) {
		out = out.toString();
		if ( flags.print ) {
			return console.log( 'umask -S %s', out ); // eslint-disable-line no-console
		}
		return console.log( out ); // eslint-disable-line no-console
	}
	out = lpad( out.toString( 8 ), 4, '0' );
	if ( flags.print ) {
		return console.log( 'umask %s', out ); // eslint-disable-line no-console
	}
	console.log( out ); // eslint-disable-line no-console
}

main();
