
{{alias}}( N, x, stride )
    Computes the sum of absolute values (L1 norm) of single-precision floating-
    point strided array elements using pairwise summation.

    The `N` and `stride` parameters determine which elements in the strided 
    array are accessed at runtime.

    Indexing is relative to the first index. To introduce an offset, use a typed
    array view.

    If `N <= 0`, the function returns `0.0`.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    x: Float32Array
        Input array.

    stride: integer
        Index increment.

    Returns
    -------
    out: number
        Sum.

    Examples
    --------
    // Standard Usage:
    > var x = new {{alias:@stdlib/array/float32}}( [ 1.0, -2.0, 2.0 ] );
    > {{alias}}( x.length, x, 1 )
    5.0

    // Using `N` and `stride` parameters:
    > x = new {{alias:@stdlib/array/float32}}( [ -2.0, 1.0, 1.0, -5.0, 2.0, -1.0 ] );
    > {{alias}}( 3, x, 2 )
    5.0

    // Using view offsets:
    > var x0 = new {{alias:@stdlib/array/float32}}( [ 1.0, -2.0, 3.0, 2.0, 5.0, -1.0 ] );
    > var x1 = new {{alias:@stdlib/array/float32}}( x0.buffer, x0.BYTES_PER_ELEMENT*1 );
    > {{alias}}( 3, x1, 2 )
    5.0


{{alias}}.ndarray( N, x, stride, offset )
    Computes the sum of absolute values (L1 norm) of single-precision floating-
    point strided array elements using pairwise summation and alternative
    indexing semantics.

    While typed array views mandate a view offset based on the underlying
    buffer, the `offset` parameter supports indexing semantics based on a
    starting index.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    x: Float32Array
        Input array.

    stride: integer
        Index increment.

    offset: integer
        Starting index.

    Returns
    -------
    out: number
        Sum.

    Examples
    --------
    // Standard Usage:
    > var x = new {{alias:@stdlib/array/float32}}( [ 1.0, -2.0, 2.0 ] );
    > {{alias}}.ndarray( x.length, x, 1, 0 )
    5.0

    // Using offset parameter:
    > var x = new {{alias:@stdlib/array/float32}}( [ 1.0, -2.0, 3.0, 2.0, 5.0, -1.0 ] );
    > {{alias}}.ndarray( 3, x, 2, 1 )
    5.0

    See Also
    --------

