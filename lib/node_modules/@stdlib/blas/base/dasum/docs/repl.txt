
{{alias}}( N, x, stride )
    Computes the sum of the absolute values.

    The sum of absolute values corresponds to the *L1* norm.

    The `N` and `stride` parameters determine which elements in `x` are used to
    compute the sum.

    Indexing is relative to the first index. To introduce an offset, use typed
    array views.

    If `N` or `stride` is less than or equal to `0`, the function returns `0`.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    x: Float64Array
        Input array.

    stride: integer
        Index increment.

    Returns
    -------
    sum: number
        Sum of absolute values.

    Examples
    --------
    // Standard usage:
    > var x = new {{alias:@stdlib/array/float64}}( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0 ] );
    > var s = {{alias}}( x.length, x, 1 )
    15.0

    // Sum every other value:
    > s = {{alias}}( 3, x, 2 )
    9.0

    // Use view offset; e.g., starting at 2nd element:
    > var x0 = new {{alias:@stdlib/array/float64}}( [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ] );
    > var x1 = new {{alias:@stdlib/array/float64}}( x0.buffer, x0.BYTES_PER_ELEMENT*1 );
    > s = {{alias}}( 3, x1, 2 )
    12.0


{{alias}}.ndarray( N, x, stride, offset )
    Computes the sum of absolute values using alternative indexing semantics.

    While typed array views mandate a view offset based on the underlying
    buffer, the `offset` parameter supports indexing semantics based on a
    starting index.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    x: Float64Array
        Input array.

    stride: integer
        Index increment.

    offset: integer
        Starting index.

    Returns
    -------
    sum: number
        Sum of absolute values.

    Examples
    --------
    // Standard usage:
    > var x = new {{alias:@stdlib/array/float64}}( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0 ] );
    > var s = {{alias}}.ndarray( x.length, x, 1, 0 )
    15.0

    // Sum the last three elements:
    > x = new {{alias:@stdlib/array/float64}}( [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ] );
    > s = {{alias}}.ndarray( 3, x, -1, x.length-1 )
    15.0

    See Also
    --------

