/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var constantFunction = require( '@stdlib/utils/constant-function' );
var normalPdf = require( '@stdlib/stats/base/dists/normal/pdf' );
var normalCdf = require( '@stdlib/stats/base/dists/normal/cdf' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );


// MAIN //

/**
* Returns a function for evaluating the probability density function (PDF) for a skewed normal distribution.
*
* @param {number} mu - mean
* @param {NonNegativeNumber} sigma - standard deviation
* @param {number} alpha - skewness
* @returns {Function} function to evaluate the probability density function
*
* @example
* var pdf = factory( 10.0, 2.0, -1.0 );
* var y = pdf( 10.0 );
* // returns ~0.199
*
* y = pdf( 5.0 );
* // returns ~0.017
*/
function factory( mu, sigma, alpha ) {
	var pdfFactory;
	var cdfFactory;
	pdfFactory = normalPdf.factory( mu, sigma );
	if ( alpha === 0.0 ) {
		return pdfFactory;
	}
	if ( isnan(alpha) ) {
		return constantFunction( NaN );
	}
	cdfFactory = normalCdf.factory( alpha * mu, sigma );
	return pdf;

	/**
	* Evaluates the probability density function (PDF) for a skewed normal distribution.
	*
	* @private
	* @param {number} x - input value
	* @returns {number} evaluated probability density function
	*
	* @example
	* var y = pdf( -3.14 );
	* // returns <number>
	*/
	function pdf( x ) {
		if ( isnan( x ) ) {
			return NaN;
		}
		return 2 * pdfFactory( x ) * cdfFactory( alpha * x );
	}
}


// EXPORTS //

module.exports = factory;
