/*
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

// TypeScript Version: 4.1

/**
* Evaluates the probability mass function (PMF) for a boltzmann distribution.
*
* @param x - input value
* @returns evaluated PMF
*/
type Unary = ( x: number ) => number;

/**
* Interface for the probability mass function (PMF) of a boltzmann distribution.
*/
interface PMF {
	/**
	* Evaluates the probability mass function (PMF) for a boltzmann distribution with total number of energy states `N`, and inverse temperature parameter `λ`.
	*
	* ## Notes
	*
	* -   If provided a total number of energy states `N` and inverse temperature parameter `λ` which is not a nonnegative integer, the function returns `NaN`.
	*
	* @param x - input value
	* @param N - total number of energy states
	* @param lambda - inverse temperature parameter
	* @returns evaluated PMF
	*
	* @example
	* var y = pmf( 1, 8, 4 );
	* // returns ~0.257
	*
	* @example
	* var y = pmf( 2, 8, 4 );
	* // returns ~0.115
	*
	* @example
	* var y = pmf( 0, 8, 4 );
	* // returns ~0.574
	*
	* @example
	* var y = pmf( 5, 8, 4 );
	* // returns 0.0
	*
	* @example
	* var y = pmf( NaN, 1.5, 5 );
	* // returns NaN
	*
	* @example
	* var y = pmf( 2, NaN, 5 );
	* // returns NaN
	*
	* @example
	* var y = pmf( 2, 1.5, NaN );
	* // returns NaN
	*
	* @example
	* var y = pmf( 2, 1.5, 4.5 );
	* // returns NaN
	*
	* @example
	* var y = pmf( 2, 1.5, -5 );
	* // returns NaN
	*
	* @example
	* var y = pmf( 2, -1.5, 5 );
	* // returns NaN
	*
	* @example
	* var y = pmf( 5.2, 10, 5 );
	* // returns NaN
	*/
	( x: number, lambda: number, N: number ): number;

	/**
	* Returns a function for evaluating the probability mass function (PMF) for a boltzmann distribution with total number of energy states `N`, and inverse temperature parameter `λ`.
	*
	* @param N - total number of energy states
	* @param lambda - inverse temperature parameter
	* @returns PMF
	*
	* @example
	* var mypmf = pmf.factory( 1.4, 8 );
	* var y = mypmf( 3 );
	* // returns ~0.011
	*
	* y = mypmf( 1 );
	* // returns ~0.185
	*/
	factory( N: number, lambda: number ): Unary;
}

/**
* Boltzmann distribution probability mass function (PMF).
*
* @param x - input value
* @param N - total states of energy
* @param lambda - inverse temperature parameter
* @returns evaluated PMF
*
* @example
* var mypmf = pmf.factory( 1.2, 10 );
* y = mypmf( 4 );
* // returns ~0.0.57
*
* y = mypmf( 1 );
* // returns ~0.2104
*/
declare var pmf: PMF;


// EXPORTS //

export = pmf;
