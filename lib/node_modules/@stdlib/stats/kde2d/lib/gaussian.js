'use strict';

// MODULES //

var isnan = require( '@stdlib/assert/is-nan' );
var pow = require( '@stdlib/math/base/special/pow' );
var SQRT_TWO_PI = require( '@stdlib/constants/math/float64-sqrt-two-pi' );
var exp = require( '@stdlib/math/base/special/exp' );


// VARIABLES //

var INV_SQRT_TWO_PI = 1.0 / SQRT_TWO_PI;


// MAIN //

/**
* Computes the Gaussian kernel for a value.
*
* @private
* @param {number} u - value for which we wish to calculate the Gaussian kernel
* @returns {number} the value for the kernel at u
*
* @example
* var u = 5;
* out = gaussian(u); // returns 0
*/
function gaussian(u) {
	if (isnan(u)) {
		return NaN;
	}

	return INV_SQRT_TWO_PI * exp(-0.5 * pow(u, 2.0));
}


// EXPORTS //

module.exports = gaussian;
