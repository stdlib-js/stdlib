'use strict';

// MODULES //

var pow = require( '@stdlib/math/base/special/pow' );
var min = require( '@stdlib/math/base/special/min' );
var stdev = require( './stdev.js' );
var iqr = require( './iqr.js' );


// MAIN //

/**
* Computes the rule-of-thumb bandwidth for given data -- a single column.
*
* @private
* @param {NumericArray} data - input array
* @param {number} j - index of the column from which to obtain the data
* @returns {NumericArray} array with bandwidth values
*
* @example
* var arr = [ 2, 3, 4, 3, 5 ];
* var out = pickBandwidth( arr, 0, 5 );
* // returns ~0.094809
*/
function pickBandwidth(data, j) {
	var minElement;
	var sigmaHat;
	var powTerm;
	var iqrVal;
	var ans;

	// Make the quantile
	iqrVal = iqr(data, j) / 1.34;
	sigmaHat = stdev(data, j);
	minElement = min(iqrVal, sigmaHat);

	powTerm = pow(data.shape[0], -1/5);

	ans = 1.06 * powTerm * minElement;
	return ans;
}


// EXPORTS //

module.exports = pickBandwidth;
