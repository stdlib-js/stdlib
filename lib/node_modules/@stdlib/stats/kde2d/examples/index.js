'use strict';

var normal = require( '@stdlib/random/base/normal' );
var ctor = require( '@stdlib/ndarray/ctor' );
var kde2d = require( '../lib');

var strides;
var ndarray;
var buffer;
var offset;
var shape;
var order;
var randX;
var randY;
var out;
var arr;
var i;
var x;
var y;
var n;

n = 100;

x = new Array(n);
y = new Array(n);

randX = normal.factory(3, 1.2);
randY = normal.factory(10, 4.5);

for (i = 0; i < n; i++) {
	x[i] = randX();
	y[i] = randY();
}

out = kde2d(x, y);
console.log(out);

// Run it with a new n
out = kde2d(x, y, {
	'n': 15
} );
console.log(out);

// Run it with a new xLim
out = kde2d(x, y, {
	'xLim': [-5, 12]
} );
console.log(out);

// Run it with a new yLim
out = kde2d(x, y, {
	'yLim': [-3, 13]
} );
console.log(out);

// Run it with new bandwidths
out = kde2d(x, y, {
	'h': [0.05, 0.1]
} );
console.log(out);

// Run it with ndarray
ndarray = ctor( 'generic', 2 );
buffer = x.concat(y);
shape = [ n, 2 ];
order = 'col-major';
strides = [ 1, n ];
offset = 0;
arr = ndarray( buffer, shape, strides, offset, order );

out = kde2d(arr);
console.log(out);
