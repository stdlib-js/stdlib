{"__done__":"\n__done__( [error:Error|null[, results:any]] )\n    Callback invoked to confirm that an asynchronous command has finished\n    executing.\n","require":"\nrequire( id:string )\n    Imports a module, JSON, or local file.\n","alias2pkg":"\nalias2pkg( alias:any )\n    Returns the package name associated with a provided alias.\n\nalias2pkg( instance:any )\n    Returns the package name associated with a provided class instance.\n","alias2related":"\nalias2related( alias:any )\n    Returns aliases related to a specified alias.\n\nalias2related( instance:any )\n    Returns aliases associated with a provided class instance.\n","ans":"\nans\n    Result of the last successfully executed command.\n","assignfrom":"\nassignfrom( workspace:string, variable:string|symbol )\n    Reads a value from a specified workspace.\n","assignin":"\nassignin( workspace:string, variable:string|symbol, value:any )\n    Assigns a value to a variable in a specified workspace.\n","citation":"\ncitation()\n    Prints how to cite stdlib in publications.\n","clear":"\nclear()\n    Clears the entire REPL screen and scrollback history.\n","clearHistory":"\nclearHistory()\n    Clears the REPL history.\n","clearUserDocs":"\nclearUserDocs( [options] )\n    Deletes user-defined documentation.\n","clearVars":"\nclearVars( [options] )\n    Deletes user-defined variables in the current workspace.\n","clearWorkspace":"\nclearWorkspace( [name, ][options] )\n    Deletes user-defined variables in a specified workspace.\n","contributors":"\ncontributors()\n    Prints the list of contributors.\n","copyright":"\ncopyright()\n    Prints copyright information.\n","credits":"\ncredits()\n    Prints credits.\n","currentWorkspace":"\ncurrentWorkspace\n    Name of the current workspace.\n","deeprerequire":"\ndeeprerequire( id:string )\n    Re-imports a module, JSON, or local file and all its associated module\n    dependencies.\n","deleteWorkspace":"\ndeleteWorkspace( [name:string] )\n    Deletes a workspace.\n","donate":"\ndonate()\n    Prints donation information.\n","evalin":"\nevalin( workspace:string, expression:string )\n    Evaluates an expression in a specified workspace.\n","example":"\nexample( alias:any )\n    Runs examples for a specified alias.\n\nexample( property:any )\n    Runs examples for a specified property.\n\nexample( instance:any )\n    Runs examples for a provided class instance.\n","global":"\nglobal\n    Global namespace object.\n","help":"\nhelp()\n    Prints help text.\n\nhelp( alias:any )\n    Prints help text for a specified alias.\n\nhelp( property:any )\n    Prints help text for a specified property.\n\nhelp( instance:any )\n    Prints help text for a provided class instance.\n","info":"\ninfo( alias:any )\n    Prints abbreviated help text for a specified alias.\n\ninfo( property:any )\n    Prints abbreviated help text for a specified property.\n\ninfo( instance:any )\n    Prints abbreviated help text for a provided class instance.\n","isKeyword":"\nisKeyword( keyword:string )\n    Returns a boolean indicating whether a string is a reserved keyword in the\n    REPL environment.\n","isWorkspace":"\nisWorkspace( name:string|RegExp )\n    Returns a boolean indicating whether a specified workspace exists.\n","license":"\nlicense()\n    Prints license information.\n","load":"\nload( fpath:string )\n    Loads and evaluates a JavaScript file, such as a REPL history file, line-by-\n    line.\n","loadWorkspace":"\nloadWorkspace( name[, options] )\n    Loads variables from a specified workspace into the current workspace.\n","logStart":"\nlogStart( fpath:string )\n    Starts logging commands and printed output to a specified file path.\n","logStop":"\nlogStop( id:number )\n    Stops logging commands and printed output to a file path associated with a\n    specified record identifier.\n","presentationStart":"\npresentationStart( [text:string, ][options:Object] )\n    Starts a REPL presentation.\n","presentationStop":"\npresentationStop( [id:number|string] )\n    Stops a REPL presentation.\n","quit":"\nquit()\n    Exits the REPL.\n","renameWorkspace":"\nrenameWorkspace( oldName:string, newName:string )\n    Renames a workspace.\n","rerequire":"\nrerequire( id:string )\n    Re-imports a module, JSON, or local file.\n","rerun":"\nrerun( [arg] )\n    Reruns previous commands.\n","reset":"\nreset()\n    Resets the REPL.\n","save":"\nsave( fpath:string )\n    Saves previous commands to a specified file path.\n","saveStart":"\nsaveStart( fpath:string )\n    Starts saving commands to a specified file path.\n","saveStop":"\nsaveStop( id:number )\n    Stops saving commands to a file path associated with a specified record\n    identifier.\n","tutorial":"\ntutorial( [name:string, [options:Object]] )\n    Starts a tutorial.\n","userDoc":"\nuserDoc( alias:string, [ref:any,] doc:string )\n    Adds user-defined documentation.\n","vars":"\nvars( [options] )\n    Returns a list of variable names in the current workspace.\n","varsWorkspace":"\nvarsWorkspace( [name, ][options] )\n    Returns a list of variable names in a specified workspace.\n","workspace":"\nworkspace( name:string )\n    Switches to a specified workspace.\n","workspaces":"\nworkspaces( [options] )\n    Returns a list of workspace names.\n"}