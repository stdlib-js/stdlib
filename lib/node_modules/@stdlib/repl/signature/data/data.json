[["AFINN_96","AFINN_96()"],["AFINN_111","AFINN_111()"],["alias2pkg","alias2pkg( alias )"],["alias2related","alias2related( alias )"],["aliases","aliases( [namespace] )"],["allocUnsafe","allocUnsafe( size )"],["anova1","anova1( x, factor[, options] )"],["ANSCOMBES_QUARTET","ANSCOMBES_QUARTET()"],["any","any( collection )"],["anyBy","anyBy( collection, predicate[, thisArg ] )"],["anyByAsync","anyByAsync( collection, [options,] predicate, done )"],["anyByAsync.factory","anyByAsync.factory( [options,] predicate )"],["anyByRight","anyByRight( collection, predicate[, thisArg ] )"],["anyByRightAsync","anyByRightAsync( collection, [options,] predicate, done )"],["anyByRightAsync.factory","anyByRightAsync.factory( [options,] predicate )"],["APERY","APERY"],["append","append( collection1, collection2 )"],["ARCH","ARCH"],["argumentFunction","argumentFunction( idx )"],["ARGV","ARGV"],["array","array( [buffer,] [options] )"],["array2buffer","array2buffer( arr )"],["array2iterator","array2iterator( src[, mapFcn[, thisArg]] )"],["array2iteratorRight","array2iteratorRight( src[, mapFcn[, thisArg]] )"],["ArrayBuffer","ArrayBuffer( size )"],["ArrayBuffer.length","ArrayBuffer.length"],["ArrayBuffer.isView","ArrayBuffer.isView( arr )"],["ArrayBuffer.prototype.byteLength","ArrayBuffer.prototype.byteLength"],["ArrayBuffer.prototype.slice","ArrayBuffer.prototype.slice( [start[, end]] )"],["arraybuffer2buffer","arraybuffer2buffer( buf[, byteOffset[, length]] )"],["arrayCtors","arrayCtors( dtype )"],["arrayDataType","arrayDataType( array )"],["arrayDataTypes","arrayDataTypes()"],["arrayMinDataType","arrayMinDataType( value )"],["arrayNextDataType","arrayNextDataType( [dtype] )"],["arrayPromotionRules","arrayPromotionRules( [dtype1, dtype2] )"],["arraySafeCasts","arraySafeCasts( [dtype] )"],["arraySameKindCasts","arraySameKindCasts( [dtype] )"],["arrayShape","arrayShape( arr )"],["arrayStream","arrayStream( src[, options] )"],["arrayStream.factory","arrayStream.factory( [options] )"],["arrayStream.objectMode","arrayStream.objectMode( src[, options] )"],["arrayview2iterator","arrayview2iterator( src[, begin[, end]][, mapFcn[, thisArg]] )"],["arrayview2iteratorRight","arrayview2iteratorRight( src[, begin[, end]][, mapFcn[, thisArg]] )"],["AsyncIteratorSymbol","AsyncIteratorSymbol"],["bartlettTest","bartlettTest( ...x[, options] )"],["base.abs","base.abs( x )"],["base.abs2","base.abs2( x )"],["base.absdiff","base.absdiff( x, y )"],["base.absInt32","base.absInt32( x )"],["base.acos","base.acos( x )"],["base.acosh","base.acosh( x )"],["base.acoth","base.acoth( x )"],["base.acovercos","base.acovercos( x )"],["base.acoversin","base.acoversin( x )"],["base.ahavercos","base.ahavercos( x )"],["base.ahaversin","base.ahaversin( x )"],["base.asin","base.asin( x )"],["base.asinh","base.asinh( x )"],["base.atan","base.atan( x )"],["base.atan2","base.atan2( y, x )"],["base.atanh","base.atanh( x )"],["base.avercos","base.avercos( x )"],["base.aversin","base.aversin( x )"],["base.bernoulli","base.bernoulli( n )"],["base.besselj0","base.besselj0( x )"],["base.besselj1","base.besselj1( x )"],["base.bessely0","base.bessely0( x )"],["base.bessely1","base.bessely1( x )"],["base.beta","base.beta( x, y )"],["base.betainc","base.betainc( x, a, b[, regularized[, upper]] )"],["base.betaincinv","base.betaincinv( p, a, b[, upper] )"],["base.betaln","base.betaln( a, b )"],["base.binet","base.binet( x )"],["base.binomcoef","base.binomcoef( n, k )"],["base.binomcoefln","base.binomcoefln( n, k )"],["base.boxcox","base.boxcox( x, lambda )"],["base.boxcox1p","base.boxcox1p( x, lambda )"],["base.boxcox1pinv","base.boxcox1pinv( y, lambda )"],["base.boxcoxinv","base.boxcoxinv( y, lambda )"],["base.cabs","base.cabs( re, im )"],["base.cabs2","base.cabs2( re, im )"],["base.cadd","base.cadd( [out,] re1, im1, re2, im2 )"],["base.cbrt","base.cbrt( x )"],["base.cceil","base.cceil( [out,] re, im )"],["base.cceiln","base.cceiln( [out,] re, im, n )"],["base.ccis","base.ccis( [out,] re, im )"],["base.cdiv","base.cdiv( [out,] re1, im1, re2, im2 )"],["base.ceil","base.ceil( x )"],["base.ceil2","base.ceil2( x )"],["base.ceil10","base.ceil10( x )"],["base.ceilb","base.ceilb( x, n, b )"],["base.ceiln","base.ceiln( x, n )"],["base.ceilsd","base.ceilsd( x, n[, b] )"],["base.cexp","base.cexp( [out,] re, im )"],["base.cflipsign","base.cflipsign( [out,] re, im, y )"],["base.cfloor","base.cfloor( [out,] re, im )"],["base.cfloorn","base.cfloorn( [out,] re, im, n )"],["base.cinv","base.cinv( [out,] re, im )"],["base.clamp","base.clamp( v, min, max )"],["base.cmul","base.cmul( [out,] re1, im1, re2, im2 )"],["base.cneg","base.cneg( [out,] re, im )"],["base.continuedFraction","base.continuedFraction( generator[, options] )"],["base.copysign","base.copysign( x, y )"],["base.cos","base.cos( x )"],["base.cosh","base.cosh( x )"],["base.cosm1","base.cosm1( x )"],["base.cospi","base.cospi( x )"],["base.covercos","base.covercos( x )"],["base.coversin","base.coversin( x )"],["base.cphase","base.cphase( re, im )"],["base.cpolar","base.cpolar( [out,] re, im )"],["base.cround","base.cround( [out,] re, im )"],["base.croundn","base.croundn( [out,] re, im, n )"],["base.csignum","base.csignum( [out,] re, im )"],["base.csub","base.csub( [out,] re1, im1, re2, im2 )"],["base.dasum","base.dasum( N, x, stride )"],["base.dasum.ndarray","base.dasum.ndarray( N, x, stride, offset )"],["base.dasum.wasm","base.dasum.wasm( [options] )"],["base.daxpy","base.daxpy( N, alpha, x, strideX, y, strideY )"],["base.daxpy.ndarray","base.daxpy.ndarray( N, alpha, x, strideX, offsetX, y, strideY, offsetY )"],["base.daxpy.wasm","base.daxpy.wasm( [options] )"],["base.dcopy","base.dcopy( N, x, strideX, y, strideY )"],["base.dcopy.ndarray","base.dcopy.ndarray( N, x, strideX, offsetX, y, strideY, offsetY )"],["base.deg2rad","base.deg2rad( x )"],["base.digamma","base.digamma( x )"],["base.diracDelta","base.diracDelta( x )"],["base.dists.arcsine.Arcsine","base.dists.arcsine.Arcsine( [a, b] )"],["base.dists.arcsine.cdf","base.dists.arcsine.cdf( x, a, b )"],["base.dists.arcsine.cdf.factory","base.dists.arcsine.cdf.factory( a, b )"],["base.dists.arcsine.entropy","base.dists.arcsine.entropy( a, b )"],["base.dists.arcsine.kurtosis","base.dists.arcsine.kurtosis( a, b )"],["base.dists.arcsine.logcdf","base.dists.arcsine.logcdf( x, a, b )"],["base.dists.arcsine.logcdf.factory","base.dists.arcsine.logcdf.factory( a, b )"],["base.dists.arcsine.logpdf","base.dists.arcsine.logpdf( x, a, b )"],["base.dists.arcsine.logpdf.factory","base.dists.arcsine.logpdf.factory( a, b )"],["base.dists.arcsine.mean","base.dists.arcsine.mean( a, b )"],["base.dists.arcsine.median","base.dists.arcsine.median( a, b )"],["base.dists.arcsine.mode","base.dists.arcsine.mode( a, b )"],["base.dists.arcsine.pdf","base.dists.arcsine.pdf( x, a, b )"],["base.dists.arcsine.pdf.factory","base.dists.arcsine.pdf.factory( a, b )"],["base.dists.arcsine.quantile","base.dists.arcsine.quantile( p, a, b )"],["base.dists.arcsine.quantile.factory","base.dists.arcsine.quantile.factory( a, b )"],["base.dists.arcsine.skewness","base.dists.arcsine.skewness( a, b )"],["base.dists.arcsine.stdev","base.dists.arcsine.stdev( a, b )"],["base.dists.arcsine.variance","base.dists.arcsine.variance( a, b )"],["base.dists.bernoulli.Bernoulli","base.dists.bernoulli.Bernoulli( [p] )"],["base.dists.bernoulli.cdf","base.dists.bernoulli.cdf( x, p )"],["base.dists.bernoulli.cdf.factory","base.dists.bernoulli.cdf.factory( p )"],["base.dists.bernoulli.entropy","base.dists.bernoulli.entropy( p )"],["base.dists.bernoulli.kurtosis","base.dists.bernoulli.kurtosis( p )"],["base.dists.bernoulli.mean","base.dists.bernoulli.mean( p )"],["base.dists.bernoulli.median","base.dists.bernoulli.median( p )"],["base.dists.bernoulli.mgf","base.dists.bernoulli.mgf( t, p )"],["base.dists.bernoulli.mgf.factory","base.dists.bernoulli.mgf.factory( p )"],["base.dists.bernoulli.mode","base.dists.bernoulli.mode( p )"],["base.dists.bernoulli.pmf","base.dists.bernoulli.pmf( x, p )"],["base.dists.bernoulli.pmf.factory","base.dists.bernoulli.pmf.factory( p )"],["base.dists.bernoulli.quantile","base.dists.bernoulli.quantile( r, p )"],["base.dists.bernoulli.quantile.factory","base.dists.bernoulli.quantile.factory( p )"],["base.dists.bernoulli.skewness","base.dists.bernoulli.skewness( p )"],["base.dists.bernoulli.stdev","base.dists.bernoulli.stdev( p )"],["base.dists.bernoulli.variance","base.dists.bernoulli.variance( p )"],["base.dists.beta.Beta","base.dists.beta.Beta( [α, β] )"],["base.dists.beta.cdf","base.dists.beta.cdf( x, α, β )"],["base.dists.beta.cdf.factory","base.dists.beta.cdf.factory( α, β )"],["base.dists.beta.entropy","base.dists.beta.entropy( α, β )"],["base.dists.beta.kurtosis","base.dists.beta.kurtosis( α, β )"],["base.dists.beta.logcdf","base.dists.beta.logcdf( x, α, β )"],["base.dists.beta.logcdf.factory","base.dists.beta.logcdf.factory( α, β )"],["base.dists.beta.logpdf","base.dists.beta.logpdf( x, α, β )"],["base.dists.beta.logpdf.factory","base.dists.beta.logpdf.factory( α, β )"],["base.dists.beta.mean","base.dists.beta.mean( α, β )"],["base.dists.beta.median","base.dists.beta.median( α, β )"],["base.dists.beta.mgf","base.dists.beta.mgf( t, α, β )"],["base.dists.beta.mgf.factory","base.dists.beta.mgf.factory( α, β )"],["base.dists.beta.mode","base.dists.beta.mode( α, β )"],["base.dists.beta.pdf","base.dists.beta.pdf( x, α, β )"],["base.dists.beta.pdf.factory","base.dists.beta.pdf.factory( α, β )"],["base.dists.beta.quantile","base.dists.beta.quantile( p, α, β )"],["base.dists.beta.quantile.factory","base.dists.beta.quantile.factory( α, β )"],["base.dists.beta.skewness","base.dists.beta.skewness( α, β )"],["base.dists.beta.stdev","base.dists.beta.stdev( α, β )"],["base.dists.beta.variance","base.dists.beta.variance( α, β )"],["base.dists.betaprime.BetaPrime","base.dists.betaprime.BetaPrime( [α, β] )"],["base.dists.betaprime.cdf","base.dists.betaprime.cdf( x, α, β )"],["base.dists.betaprime.cdf.factory","base.dists.betaprime.cdf.factory( α, β )"],["base.dists.betaprime.kurtosis","base.dists.betaprime.kurtosis( α, β )"],["base.dists.betaprime.logcdf","base.dists.betaprime.logcdf( x, α, β )"],["base.dists.betaprime.logcdf.factory","base.dists.betaprime.logcdf.factory( α, β )"],["base.dists.betaprime.logpdf","base.dists.betaprime.logpdf( x, α, β )"],["base.dists.betaprime.logpdf.factory","base.dists.betaprime.logpdf.factory( α, β )"],["base.dists.betaprime.mean","base.dists.betaprime.mean( α, β )"],["base.dists.betaprime.mode","base.dists.betaprime.mode( α, β )"],["base.dists.betaprime.pdf","base.dists.betaprime.pdf( x, α, β )"],["base.dists.betaprime.pdf.factory","base.dists.betaprime.pdf.factory( α, β )"],["base.dists.betaprime.quantile","base.dists.betaprime.quantile( p, α, β )"],["base.dists.betaprime.quantile.factory","base.dists.betaprime.quantile.factory( α, β )"],["base.dists.betaprime.skewness","base.dists.betaprime.skewness( α, β )"],["base.dists.betaprime.stdev","base.dists.betaprime.stdev( α, β )"],["base.dists.betaprime.variance","base.dists.betaprime.variance( α, β )"],["base.dists.binomial.Binomial","base.dists.binomial.Binomial( [n, p] )"],["base.dists.binomial.cdf","base.dists.binomial.cdf( x, n, p )"],["base.dists.binomial.cdf.factory","base.dists.binomial.cdf.factory( n, p )"],["base.dists.binomial.entropy","base.dists.binomial.entropy( n, p )"],["base.dists.binomial.kurtosis","base.dists.binomial.kurtosis( n, p )"],["base.dists.binomial.logpmf","base.dists.binomial.logpmf( x, n, p )"],["base.dists.binomial.logpmf.factory","base.dists.binomial.logpmf.factory( n, p )"],["base.dists.binomial.mean","base.dists.binomial.mean( n, p )"],["base.dists.binomial.median","base.dists.binomial.median( n, p )"],["base.dists.binomial.mgf","base.dists.binomial.mgf( t, n, p )"],["base.dists.binomial.mgf.factory","base.dists.binomial.mgf.factory( n, p )"],["base.dists.binomial.mode","base.dists.binomial.mode( n, p )"],["base.dists.binomial.pmf","base.dists.binomial.pmf( x, n, p )"],["base.dists.binomial.pmf.factory","base.dists.binomial.pmf.factory( n, p )"],["base.dists.binomial.quantile","base.dists.binomial.quantile( r, n, p )"],["base.dists.binomial.quantile.factory","base.dists.binomial.quantile.factory( n, p )"],["base.dists.binomial.skewness","base.dists.binomial.skewness( n, p )"],["base.dists.binomial.stdev","base.dists.binomial.stdev( n, p )"],["base.dists.binomial.variance","base.dists.binomial.variance( n, p )"],["base.dists.cauchy.Cauchy","base.dists.cauchy.Cauchy( [x0, Ɣ] )"],["base.dists.cauchy.cdf","base.dists.cauchy.cdf( x, x0, Ɣ )"],["base.dists.cauchy.cdf.factory","base.dists.cauchy.cdf.factory( x0, Ɣ )"],["base.dists.cauchy.entropy","base.dists.cauchy.entropy( x0, Ɣ )"],["base.dists.cauchy.logcdf","base.dists.cauchy.logcdf( x, x0, Ɣ )"],["base.dists.cauchy.logcdf.factory","base.dists.cauchy.logcdf.factory( x0, Ɣ )"],["base.dists.cauchy.logpdf","base.dists.cauchy.logpdf( x, x0, Ɣ )"],["base.dists.cauchy.logpdf.factory","base.dists.cauchy.logpdf.factory( x0, Ɣ )"],["base.dists.cauchy.median","base.dists.cauchy.median( x0, Ɣ )"],["base.dists.cauchy.mode","base.dists.cauchy.mode( x0, Ɣ )"],["base.dists.cauchy.pdf","base.dists.cauchy.pdf( x, x0, Ɣ )"],["base.dists.cauchy.pdf.factory","base.dists.cauchy.pdf.factory( x0, Ɣ )"],["base.dists.cauchy.quantile","base.dists.cauchy.quantile( p, x0, Ɣ )"],["base.dists.cauchy.quantile.factory","base.dists.cauchy.quantile.factory( x0, Ɣ )"],["base.dists.chi.cdf","base.dists.chi.cdf( x, k )"],["base.dists.chi.cdf.factory","base.dists.chi.cdf.factory( k )"],["base.dists.chi.Chi","base.dists.chi.Chi( [k] )"],["base.dists.chi.entropy","base.dists.chi.entropy( k )"],["base.dists.chi.kurtosis","base.dists.chi.kurtosis( k )"],["base.dists.chi.logpdf","base.dists.chi.logpdf( x, k )"],["base.dists.chi.logpdf.factory","base.dists.chi.logpdf.factory( k )"],["base.dists.chi.mean","base.dists.chi.mean( k )"],["base.dists.chi.mode","base.dists.chi.mode( k )"],["base.dists.chi.pdf","base.dists.chi.pdf( x, k )"],["base.dists.chi.pdf.factory","base.dists.chi.pdf.factory( k )"],["base.dists.chi.quantile","base.dists.chi.quantile( p, k )"],["base.dists.chi.quantile.factory","base.dists.chi.quantile.factory( k )"],["base.dists.chi.skewness","base.dists.chi.skewness( k )"],["base.dists.chi.stdev","base.dists.chi.stdev( k )"],["base.dists.chi.variance","base.dists.chi.variance( k )"],["base.dists.chisquare.cdf","base.dists.chisquare.cdf( x, k )"],["base.dists.chisquare.cdf.factory","base.dists.chisquare.cdf.factory( k )"],["base.dists.chisquare.ChiSquare","base.dists.chisquare.ChiSquare( [k] )"],["base.dists.chisquare.entropy","base.dists.chisquare.entropy( k )"],["base.dists.chisquare.kurtosis","base.dists.chisquare.kurtosis( k )"],["base.dists.chisquare.logpdf","base.dists.chisquare.logpdf( x, k )"],["base.dists.chisquare.logpdf.factory","base.dists.chisquare.logpdf.factory( k )"],["base.dists.chisquare.mean","base.dists.chisquare.mean( k )"],["base.dists.chisquare.mgf","base.dists.chisquare.mgf( t, k )"],["base.dists.chisquare.mgf.factory","base.dists.chisquare.mgf.factory( k )"],["base.dists.chisquare.mode","base.dists.chisquare.mode( k )"],["base.dists.chisquare.pdf","base.dists.chisquare.pdf( x, k )"],["base.dists.chisquare.pdf.factory","base.dists.chisquare.pdf.factory( k )"],["base.dists.chisquare.quantile","base.dists.chisquare.quantile( p, k )"],["base.dists.chisquare.quantile.factory","base.dists.chisquare.quantile.factory( k )"],["base.dists.chisquare.skewness","base.dists.chisquare.skewness( k )"],["base.dists.chisquare.stdev","base.dists.chisquare.stdev( k )"],["base.dists.chisquare.variance","base.dists.chisquare.variance( k )"],["base.dists.cosine.cdf","base.dists.cosine.cdf( x, μ, s )"],["base.dists.cosine.cdf.factory","base.dists.cosine.cdf.factory( μ, s )"],["base.dists.cosine.Cosine","base.dists.cosine.Cosine( [μ, s] )"],["base.dists.cosine.kurtosis","base.dists.cosine.kurtosis( μ, s )"],["base.dists.cosine.logcdf","base.dists.cosine.logcdf( x, μ, s )"],["base.dists.cosine.logcdf.factory","base.dists.cosine.logcdf.factory( μ, s )"],["base.dists.cosine.logpdf","base.dists.cosine.logpdf( x, μ, s )"],["base.dists.cosine.logpdf.factory","base.dists.cosine.logpdf.factory( μ, s )"],["base.dists.cosine.mean","base.dists.cosine.mean( μ, s )"],["base.dists.cosine.median","base.dists.cosine.median( μ, s )"],["base.dists.cosine.mgf","base.dists.cosine.mgf( t, μ, s )"],["base.dists.cosine.mgf.factory","base.dists.cosine.mgf.factory( μ, s )"],["base.dists.cosine.mode","base.dists.cosine.mode( μ, s )"],["base.dists.cosine.pdf","base.dists.cosine.pdf( x, μ, s )"],["base.dists.cosine.pdf.factory","base.dists.cosine.pdf.factory( μ, s )"],["base.dists.cosine.quantile","base.dists.cosine.quantile( p, μ, s )"],["base.dists.cosine.quantile.factory","base.dists.cosine.quantile.factory( μ, s )"],["base.dists.cosine.skewness","base.dists.cosine.skewness( μ, s )"],["base.dists.cosine.stdev","base.dists.cosine.stdev( μ, s )"],["base.dists.cosine.variance","base.dists.cosine.variance( μ, s )"],["base.dists.degenerate.cdf","base.dists.degenerate.cdf( x, μ )"],["base.dists.degenerate.cdf.factory","base.dists.degenerate.cdf.factory( μ )"],["base.dists.degenerate.Degenerate","base.dists.degenerate.Degenerate( [μ] )"],["base.dists.degenerate.entropy","base.dists.degenerate.entropy( μ )"],["base.dists.degenerate.logcdf","base.dists.degenerate.logcdf( x, μ )"],["base.dists.degenerate.logcdf.factory","base.dists.degenerate.logcdf.factory( μ )"],["base.dists.degenerate.logpdf","base.dists.degenerate.logpdf( x, μ )"],["base.dists.degenerate.logpdf.factory","base.dists.degenerate.logpdf.factory( μ )"],["base.dists.degenerate.logpmf","base.dists.degenerate.logpmf( x, μ )"],["base.dists.degenerate.logpmf.factory","base.dists.degenerate.logpmf.factory( μ )"],["base.dists.degenerate.mean","base.dists.degenerate.mean( μ )"],["base.dists.degenerate.median","base.dists.degenerate.median( μ )"],["base.dists.degenerate.mgf","base.dists.degenerate.mgf( x, μ )"],["base.dists.degenerate.mgf.factory","base.dists.degenerate.mgf.factory( μ )"],["base.dists.degenerate.mode","base.dists.degenerate.mode( μ )"],["base.dists.degenerate.pdf","base.dists.degenerate.pdf( x, μ )"],["base.dists.degenerate.pdf.factory","base.dists.degenerate.pdf.factory( μ )"],["base.dists.degenerate.pmf","base.dists.degenerate.pmf( x, μ )"],["base.dists.degenerate.pmf.factory","base.dists.degenerate.pmf.factory( μ )"],["base.dists.degenerate.quantile","base.dists.degenerate.quantile( p, μ )"],["base.dists.degenerate.quantile.factory","base.dists.degenerate.quantile.factory( μ )"],["base.dists.degenerate.stdev","base.dists.degenerate.stdev( μ )"],["base.dists.degenerate.variance","base.dists.degenerate.variance( μ )"],["base.dists.discreteUniform.cdf","base.dists.discreteUniform.cdf( x, a, b )"],["base.dists.discreteUniform.cdf.factory","base.dists.discreteUniform.cdf.factory( a, b )"],["base.dists.discreteUniform.DiscreteUniform","base.dists.discreteUniform.DiscreteUniform( [a, b] )"],["base.dists.discreteUniform.kurtosis","base.dists.discreteUniform.kurtosis( a, b )"],["base.dists.discreteUniform.logcdf","base.dists.discreteUniform.logcdf( x, a, b )"],["base.dists.discreteUniform.logcdf.factory","base.dists.discreteUniform.logcdf.factory( a, b )"],["base.dists.discreteUniform.logpmf","base.dists.discreteUniform.logpmf( x, a, b )"],["base.dists.discreteUniform.logpmf.factory","base.dists.discreteUniform.logpmf.factory( a, b )"],["base.dists.discreteUniform.mean","base.dists.discreteUniform.mean( a, b )"],["base.dists.discreteUniform.median","base.dists.discreteUniform.median( a, b )"],["base.dists.discreteUniform.mgf","base.dists.discreteUniform.mgf( t, a, b )"],["base.dists.discreteUniform.mgf.factory","base.dists.discreteUniform.mgf.factory( a, b )"],["base.dists.discreteUniform.pmf","base.dists.discreteUniform.pmf( x, a, b )"],["base.dists.discreteUniform.pmf.factory","base.dists.discreteUniform.pmf.factory( a, b )"],["base.dists.discreteUniform.quantile","base.dists.discreteUniform.quantile( p, a, b )"],["base.dists.discreteUniform.quantile.factory","base.dists.discreteUniform.quantile.factory( a, b )"],["base.dists.discreteUniform.skewness","base.dists.discreteUniform.skewness( a, b )"],["base.dists.discreteUniform.stdev","base.dists.discreteUniform.stdev( a, b )"],["base.dists.discreteUniform.variance","base.dists.discreteUniform.variance( a, b )"],["base.dists.erlang.cdf","base.dists.erlang.cdf( x, k, λ )"],["base.dists.erlang.cdf.factory","base.dists.erlang.cdf.factory( k, λ )"],["base.dists.erlang.entropy","base.dists.erlang.entropy( k, λ )"],["base.dists.erlang.Erlang","base.dists.erlang.Erlang( [k, λ] )"],["base.dists.erlang.kurtosis","base.dists.erlang.kurtosis( k, λ )"],["base.dists.erlang.logpdf","base.dists.erlang.logpdf( x, k, λ )"],["base.dists.erlang.logpdf.factory","base.dists.erlang.logpdf.factory( k, λ )"],["base.dists.erlang.mean","base.dists.erlang.mean( k, λ )"],["base.dists.erlang.mgf","base.dists.erlang.mgf( t, k, λ )"],["base.dists.erlang.mgf.factory","base.dists.erlang.mgf.factory( k, λ )"],["base.dists.erlang.mode","base.dists.erlang.mode( k, λ )"],["base.dists.erlang.pdf","base.dists.erlang.pdf( x, k, λ )"],["base.dists.erlang.pdf.factory","base.dists.erlang.pdf.factory( k, λ )"],["base.dists.erlang.quantile","base.dists.erlang.quantile( p, k, λ )"],["base.dists.erlang.quantile.factory","base.dists.erlang.quantile.factory( k, λ )"],["base.dists.erlang.skewness","base.dists.erlang.skewness( k, λ )"],["base.dists.erlang.stdev","base.dists.erlang.stdev( k, λ )"],["base.dists.erlang.variance","base.dists.erlang.variance( k, λ )"],["base.dists.exponential.cdf","base.dists.exponential.cdf( x, λ )"],["base.dists.exponential.cdf.factory","base.dists.exponential.cdf.factory( λ )"],["base.dists.exponential.entropy","base.dists.exponential.entropy( λ )"],["base.dists.exponential.Exponential","base.dists.exponential.Exponential( [λ] )"],["base.dists.exponential.kurtosis","base.dists.exponential.kurtosis( λ )"],["base.dists.exponential.logcdf","base.dists.exponential.logcdf( x, λ )"],["base.dists.exponential.logcdf.factory","base.dists.exponential.logcdf.factory( λ )"],["base.dists.exponential.logpdf","base.dists.exponential.logpdf( x, λ )"],["base.dists.exponential.logpdf.factory","base.dists.exponential.logpdf.factory( λ )"],["base.dists.exponential.mean","base.dists.exponential.mean( λ )"],["base.dists.exponential.median","base.dists.exponential.median( λ )"],["base.dists.exponential.mgf","base.dists.exponential.mgf( t, λ )"],["base.dists.exponential.mgf.factory","base.dists.exponential.mgf.factory( λ )"],["base.dists.exponential.mode","base.dists.exponential.mode( λ )"],["base.dists.exponential.pdf","base.dists.exponential.pdf( x, λ )"],["base.dists.exponential.pdf.factory","base.dists.exponential.pdf.factory( λ )"],["base.dists.exponential.quantile","base.dists.exponential.quantile( p, λ )"],["base.dists.exponential.quantile.factory","base.dists.exponential.quantile.factory( λ )"],["base.dists.exponential.skewness","base.dists.exponential.skewness( λ )"],["base.dists.exponential.stdev","base.dists.exponential.stdev( λ )"],["base.dists.exponential.variance","base.dists.exponential.variance( λ )"],["base.dists.f.cdf","base.dists.f.cdf( x, d1, d2 )"],["base.dists.f.cdf.factory","base.dists.f.cdf.factory( d1, d2 )"],["base.dists.f.entropy","base.dists.f.entropy( d1, d2 )"],["base.dists.f.F","base.dists.f.F( [d1, d2] )"],["base.dists.f.kurtosis","base.dists.f.kurtosis( d1, d2 )"],["base.dists.f.mean","base.dists.f.mean( d1, d2 )"],["base.dists.f.mode","base.dists.f.mode( d1, d2 )"],["base.dists.f.pdf","base.dists.f.pdf( x, d1, d2 )"],["base.dists.f.pdf.factory","base.dists.f.pdf.factory( d1, d2 )"],["base.dists.f.quantile","base.dists.f.quantile( p, d1, d2 )"],["base.dists.f.quantile.factory","base.dists.f.quantile.factory( d1, d2 )"],["base.dists.f.skewness","base.dists.f.skewness( d1, d2 )"],["base.dists.f.stdev","base.dists.f.stdev( d1, d2 )"],["base.dists.f.variance","base.dists.f.variance( d1, d2 )"],["base.dists.frechet.cdf","base.dists.frechet.cdf( x, α, s, m )"],["base.dists.frechet.cdf.factory","base.dists.frechet.cdf.factory( α, s, m )"],["base.dists.frechet.entropy","base.dists.frechet.entropy( α, s, m )"],["base.dists.frechet.Frechet","base.dists.frechet.Frechet( [α, s, m] )"],["base.dists.frechet.kurtosis","base.dists.frechet.kurtosis( α, s, m )"],["base.dists.frechet.logcdf","base.dists.frechet.logcdf( x, α, s, m )"],["base.dists.frechet.logcdf.factory","base.dists.frechet.logcdf.factory( α, s, m )"],["base.dists.frechet.logpdf","base.dists.frechet.logpdf( x, α, s, m )"],["base.dists.frechet.logpdf.factory","base.dists.frechet.logpdf.factory( α, s, m )"],["base.dists.frechet.mean","base.dists.frechet.mean( α, s, m )"],["base.dists.frechet.median","base.dists.frechet.median( α, s, m )"],["base.dists.frechet.mode","base.dists.frechet.mode( α, s, m )"],["base.dists.frechet.pdf","base.dists.frechet.pdf( x, α, s, m )"],["base.dists.frechet.pdf.factory","base.dists.frechet.pdf.factory( α, s, m )"],["base.dists.frechet.quantile","base.dists.frechet.quantile( p, α, s, m )"],["base.dists.frechet.quantile.factory","base.dists.frechet.quantile.factory( α, s, m )"],["base.dists.frechet.skewness","base.dists.frechet.skewness( α, s, m )"],["base.dists.frechet.stdev","base.dists.frechet.stdev( α, s, m )"],["base.dists.frechet.variance","base.dists.frechet.variance( α, s, m )"],["base.dists.gamma.cdf","base.dists.gamma.cdf( x, α, β )"],["base.dists.gamma.cdf.factory","base.dists.gamma.cdf.factory( α, β )"],["base.dists.gamma.entropy","base.dists.gamma.entropy( α, β )"],["base.dists.gamma.Gamma","base.dists.gamma.Gamma( [α, β] )"],["base.dists.gamma.kurtosis","base.dists.gamma.kurtosis( α, β )"],["base.dists.gamma.logpdf","base.dists.gamma.logpdf( x, α, β )"],["base.dists.gamma.logpdf.factory","base.dists.gamma.logpdf.factory( α, β )"],["base.dists.gamma.mean","base.dists.gamma.mean( α, β )"],["base.dists.gamma.mgf","base.dists.gamma.mgf( t, α, β )"],["base.dists.gamma.mgf.factory","base.dists.gamma.mgf.factory( α, β )"],["base.dists.gamma.mode","base.dists.gamma.mode( α, β )"],["base.dists.gamma.pdf","base.dists.gamma.pdf( x, α, β )"],["base.dists.gamma.pdf.factory","base.dists.gamma.pdf.factory( α, β )"],["base.dists.gamma.quantile","base.dists.gamma.quantile( p, α, β )"],["base.dists.gamma.quantile.factory","base.dists.gamma.quantile.factory( α, β )"],["base.dists.gamma.skewness","base.dists.gamma.skewness( α, β )"],["base.dists.gamma.stdev","base.dists.gamma.stdev( α, β )"],["base.dists.gamma.variance","base.dists.gamma.variance( α, β )"],["base.dists.geometric.cdf","base.dists.geometric.cdf( x, p )"],["base.dists.geometric.cdf.factory","base.dists.geometric.cdf.factory( p )"],["base.dists.geometric.entropy","base.dists.geometric.entropy( p )"],["base.dists.geometric.Geometric","base.dists.geometric.Geometric( [p] )"],["base.dists.geometric.kurtosis","base.dists.geometric.kurtosis( p )"],["base.dists.geometric.logcdf","base.dists.geometric.logcdf( x, p )"],["base.dists.geometric.logcdf.factory","base.dists.geometric.logcdf.factory( p )"],["base.dists.geometric.logpmf","base.dists.geometric.logpmf( x, p )"],["base.dists.geometric.logpmf.factory","base.dists.geometric.logpmf.factory( p )"],["base.dists.geometric.mean","base.dists.geometric.mean( p )"],["base.dists.geometric.median","base.dists.geometric.median( p )"],["base.dists.geometric.mgf","base.dists.geometric.mgf( t, p )"],["base.dists.geometric.mgf.factory","base.dists.geometric.mgf.factory( p )"],["base.dists.geometric.mode","base.dists.geometric.mode( p )"],["base.dists.geometric.pmf","base.dists.geometric.pmf( x, p )"],["base.dists.geometric.pmf.factory","base.dists.geometric.pmf.factory( p )"],["base.dists.geometric.quantile","base.dists.geometric.quantile( r, p )"],["base.dists.geometric.quantile.factory","base.dists.geometric.quantile.factory( p )"],["base.dists.geometric.skewness","base.dists.geometric.skewness( p )"],["base.dists.geometric.stdev","base.dists.geometric.stdev( p )"],["base.dists.geometric.variance","base.dists.geometric.variance( p )"],["base.dists.gumbel.cdf","base.dists.gumbel.cdf( x, μ, β )"],["base.dists.gumbel.cdf.factory","base.dists.gumbel.cdf.factory( μ, β )"],["base.dists.gumbel.entropy","base.dists.gumbel.entropy( μ, β )"],["base.dists.gumbel.Gumbel","base.dists.gumbel.Gumbel( [μ, β] )"],["base.dists.gumbel.kurtosis","base.dists.gumbel.kurtosis( μ, β )"],["base.dists.gumbel.logcdf","base.dists.gumbel.logcdf( x, μ, β )"],["base.dists.gumbel.logcdf.factory","base.dists.gumbel.logcdf.factory( μ, β )"],["base.dists.gumbel.logpdf","base.dists.gumbel.logpdf( x, μ, β )"],["base.dists.gumbel.logpdf.factory","base.dists.gumbel.logpdf.factory( μ, β )"],["base.dists.gumbel.mean","base.dists.gumbel.mean( μ, β )"],["base.dists.gumbel.median","base.dists.gumbel.median( μ, β )"],["base.dists.gumbel.mgf","base.dists.gumbel.mgf( t, μ, β )"],["base.dists.gumbel.mgf.factory","base.dists.gumbel.mgf.factory( μ, β )"],["base.dists.gumbel.mode","base.dists.gumbel.mode( μ, β )"],["base.dists.gumbel.pdf","base.dists.gumbel.pdf( x, μ, β )"],["base.dists.gumbel.pdf.factory","base.dists.gumbel.pdf.factory( μ, β )"],["base.dists.gumbel.quantile","base.dists.gumbel.quantile( p, μ, β )"],["base.dists.gumbel.quantile.factory","base.dists.gumbel.quantile.factory( μ, β )"],["base.dists.gumbel.skewness","base.dists.gumbel.skewness( μ, β )"],["base.dists.gumbel.stdev","base.dists.gumbel.stdev( μ, β )"],["base.dists.gumbel.variance","base.dists.gumbel.variance( μ, β )"],["base.dists.hypergeometric.cdf","base.dists.hypergeometric.cdf( x, N, K, n )"],["base.dists.hypergeometric.cdf.factory","base.dists.hypergeometric.cdf.factory( N, K, n )"],["base.dists.hypergeometric.Hypergeometric","base.dists.hypergeometric.Hypergeometric( [N, K, n] )"],["base.dists.hypergeometric.kurtosis","base.dists.hypergeometric.kurtosis( N, K, n )"],["base.dists.hypergeometric.logpmf","base.dists.hypergeometric.logpmf( x, N, K, n )"],["base.dists.hypergeometric.logpmf.factory","base.dists.hypergeometric.logpmf.factory( N, K, n )"],["base.dists.hypergeometric.mean","base.dists.hypergeometric.mean( N, K, n )"],["base.dists.hypergeometric.mode","base.dists.hypergeometric.mode( N, K, n )"],["base.dists.hypergeometric.pmf","base.dists.hypergeometric.pmf( x, N, K, n )"],["base.dists.hypergeometric.pmf.factory","base.dists.hypergeometric.pmf.factory( N, K, n )"],["base.dists.hypergeometric.quantile","base.dists.hypergeometric.quantile( p, N, K, n )"],["base.dists.hypergeometric.quantile.factory","base.dists.hypergeometric.quantile.factory( N, K, n )"],["base.dists.hypergeometric.skewness","base.dists.hypergeometric.skewness( N, K, n )"],["base.dists.hypergeometric.stdev","base.dists.hypergeometric.stdev( N, K, n )"],["base.dists.hypergeometric.variance","base.dists.hypergeometric.variance( N, K, n )"],["base.dists.invgamma.cdf","base.dists.invgamma.cdf( x, α, β )"],["base.dists.invgamma.cdf.factory","base.dists.invgamma.cdf.factory( α, β )"],["base.dists.invgamma.entropy","base.dists.invgamma.entropy( α, β )"],["base.dists.invgamma.InvGamma","base.dists.invgamma.InvGamma( [α, β] )"],["base.dists.invgamma.kurtosis","base.dists.invgamma.kurtosis( α, β )"],["base.dists.invgamma.logpdf","base.dists.invgamma.logpdf( x, α, β )"],["base.dists.invgamma.logpdf.factory","base.dists.invgamma.logpdf.factory( α, β )"],["base.dists.invgamma.mean","base.dists.invgamma.mean( α, β )"],["base.dists.invgamma.mode","base.dists.invgamma.mode( α, β )"],["base.dists.invgamma.pdf","base.dists.invgamma.pdf( x, α, β )"],["base.dists.invgamma.pdf.factory","base.dists.invgamma.pdf.factory( α, β )"],["base.dists.invgamma.quantile","base.dists.invgamma.quantile( p, α, β )"],["base.dists.invgamma.quantile.factory","base.dists.invgamma.quantile.factory( α, β )"],["base.dists.invgamma.skewness","base.dists.invgamma.skewness( α, β )"],["base.dists.invgamma.stdev","base.dists.invgamma.stdev( α, β )"],["base.dists.invgamma.variance","base.dists.invgamma.variance( α, β )"],["base.dists.kumaraswamy.cdf","base.dists.kumaraswamy.cdf( x, a, b )"],["base.dists.kumaraswamy.cdf.factory","base.dists.kumaraswamy.cdf.factory( a, b )"],["base.dists.kumaraswamy.Kumaraswamy","base.dists.kumaraswamy.Kumaraswamy( [a, b] )"],["base.dists.kumaraswamy.kurtosis","base.dists.kumaraswamy.kurtosis( a, b )"],["base.dists.kumaraswamy.logcdf","base.dists.kumaraswamy.logcdf( x, a, b )"],["base.dists.kumaraswamy.logcdf.factory","base.dists.kumaraswamy.logcdf.factory( a, b )"],["base.dists.kumaraswamy.logpdf","base.dists.kumaraswamy.logpdf( x, a, b )"],["base.dists.kumaraswamy.logpdf.factory","base.dists.kumaraswamy.logpdf.factory( a, b )"],["base.dists.kumaraswamy.mean","base.dists.kumaraswamy.mean( a, b )"],["base.dists.kumaraswamy.median","base.dists.kumaraswamy.median( a, b )"],["base.dists.kumaraswamy.mode","base.dists.kumaraswamy.mode( a, b )"],["base.dists.kumaraswamy.pdf","base.dists.kumaraswamy.pdf( x, a, b )"],["base.dists.kumaraswamy.pdf.factory","base.dists.kumaraswamy.pdf.factory( a, b )"],["base.dists.kumaraswamy.quantile","base.dists.kumaraswamy.quantile( p, a, b )"],["base.dists.kumaraswamy.quantile.factory","base.dists.kumaraswamy.quantile.factory( a, b )"],["base.dists.kumaraswamy.skewness","base.dists.kumaraswamy.skewness( a, b )"],["base.dists.kumaraswamy.stdev","base.dists.kumaraswamy.stdev( a, b )"],["base.dists.kumaraswamy.variance","base.dists.kumaraswamy.variance( a, b )"],["base.dists.laplace.cdf","base.dists.laplace.cdf( x, μ, b )"],["base.dists.laplace.cdf.factory","base.dists.laplace.cdf.factory( μ, b )"],["base.dists.laplace.entropy","base.dists.laplace.entropy( μ, b )"],["base.dists.laplace.kurtosis","base.dists.laplace.kurtosis( μ, b )"],["base.dists.laplace.Laplace","base.dists.laplace.Laplace( [μ, b] )"],["base.dists.laplace.logcdf","base.dists.laplace.logcdf( x, μ, b )"],["base.dists.laplace.logcdf.factory","base.dists.laplace.logcdf.factory( μ, b )"],["base.dists.laplace.logpdf","base.dists.laplace.logpdf( x, μ, b )"],["base.dists.laplace.logpdf.factory","base.dists.laplace.logpdf.factory( μ, b )"],["base.dists.laplace.mean","base.dists.laplace.mean( μ, b )"],["base.dists.laplace.median","base.dists.laplace.median( μ, b )"],["base.dists.laplace.mgf","base.dists.laplace.mgf( t, μ, b )"],["base.dists.laplace.mgf.factory","base.dists.laplace.mgf.factory( μ, b )"],["base.dists.laplace.mode","base.dists.laplace.mode( μ, b )"],["base.dists.laplace.pdf","base.dists.laplace.pdf( x, μ, b )"],["base.dists.laplace.pdf.factory","base.dists.laplace.pdf.factory( μ, b )"],["base.dists.laplace.quantile","base.dists.laplace.quantile( p, μ, b )"],["base.dists.laplace.quantile.factory","base.dists.laplace.quantile.factory( μ, b )"],["base.dists.laplace.skewness","base.dists.laplace.skewness( μ, b )"],["base.dists.laplace.stdev","base.dists.laplace.stdev( μ, b )"],["base.dists.laplace.variance","base.dists.laplace.variance( μ, b )"],["base.dists.levy.cdf","base.dists.levy.cdf( x, μ, c )"],["base.dists.levy.cdf.factory","base.dists.levy.cdf.factory( μ, c )"],["base.dists.levy.entropy","base.dists.levy.entropy( μ, c )"],["base.dists.levy.Levy","base.dists.levy.Levy( [μ, c] )"],["base.dists.levy.logcdf","base.dists.levy.logcdf( x, μ, c )"],["base.dists.levy.logcdf.factory","base.dists.levy.logcdf.factory( μ, c )"],["base.dists.levy.logpdf","base.dists.levy.logpdf( x, μ, c )"],["base.dists.levy.logpdf.factory","base.dists.levy.logpdf.factory( μ, c )"],["base.dists.levy.mean","base.dists.levy.mean( μ, c )"],["base.dists.levy.median","base.dists.levy.median( μ, c )"],["base.dists.levy.mode","base.dists.levy.mode( μ, c )"],["base.dists.levy.pdf","base.dists.levy.pdf( x, μ, c )"],["base.dists.levy.pdf.factory","base.dists.levy.pdf.factory( μ, c )"],["base.dists.levy.quantile","base.dists.levy.quantile( p, μ, c )"],["base.dists.levy.quantile.factory","base.dists.levy.quantile.factory( μ, c )"],["base.dists.levy.stdev","base.dists.levy.stdev( μ, c )"],["base.dists.levy.variance","base.dists.levy.variance( μ, c )"],["base.dists.logistic.cdf","base.dists.logistic.cdf( x, μ, s )"],["base.dists.logistic.cdf.factory","base.dists.logistic.cdf.factory( μ, s )"],["base.dists.logistic.entropy","base.dists.logistic.entropy( μ, s )"],["base.dists.logistic.kurtosis","base.dists.logistic.kurtosis( μ, s )"],["base.dists.logistic.logcdf","base.dists.logistic.logcdf( x, μ, s )"],["base.dists.logistic.logcdf.factory","base.dists.logistic.logcdf.factory( μ, s )"],["base.dists.logistic.Logistic","base.dists.logistic.Logistic( [μ, s] )"],["base.dists.logistic.logpdf","base.dists.logistic.logpdf( x, μ, s )"],["base.dists.logistic.logpdf.factory","base.dists.logistic.logpdf.factory( μ, s )"],["base.dists.logistic.mean","base.dists.logistic.mean( μ, s )"],["base.dists.logistic.median","base.dists.logistic.median( μ, s )"],["base.dists.logistic.mgf","base.dists.logistic.mgf( t, μ, s )"],["base.dists.logistic.mgf.factory","base.dists.logistic.mgf.factory( μ, s )"],["base.dists.logistic.mode","base.dists.logistic.mode( μ, s )"],["base.dists.logistic.pdf","base.dists.logistic.pdf( x, μ, s )"],["base.dists.logistic.pdf.factory","base.dists.logistic.pdf.factory( μ, s )"],["base.dists.logistic.quantile","base.dists.logistic.quantile( p, μ, s )"],["base.dists.logistic.quantile.factory","base.dists.logistic.quantile.factory( μ, s )"],["base.dists.logistic.skewness","base.dists.logistic.skewness( μ, s )"],["base.dists.logistic.stdev","base.dists.logistic.stdev( μ, s )"],["base.dists.logistic.variance","base.dists.logistic.variance( μ, s )"],["base.dists.lognormal.cdf","base.dists.lognormal.cdf( x, μ, σ )"],["base.dists.lognormal.cdf.factory","base.dists.lognormal.cdf.factory( μ, σ )"],["base.dists.lognormal.entropy","base.dists.lognormal.entropy( μ, σ )"],["base.dists.lognormal.kurtosis","base.dists.lognormal.kurtosis( μ, σ )"],["base.dists.lognormal.LogNormal","base.dists.lognormal.LogNormal( [μ, σ] )"],["base.dists.lognormal.logpdf","base.dists.lognormal.logpdf( x, μ, σ )"],["base.dists.lognormal.logpdf.factory","base.dists.lognormal.logpdf.factory( μ, σ )"],["base.dists.lognormal.mean","base.dists.lognormal.mean( μ, σ )"],["base.dists.lognormal.median","base.dists.lognormal.median( μ, σ )"],["base.dists.lognormal.mode","base.dists.lognormal.mode( μ, σ )"],["base.dists.lognormal.pdf","base.dists.lognormal.pdf( x, μ, σ )"],["base.dists.lognormal.pdf.factory","base.dists.lognormal.pdf.factory( μ, σ )"],["base.dists.lognormal.quantile","base.dists.lognormal.quantile( p, μ, σ )"],["base.dists.lognormal.quantile.factory","base.dists.lognormal.quantile.factory( μ, σ )"],["base.dists.lognormal.skewness","base.dists.lognormal.skewness( μ, σ )"],["base.dists.lognormal.stdev","base.dists.lognormal.stdev( μ, σ )"],["base.dists.lognormal.variance","base.dists.lognormal.variance( μ, σ )"],["base.dists.negativeBinomial.cdf","base.dists.negativeBinomial.cdf( x, r, p )"],["base.dists.negativeBinomial.cdf.factory","base.dists.negativeBinomial.cdf.factory( r, p )"],["base.dists.negativeBinomial.kurtosis","base.dists.negativeBinomial.kurtosis( r, p )"],["base.dists.negativeBinomial.logpmf","base.dists.negativeBinomial.logpmf( x, r, p )"],["base.dists.negativeBinomial.logpmf.factory","base.dists.negativeBinomial.logpmf.factory( r, p )"],["base.dists.negativeBinomial.mean","base.dists.negativeBinomial.mean( r, p )"],["base.dists.negativeBinomial.mgf","base.dists.negativeBinomial.mgf( x, r, p )"],["base.dists.negativeBinomial.mgf.factory","base.dists.negativeBinomial.mgf.factory( r, p )"],["base.dists.negativeBinomial.mode","base.dists.negativeBinomial.mode( r, p )"],["base.dists.negativeBinomial.NegativeBinomial","base.dists.negativeBinomial.NegativeBinomial( [r, p] )"],["base.dists.negativeBinomial.pmf","base.dists.negativeBinomial.pmf( x, r, p )"],["base.dists.negativeBinomial.pmf.factory","base.dists.negativeBinomial.pmf.factory( r, p )"],["base.dists.negativeBinomial.quantile","base.dists.negativeBinomial.quantile( k, r, p )"],["base.dists.negativeBinomial.quantile.factory","base.dists.negativeBinomial.quantile.factory( r, p )"],["base.dists.negativeBinomial.skewness","base.dists.negativeBinomial.skewness( r, p )"],["base.dists.negativeBinomial.stdev","base.dists.negativeBinomial.stdev( r, p )"],["base.dists.negativeBinomial.variance","base.dists.negativeBinomial.variance( r, p )"],["base.dists.normal.cdf","base.dists.normal.cdf( x, μ, σ )"],["base.dists.normal.cdf.factory","base.dists.normal.cdf.factory( μ, σ )"],["base.dists.normal.entropy","base.dists.normal.entropy( μ, σ )"],["base.dists.normal.kurtosis","base.dists.normal.kurtosis( μ, σ )"],["base.dists.normal.logpdf","base.dists.normal.logpdf( x, μ, σ )"],["base.dists.normal.logpdf.factory","base.dists.normal.logpdf.factory( μ, σ )"],["base.dists.normal.mean","base.dists.normal.mean( μ, σ )"],["base.dists.normal.median","base.dists.normal.median( μ, σ )"],["base.dists.normal.mgf","base.dists.normal.mgf( x, μ, σ )"],["base.dists.normal.mgf.factory","base.dists.normal.mgf.factory( μ, σ )"],["base.dists.normal.mode","base.dists.normal.mode( μ, σ )"],["base.dists.normal.Normal","base.dists.normal.Normal( [μ, σ] )"],["base.dists.normal.pdf","base.dists.normal.pdf( x, μ, σ )"],["base.dists.normal.pdf.factory","base.dists.normal.pdf.factory( μ, σ )"],["base.dists.normal.quantile","base.dists.normal.quantile( p, μ, σ )"],["base.dists.normal.quantile.factory","base.dists.normal.quantile.factory( μ, σ )"],["base.dists.normal.skewness","base.dists.normal.skewness( μ, σ )"],["base.dists.normal.stdev","base.dists.normal.stdev( μ, σ )"],["base.dists.normal.variance","base.dists.normal.variance( μ, σ )"],["base.dists.pareto1.cdf","base.dists.pareto1.cdf( x, α, β )"],["base.dists.pareto1.cdf.factory","base.dists.pareto1.cdf.factory( α, β )"],["base.dists.pareto1.entropy","base.dists.pareto1.entropy( α, β )"],["base.dists.pareto1.kurtosis","base.dists.pareto1.kurtosis( α, β )"],["base.dists.pareto1.logcdf","base.dists.pareto1.logcdf( x, α, β )"],["base.dists.pareto1.logcdf.factory","base.dists.pareto1.logcdf.factory( α, β )"],["base.dists.pareto1.logpdf","base.dists.pareto1.logpdf( x, α, β )"],["base.dists.pareto1.logpdf.factory","base.dists.pareto1.logpdf.factory( α, β )"],["base.dists.pareto1.mean","base.dists.pareto1.mean( α, β )"],["base.dists.pareto1.median","base.dists.pareto1.median( α, β )"],["base.dists.pareto1.mode","base.dists.pareto1.mode( α, β )"],["base.dists.pareto1.Pareto1","base.dists.pareto1.Pareto1( [α, β] )"],["base.dists.pareto1.pdf","base.dists.pareto1.pdf( x, α, β )"],["base.dists.pareto1.pdf.factory","base.dists.pareto1.pdf.factory( α, β )"],["base.dists.pareto1.quantile","base.dists.pareto1.quantile( p, α, β )"],["base.dists.pareto1.quantile.factory","base.dists.pareto1.quantile.factory( α, β )"],["base.dists.pareto1.skewness","base.dists.pareto1.skewness( α, β )"],["base.dists.pareto1.stdev","base.dists.pareto1.stdev( α, β )"],["base.dists.pareto1.variance","base.dists.pareto1.variance( α, β )"],["base.dists.poisson.cdf","base.dists.poisson.cdf( x, λ )"],["base.dists.poisson.cdf.factory","base.dists.poisson.cdf.factory( λ )"],["base.dists.poisson.entropy","base.dists.poisson.entropy( λ )"],["base.dists.poisson.kurtosis","base.dists.poisson.kurtosis( λ )"],["base.dists.poisson.logpmf","base.dists.poisson.logpmf( x, λ )"],["base.dists.poisson.logpmf.factory","base.dists.poisson.logpmf.factory( λ )"],["base.dists.poisson.mean","base.dists.poisson.mean( λ )"],["base.dists.poisson.median","base.dists.poisson.median( λ )"],["base.dists.poisson.mgf","base.dists.poisson.mgf( x, λ )"],["base.dists.poisson.mgf.factory","base.dists.poisson.mgf.factory( λ )"],["base.dists.poisson.mode","base.dists.poisson.mode( λ )"],["base.dists.poisson.pmf","base.dists.poisson.pmf( x, λ )"],["base.dists.poisson.pmf.factory","base.dists.poisson.pmf.factory( λ )"],["base.dists.poisson.Poisson","base.dists.poisson.Poisson( [λ] )"],["base.dists.poisson.quantile","base.dists.poisson.quantile( p, λ )"],["base.dists.poisson.quantile.factory","base.dists.poisson.quantile.factory( λ )"],["base.dists.poisson.skewness","base.dists.poisson.skewness( λ )"],["base.dists.poisson.stdev","base.dists.poisson.stdev( λ )"],["base.dists.poisson.variance","base.dists.poisson.variance( λ )"],["base.dists.rayleigh.cdf","base.dists.rayleigh.cdf( x, sigma )"],["base.dists.rayleigh.cdf.factory","base.dists.rayleigh.cdf.factory( sigma )"],["base.dists.rayleigh.entropy","base.dists.rayleigh.entropy( σ )"],["base.dists.rayleigh.kurtosis","base.dists.rayleigh.kurtosis( σ )"],["base.dists.rayleigh.logcdf","base.dists.rayleigh.logcdf( x, sigma )"],["base.dists.rayleigh.logcdf.factory","base.dists.rayleigh.logcdf.factory( sigma )"],["base.dists.rayleigh.logpdf","base.dists.rayleigh.logpdf( x, sigma )"],["base.dists.rayleigh.logpdf.factory","base.dists.rayleigh.logpdf.factory( sigma )"],["base.dists.rayleigh.mean","base.dists.rayleigh.mean( σ )"],["base.dists.rayleigh.median","base.dists.rayleigh.median( σ )"],["base.dists.rayleigh.mgf","base.dists.rayleigh.mgf( t, sigma )"],["base.dists.rayleigh.mgf.factory","base.dists.rayleigh.mgf.factory( sigma )"],["base.dists.rayleigh.mode","base.dists.rayleigh.mode( σ )"],["base.dists.rayleigh.pdf","base.dists.rayleigh.pdf( x, sigma )"],["base.dists.rayleigh.pdf.factory","base.dists.rayleigh.pdf.factory( sigma )"],["base.dists.rayleigh.quantile","base.dists.rayleigh.quantile( p, sigma )"],["base.dists.rayleigh.quantile.factory","base.dists.rayleigh.quantile.factory( sigma )"],["base.dists.rayleigh.Rayleigh","base.dists.rayleigh.Rayleigh( [σ] )"],["base.dists.rayleigh.skewness","base.dists.rayleigh.skewness( σ )"],["base.dists.rayleigh.stdev","base.dists.rayleigh.stdev( σ )"],["base.dists.rayleigh.variance","base.dists.rayleigh.variance( σ )"],["base.dists.t.cdf","base.dists.t.cdf( x, v )"],["base.dists.t.cdf.factory","base.dists.t.cdf.factory( v )"],["base.dists.t.entropy","base.dists.t.entropy( v )"],["base.dists.t.kurtosis","base.dists.t.kurtosis( v )"],["base.dists.t.mean","base.dists.t.mean( v )"],["base.dists.t.median","base.dists.t.median( v )"],["base.dists.t.mode","base.dists.t.mode( v )"],["base.dists.t.pdf","base.dists.t.pdf( x, v )"],["base.dists.t.pdf.factory","base.dists.t.pdf.factory( v )"],["base.dists.t.quantile","base.dists.t.quantile( p, v )"],["base.dists.t.quantile.factory","base.dists.t.quantile.factory( v )"],["base.dists.t.skewness","base.dists.t.skewness( v )"],["base.dists.t.stdev","base.dists.t.stdev( v )"],["base.dists.t.T","base.dists.t.T( [v] )"],["base.dists.t.variance","base.dists.t.variance( v )"],["base.dists.triangular.cdf","base.dists.triangular.cdf( x, a, b, c )"],["base.dists.triangular.cdf.factory","base.dists.triangular.cdf.factory( a, b, c )"],["base.dists.triangular.entropy","base.dists.triangular.entropy( a, b, c )"],["base.dists.triangular.kurtosis","base.dists.triangular.kurtosis( a, b, c )"],["base.dists.triangular.logcdf","base.dists.triangular.logcdf( x, a, b, c )"],["base.dists.triangular.logcdf.factory","base.dists.triangular.logcdf.factory( a, b, c )"],["base.dists.triangular.logpdf","base.dists.triangular.logpdf( x, a, b, c )"],["base.dists.triangular.logpdf.factory","base.dists.triangular.logpdf.factory( a, b, c )"],["base.dists.triangular.mean","base.dists.triangular.mean( a, b, c )"],["base.dists.triangular.median","base.dists.triangular.median( a, b, c )"],["base.dists.triangular.mgf","base.dists.triangular.mgf( t, a, b, c )"],["base.dists.triangular.mgf.factory","base.dists.triangular.mgf.factory( a, b, c )"],["base.dists.triangular.mode","base.dists.triangular.mode( a, b, c )"],["base.dists.triangular.pdf","base.dists.triangular.pdf( x, a, b, c )"],["base.dists.triangular.pdf.factory","base.dists.triangular.pdf.factory( a, b, c )"],["base.dists.triangular.quantile","base.dists.triangular.quantile( p, a, b, c )"],["base.dists.triangular.quantile.factory","base.dists.triangular.quantile.factory( a, b, c )"],["base.dists.triangular.skewness","base.dists.triangular.skewness( a, b, c )"],["base.dists.triangular.stdev","base.dists.triangular.stdev( a, b, c )"],["base.dists.triangular.Triangular","base.dists.triangular.Triangular( [a, b, c] )"],["base.dists.triangular.variance","base.dists.triangular.variance( a, b, c )"],["base.dists.uniform.cdf","base.dists.uniform.cdf( x, a, b )"],["base.dists.uniform.cdf.factory","base.dists.uniform.cdf.factory( a, b )"],["base.dists.uniform.entropy","base.dists.uniform.entropy( a, b )"],["base.dists.uniform.kurtosis","base.dists.uniform.kurtosis( a, b )"],["base.dists.uniform.logcdf","base.dists.uniform.logcdf( x, a, b )"],["base.dists.uniform.logcdf.factory","base.dists.uniform.logcdf.factory( a, b )"],["base.dists.uniform.logpdf","base.dists.uniform.logpdf( x, a, b )"],["base.dists.uniform.logpdf.factory","base.dists.uniform.logpdf.factory( a, b )"],["base.dists.uniform.mean","base.dists.uniform.mean( a, b )"],["base.dists.uniform.median","base.dists.uniform.median( a, b )"],["base.dists.uniform.mgf","base.dists.uniform.mgf( t, a, b )"],["base.dists.uniform.mgf.factory","base.dists.uniform.mgf.factory( a, b )"],["base.dists.uniform.pdf","base.dists.uniform.pdf( x, a, b )"],["base.dists.uniform.pdf.factory","base.dists.uniform.pdf.factory( a, b )"],["base.dists.uniform.quantile","base.dists.uniform.quantile( p, a, b )"],["base.dists.uniform.quantile.factory","base.dists.uniform.quantile.factory( a, b )"],["base.dists.uniform.skewness","base.dists.uniform.skewness( a, b )"],["base.dists.uniform.stdev","base.dists.uniform.stdev( a, b )"],["base.dists.uniform.Uniform","base.dists.uniform.Uniform( [a, b] )"],["base.dists.uniform.variance","base.dists.uniform.variance( a, b )"],["base.dists.weibull.cdf","base.dists.weibull.cdf( x, k, λ )"],["base.dists.weibull.cdf.factory","base.dists.weibull.cdf.factory( k, λ )"],["base.dists.weibull.entropy","base.dists.weibull.entropy( k, λ )"],["base.dists.weibull.kurtosis","base.dists.weibull.kurtosis( k, λ )"],["base.dists.weibull.logcdf","base.dists.weibull.logcdf( x, k, λ )"],["base.dists.weibull.logcdf.factory","base.dists.weibull.logcdf.factory( k, λ)"],["base.dists.weibull.logpdf","base.dists.weibull.logpdf( x, k, λ )"],["base.dists.weibull.logpdf.factory","base.dists.weibull.logpdf.factory( k, λ )"],["base.dists.weibull.mean","base.dists.weibull.mean( k, λ )"],["base.dists.weibull.median","base.dists.weibull.median( k, λ )"],["base.dists.weibull.mgf","base.dists.weibull.mgf( x, k, λ )"],["base.dists.weibull.mgf.factory","base.dists.weibull.mgf.factory( k, λ )"],["base.dists.weibull.mode","base.dists.weibull.mode( k, λ )"],["base.dists.weibull.pdf","base.dists.weibull.pdf( x, k, λ )"],["base.dists.weibull.pdf.factory","base.dists.weibull.pdf.factory( k, λ )"],["base.dists.weibull.quantile","base.dists.weibull.quantile( p, k, λ )"],["base.dists.weibull.quantile.factory","base.dists.weibull.quantile.factory( k, λ )"],["base.dists.weibull.skewness","base.dists.weibull.skewness( k, λ )"],["base.dists.weibull.stdev","base.dists.weibull.stdev( k, λ )"],["base.dists.weibull.variance","base.dists.weibull.variance( k, λ )"],["base.dists.weibull.Weibull","base.dists.weibull.Weibull( [k, λ] )"],["base.ellipe","base.ellipe( m )"],["base.ellipk","base.ellipk( m )"],["base.epsdiff","base.epsdiff( x, y[, scale] )"],["base.erf","base.erf( x )"],["base.erfc","base.erfc( x )"],["base.erfcinv","base.erfcinv( x )"],["base.erfinv","base.erfinv( x )"],["base.eta","base.eta( s )"],["base.evalpoly","base.evalpoly( c, x )"],["base.evalpoly.factory","base.evalpoly.factory( c )"],["base.evalrational","base.evalrational( P, Q, x )"],["base.evalrational.factory","base.evalrational.factory( P, Q )"],["base.exp","base.exp( x )"],["base.exp2","base.exp2( x )"],["base.exp10","base.exp10( x )"],["base.expit","base.expit( x )"],["base.expm1","base.expm1( x )"],["base.expm1rel","base.expm1rel( x )"],["base.exponent","base.exponent( x )"],["base.exponentf","base.exponentf( x )"],["base.factorial","base.factorial( x )"],["base.factorialln","base.factorialln( x )"],["base.fallingFactorial","base.fallingFactorial( x, n )"],["base.fibonacci","base.fibonacci( n )"],["base.fibonacciIndex","base.fibonacciIndex( F )"],["base.fibpoly","base.fibpoly( n, x )"],["base.fibpoly.factory","base.fibpoly.factory( n )"],["base.flipsign","base.flipsign( x, y )"],["base.float32ToInt32","base.float32ToInt32( x )"],["base.float32ToUint32","base.float32ToUint32( x )"],["base.float64ToFloat32","base.float64ToFloat32( x )"],["base.float64ToInt32","base.float64ToInt32( x )"],["base.float64ToUint32","base.float64ToUint32( x )"],["base.floor","base.floor( x )"],["base.floor2","base.floor2( x )"],["base.floor10","base.floor10( x )"],["base.floorb","base.floorb( x, n, b )"],["base.floorn","base.floorn( x, n )"],["base.floorsd","base.floorsd( x, n[, b] )"],["base.fresnel","base.fresnel( [out,] x )"],["base.fresnelc","base.fresnelc( x )"],["base.fresnels","base.fresnels( x )"],["base.frexp","base.frexp( [out,] x )"],["base.fromBinaryString","base.fromBinaryString( bstr )"],["base.fromBinaryStringf","base.fromBinaryStringf( bstr )"],["base.fromBinaryStringUint8","base.fromBinaryStringUint8( bstr )"],["base.fromBinaryStringUint16","base.fromBinaryStringUint16( bstr )"],["base.fromBinaryStringUint32","base.fromBinaryStringUint32( bstr )"],["base.fromWordf","base.fromWordf( x )"],["base.fromWords","base.fromWords( high, low )"],["base.gamma","base.gamma( x )"],["base.gamma1pm1","base.gamma1pm1( x )"],["base.gammaDeltaRatio","base.gammaDeltaRatio( z, delta )"],["base.gammainc","base.gammainc( x, s[, regularized[, upper]] )"],["base.gammaincinv","base.gammaincinv( p, a[, upper] )"],["base.gammaLanczosSum","base.gammaLanczosSum( x )"],["base.gammaLanczosSumExpGScaled","base.gammaLanczosSumExpGScaled( x )"],["base.gammaln","base.gammaln( x )"],["base.gasum","base.gasum( N, x, stride )"],["base.gasum.ndarray","base.gasum.ndarray( N, x, stride, offset )"],["base.gaxpy","base.gaxpy( N, alpha, x, strideX, y, strideY )"],["base.gaxpy.ndarray","base.gaxpy.ndarray( N, alpha, x, strideX, offsetX, y, strideY, offsetY )"],["base.gcd","base.gcd( a, b )"],["base.gcopy","base.gcopy( N, x, strideX, y, strideY )"],["base.gcopy.ndarray","base.gcopy.ndarray( N, x, strideX, offsetX, y, strideY, offsetY )"],["base.getHighWord","base.getHighWord( x )"],["base.getLowWord","base.getLowWord( x )"],["base.hacovercos","base.hacovercos( x )"],["base.hacoversin","base.hacoversin( x )"],["base.havercos","base.havercos( x )"],["base.haversin","base.haversin( x )"],["base.heaviside","base.heaviside( x[, continuity] )"],["base.hermitepoly","base.hermitepoly( n, x )"],["base.hermitepoly.factory","base.hermitepoly.factory( n )"],["base.hypot","base.hypot( x, y )"],["base.imul","base.imul( a, b )"],["base.imuldw","base.imuldw( [out,] a, b )"],["base.int32ToUint32","base.int32ToUint32( x )"],["base.inv","base.inv( x )"],["base.isEven","base.isEven( x )"],["base.isEvenInt32","base.isEvenInt32( x )"],["base.isFinite","base.isFinite( x )"],["base.isInfinite","base.isInfinite( x )"],["base.isInteger","base.isInteger( x )"],["base.isnan","base.isnan( x )"],["base.isNegativeInteger","base.isNegativeInteger( x )"],["base.isNegativeZero","base.isNegativeZero( x )"],["base.isNonNegativeInteger","base.isNonNegativeInteger( x )"],["base.isNonPositiveInteger","base.isNonPositiveInteger( x )"],["base.isOdd","base.isOdd( x )"],["base.isOddInt32","base.isOddInt32( x )"],["base.isPositiveInteger","base.isPositiveInteger( x )"],["base.isPositiveZero","base.isPositiveZero( x )"],["base.isPow2Uint32","base.isPow2Uint32( x )"],["base.isProbability","base.isProbability( x )"],["base.isSafeInteger","base.isSafeInteger( x )"],["base.kernelBetainc","base.kernelBetainc( [out,] x, a, b, regularized, upper )"],["base.kernelBetaincinv","base.kernelBetaincinv( a, b, p, q )"],["base.kernelCos","base.kernelCos( x, y )"],["base.kernelSin","base.kernelSin( x, y )"],["base.kernelTan","base.kernelTan( x, y, k )"],["base.kroneckerDelta","base.kroneckerDelta( i, j )"],["base.lcm","base.lcm( a, b )"],["base.ldexp","base.ldexp( frac, exp )"],["base.ln","base.ln( x )"],["base.log","base.log( x, b )"],["base.log1mexp","base.log1mexp( x )"],["base.log1p","base.log1p( x )"],["base.log1pexp","base.log1pexp( x )"],["base.log2","base.log2( x )"],["base.log10","base.log10( x )"],["base.logaddexp","base.logaddexp( x, y )"],["base.logit","base.logit( p )"],["base.lucas","base.lucas( n )"],["base.lucaspoly","base.lucaspoly( n, x )"],["base.lucaspoly.factory","base.lucaspoly.factory( n )"],["base.max","base.max( [x[, y[, ...args]]] )"],["base.maxabs","base.maxabs( [x[, y[, ...args]]] )"],["base.min","base.min( [x[, y[, ...args]]] )"],["base.minabs","base.minabs( [x[, y[, ...args]]] )"],["base.minmax","base.minmax( [out,] x[, y[, ...args]] )"],["base.minmaxabs","base.minmaxabs( [out,] x[, y[, ...args]] )"],["base.modf","base.modf( [out,] x )"],["base.ndarray","base.ndarray( dtype, ndims[, options] )"],["base.ndarrayMemoized","base.ndarrayMemoized( dtype, ndims[, options] )"],["base.negafibonacci","base.negafibonacci( n )"],["base.negalucas","base.negalucas( n )"],["base.nonfibonacci","base.nonfibonacci( n )"],["base.normalize","base.normalize( [out,] x )"],["base.normalizef","base.normalizef( [out,] x )"],["base.normhermitepoly","base.normhermitepoly( n, x )"],["base.normhermitepoly.factory","base.normhermitepoly.factory( n )"],["base.pdiff","base.pdiff( x, y )"],["base.polygamma","base.polygamma( n, x )"],["base.pow","base.pow( b, x )"],["base.powm1","base.powm1( b, x )"],["base.rad2deg","base.rad2deg( x )"],["base.ramp","base.ramp( x )"],["base.random.arcsine","base.random.arcsine( a, b )"],["base.random.arcsine.factory","base.random.arcsine.factory( [a, b, ][options] )"],["base.random.arcsine.NAME","base.random.arcsine.NAME"],["base.random.arcsine.PRNG","base.random.arcsine.PRNG"],["base.random.arcsine.seed","base.random.arcsine.seed"],["base.random.arcsine.seedLength","base.random.arcsine.seedLength"],["base.random.arcsine.state","base.random.arcsine.state"],["base.random.arcsine.stateLength","base.random.arcsine.stateLength"],["base.random.arcsine.byteLength","base.random.arcsine.byteLength"],["base.random.arcsine.toJSON","base.random.arcsine.toJSON()"],["base.random.bernoulli","base.random.bernoulli( p )"],["base.random.bernoulli.factory","base.random.bernoulli.factory( [p, ][options] )"],["base.random.bernoulli.NAME","base.random.bernoulli.NAME"],["base.random.bernoulli.PRNG","base.random.bernoulli.PRNG"],["base.random.bernoulli.seed","base.random.bernoulli.seed"],["base.random.bernoulli.seedLength","base.random.bernoulli.seedLength"],["base.random.bernoulli.state","base.random.bernoulli.state"],["base.random.bernoulli.stateLength","base.random.bernoulli.stateLength"],["base.random.bernoulli.byteLength","base.random.bernoulli.byteLength"],["base.random.bernoulli.toJSON","base.random.bernoulli.toJSON()"],["base.random.beta","base.random.beta( α, β )"],["base.random.beta.factory","base.random.beta.factory( [α, β, ][options] )"],["base.random.beta.NAME","base.random.beta.NAME"],["base.random.beta.PRNG","base.random.beta.PRNG"],["base.random.beta.seed","base.random.beta.seed"],["base.random.beta.seedLength","base.random.beta.seedLength"],["base.random.beta.state","base.random.beta.state"],["base.random.beta.stateLength","base.random.beta.stateLength"],["base.random.beta.byteLength","base.random.beta.byteLength"],["base.random.beta.toJSON","base.random.beta.toJSON()"],["base.random.betaprime","base.random.betaprime( α, β )"],["base.random.betaprime.factory","base.random.betaprime.factory( [α, β, ][options] )"],["base.random.betaprime.NAME","base.random.betaprime.NAME"],["base.random.betaprime.PRNG","base.random.betaprime.PRNG"],["base.random.betaprime.seed","base.random.betaprime.seed"],["base.random.betaprime.seedLength","base.random.betaprime.seedLength"],["base.random.betaprime.state","base.random.betaprime.state"],["base.random.betaprime.stateLength","base.random.betaprime.stateLength"],["base.random.betaprime.byteLength","base.random.betaprime.byteLength"],["base.random.betaprime.toJSON","base.random.betaprime.toJSON()"],["base.random.binomial","base.random.binomial( n, p )"],["base.random.binomial.factory","base.random.binomial.factory( [n, p, ][options] )"],["base.random.binomial.NAME","base.random.binomial.NAME"],["base.random.binomial.PRNG","base.random.binomial.PRNG"],["base.random.binomial.seed","base.random.binomial.seed"],["base.random.binomial.seedLength","base.random.binomial.seedLength"],["base.random.binomial.state","base.random.binomial.state"],["base.random.binomial.stateLength","base.random.binomial.stateLength"],["base.random.binomial.byteLength","base.random.binomial.byteLength"],["base.random.binomial.toJSON","base.random.binomial.toJSON()"],["base.random.boxMuller","base.random.boxMuller()"],["base.random.boxMuller.factory","base.random.boxMuller.factory( [options] )"],["base.random.boxMuller.NAME","base.random.boxMuller.NAME"],["base.random.boxMuller.PRNG","base.random.boxMuller.PRNG"],["base.random.boxMuller.seed","base.random.boxMuller.seed"],["base.random.boxMuller.seedLength","base.random.boxMuller.seedLength"],["base.random.boxMuller.state","base.random.boxMuller.state"],["base.random.boxMuller.stateLength","base.random.boxMuller.stateLength"],["base.random.boxMuller.byteLength","base.random.boxMuller.byteLength"],["base.random.boxMuller.toJSON","base.random.boxMuller.toJSON()"],["base.random.cauchy","base.random.cauchy( x0, Ɣ )"],["base.random.cauchy.factory","base.random.cauchy.factory( [x0, Ɣ, ][options] )"],["base.random.cauchy.NAME","base.random.cauchy.NAME"],["base.random.cauchy.PRNG","base.random.cauchy.PRNG"],["base.random.cauchy.seed","base.random.cauchy.seed"],["base.random.cauchy.seedLength","base.random.cauchy.seedLength"],["base.random.cauchy.state","base.random.cauchy.state"],["base.random.cauchy.stateLength","base.random.cauchy.stateLength"],["base.random.cauchy.byteLength","base.random.cauchy.byteLength"],["base.random.cauchy.toJSON","base.random.cauchy.toJSON()"],["base.random.chi","base.random.chi( k )"],["base.random.chi.factory","base.random.chi.factory( [k, ][options] )"],["base.random.chi.NAME","base.random.chi.NAME"],["base.random.chi.PRNG","base.random.chi.PRNG"],["base.random.chi.seed","base.random.chi.seed"],["base.random.chi.seedLength","base.random.chi.seedLength"],["base.random.chi.state","base.random.chi.state"],["base.random.chi.stateLength","base.random.chi.stateLength"],["base.random.chi.byteLength","base.random.chi.byteLength"],["base.random.chi.toJSON","base.random.chi.toJSON()"],["base.random.chisquare","base.random.chisquare( k )"],["base.random.chisquare.factory","base.random.chisquare.factory( [k, ][options] )"],["base.random.chisquare.NAME","base.random.chisquare.NAME"],["base.random.chisquare.PRNG","base.random.chisquare.PRNG"],["base.random.chisquare.seed","base.random.chisquare.seed"],["base.random.chisquare.seedLength","base.random.chisquare.seedLength"],["base.random.chisquare.state","base.random.chisquare.state"],["base.random.chisquare.stateLength","base.random.chisquare.stateLength"],["base.random.chisquare.byteLength","base.random.chisquare.byteLength"],["base.random.chisquare.toJSON","base.random.chisquare.toJSON()"],["base.random.cosine","base.random.cosine( μ, s )"],["base.random.cosine.factory","base.random.cosine.factory( [μ, s, ][options] )"],["base.random.cosine.NAME","base.random.cosine.NAME"],["base.random.cosine.PRNG","base.random.cosine.PRNG"],["base.random.cosine.seed","base.random.cosine.seed"],["base.random.cosine.seedLength","base.random.cosine.seedLength"],["base.random.cosine.state","base.random.cosine.state"],["base.random.cosine.stateLength","base.random.cosine.stateLength"],["base.random.cosine.byteLength","base.random.cosine.byteLength"],["base.random.cosine.toJSON","base.random.cosine.toJSON()"],["base.random.discreteUniform","base.random.discreteUniform( a, b )"],["base.random.discreteUniform.factory","base.random.discreteUniform.factory( [a, b, ][options] )"],["base.random.discreteUniform.NAME","base.random.discreteUniform.NAME"],["base.random.discreteUniform.PRNG","base.random.discreteUniform.PRNG"],["base.random.discreteUniform.seed","base.random.discreteUniform.seed"],["base.random.discreteUniform.seedLength","base.random.discreteUniform.seedLength"],["base.random.discreteUniform.state","base.random.discreteUniform.state"],["base.random.discreteUniform.stateLength","base.random.discreteUniform.stateLength"],["base.random.discreteUniform.byteLength","base.random.discreteUniform.byteLength"],["base.random.discreteUniform.toJSON","base.random.discreteUniform.toJSON()"],["base.random.erlang","base.random.erlang( k, λ )"],["base.random.erlang.factory","base.random.erlang.factory( [k, λ, ][options] )"],["base.random.erlang.NAME","base.random.erlang.NAME"],["base.random.erlang.PRNG","base.random.erlang.PRNG"],["base.random.erlang.seed","base.random.erlang.seed"],["base.random.erlang.seedLength","base.random.erlang.seedLength"],["base.random.erlang.state","base.random.erlang.state"],["base.random.erlang.stateLength","base.random.erlang.stateLength"],["base.random.erlang.byteLength","base.random.erlang.byteLength"],["base.random.erlang.toJSON","base.random.erlang.toJSON()"],["base.random.exponential","base.random.exponential( λ )"],["base.random.exponential.factory","base.random.exponential.factory( [λ, ][options] )"],["base.random.exponential.NAME","base.random.exponential.NAME"],["base.random.exponential.PRNG","base.random.exponential.PRNG"],["base.random.exponential.seed","base.random.exponential.seed"],["base.random.exponential.seedLength","base.random.exponential.seedLength"],["base.random.exponential.state","base.random.exponential.state"],["base.random.exponential.stateLength","base.random.exponential.stateLength"],["base.random.exponential.byteLength","base.random.exponential.byteLength"],["base.random.exponential.toJSON","base.random.exponential.toJSON()"],["base.random.f","base.random.f( d1, d2 )"],["base.random.f.factory","base.random.f.factory( [d1, d2, ][options] )"],["base.random.f.NAME","base.random.f.NAME"],["base.random.f.PRNG","base.random.f.PRNG"],["base.random.f.seed","base.random.f.seed"],["base.random.f.seedLength","base.random.f.seedLength"],["base.random.f.state","base.random.f.state"],["base.random.f.stateLength","base.random.f.stateLength"],["base.random.f.byteLength","base.random.f.byteLength"],["base.random.f.toJSON","base.random.f.toJSON()"],["base.random.frechet","base.random.frechet( α, s, m )"],["base.random.frechet.factory","base.random.frechet.factory( [α, s, m, ][options] )"],["base.random.frechet.NAME","base.random.frechet.NAME"],["base.random.frechet.PRNG","base.random.frechet.PRNG"],["base.random.frechet.seed","base.random.frechet.seed"],["base.random.frechet.seedLength","base.random.frechet.seedLength"],["base.random.frechet.state","base.random.frechet.state"],["base.random.frechet.stateLength","base.random.frechet.stateLength"],["base.random.frechet.byteLength","base.random.frechet.byteLength"],["base.random.frechet.toJSON","base.random.frechet.toJSON()"],["base.random.gamma","base.random.gamma( α, β )"],["base.random.gamma.factory","base.random.gamma.factory( [α, β, ][options] )"],["base.random.gamma.NAME","base.random.gamma.NAME"],["base.random.gamma.PRNG","base.random.gamma.PRNG"],["base.random.gamma.seed","base.random.gamma.seed"],["base.random.gamma.seedLength","base.random.gamma.seedLength"],["base.random.gamma.state","base.random.gamma.state"],["base.random.gamma.stateLength","base.random.gamma.stateLength"],["base.random.gamma.byteLength","base.random.gamma.byteLength"],["base.random.gamma.toJSON","base.random.gamma.toJSON()"],["base.random.geometric","base.random.geometric( p )"],["base.random.geometric.factory","base.random.geometric.factory( [p, ][options] )"],["base.random.geometric.NAME","base.random.geometric.NAME"],["base.random.geometric.PRNG","base.random.geometric.PRNG"],["base.random.geometric.seed","base.random.geometric.seed"],["base.random.geometric.seedLength","base.random.geometric.seedLength"],["base.random.geometric.state","base.random.geometric.state"],["base.random.geometric.stateLength","base.random.geometric.stateLength"],["base.random.geometric.byteLength","base.random.geometric.byteLength"],["base.random.geometric.toJSON","base.random.geometric.toJSON()"],["base.random.gumbel","base.random.gumbel( μ, β )"],["base.random.gumbel.factory","base.random.gumbel.factory( [μ, β, ][options] )"],["base.random.gumbel.NAME","base.random.gumbel.NAME"],["base.random.gumbel.PRNG","base.random.gumbel.PRNG"],["base.random.gumbel.seed","base.random.gumbel.seed"],["base.random.gumbel.seedLength","base.random.gumbel.seedLength"],["base.random.gumbel.state","base.random.gumbel.state"],["base.random.gumbel.stateLength","base.random.gumbel.stateLength"],["base.random.gumbel.byteLength","base.random.gumbel.byteLength"],["base.random.gumbel.toJSON","base.random.gumbel.toJSON()"],["base.random.hypergeometric","base.random.hypergeometric( N, K, n )"],["base.random.hypergeometric.factory","base.random.hypergeometric.factory( [N, K, n, ][options] )"],["base.random.hypergeometric.NAME","base.random.hypergeometric.NAME"],["base.random.hypergeometric.PRNG","base.random.hypergeometric.PRNG"],["base.random.hypergeometric.seed","base.random.hypergeometric.seed"],["base.random.hypergeometric.seedLength","base.random.hypergeometric.seedLength"],["base.random.hypergeometric.state","base.random.hypergeometric.state"],["base.random.hypergeometric.stateLength","base.random.hypergeometric.stateLength"],["base.random.hypergeometric.byteLength","base.random.hypergeometric.byteLength"],["base.random.hypergeometric.toJSON","base.random.hypergeometric.toJSON()"],["base.random.improvedZiggurat","base.random.improvedZiggurat()"],["base.random.improvedZiggurat.factory","base.random.improvedZiggurat.factory( [options] )"],["base.random.improvedZiggurat.NAME","base.random.improvedZiggurat.NAME"],["base.random.improvedZiggurat.PRNG","base.random.improvedZiggurat.PRNG"],["base.random.improvedZiggurat.seed","base.random.improvedZiggurat.seed"],["base.random.improvedZiggurat.seedLength","base.random.improvedZiggurat.seedLength"],["base.random.improvedZiggurat.state","base.random.improvedZiggurat.state"],["base.random.improvedZiggurat.stateLength","base.random.improvedZiggurat.stateLength"],["base.random.improvedZiggurat.byteLength","base.random.improvedZiggurat.byteLength"],["base.random.improvedZiggurat.toJSON","base.random.improvedZiggurat.toJSON()"],["base.random.invgamma","base.random.invgamma( α, β )"],["base.random.invgamma.factory","base.random.invgamma.factory( [α, β, ][options] )"],["base.random.invgamma.NAME","base.random.invgamma.NAME"],["base.random.invgamma.PRNG","base.random.invgamma.PRNG"],["base.random.invgamma.seed","base.random.invgamma.seed"],["base.random.invgamma.seedLength","base.random.invgamma.seedLength"],["base.random.invgamma.state","base.random.invgamma.state"],["base.random.invgamma.stateLength","base.random.invgamma.stateLength"],["base.random.invgamma.byteLength","base.random.invgamma.byteLength"],["base.random.invgamma.toJSON","base.random.invgamma.toJSON()"],["base.random.kumaraswamy","base.random.kumaraswamy( a, b )"],["base.random.kumaraswamy.factory","base.random.kumaraswamy.factory( [a, b, ][options] )"],["base.random.kumaraswamy.NAME","base.random.kumaraswamy.NAME"],["base.random.kumaraswamy.PRNG","base.random.kumaraswamy.PRNG"],["base.random.kumaraswamy.seed","base.random.kumaraswamy.seed"],["base.random.kumaraswamy.seedLength","base.random.kumaraswamy.seedLength"],["base.random.kumaraswamy.state","base.random.kumaraswamy.state"],["base.random.kumaraswamy.stateLength","base.random.kumaraswamy.stateLength"],["base.random.kumaraswamy.byteLength","base.random.kumaraswamy.byteLength"],["base.random.kumaraswamy.toJSON","base.random.kumaraswamy.toJSON()"],["base.random.laplace","base.random.laplace( μ, b )"],["base.random.laplace.factory","base.random.laplace.factory( [μ, b, ][options] )"],["base.random.laplace.NAME","base.random.laplace.NAME"],["base.random.laplace.PRNG","base.random.laplace.PRNG"],["base.random.laplace.seed","base.random.laplace.seed"],["base.random.laplace.seedLength","base.random.laplace.seedLength"],["base.random.laplace.state","base.random.laplace.state"],["base.random.laplace.stateLength","base.random.laplace.stateLength"],["base.random.laplace.byteLength","base.random.laplace.byteLength"],["base.random.laplace.toJSON","base.random.laplace.toJSON()"],["base.random.levy","base.random.levy( μ, c )"],["base.random.levy.factory","base.random.levy.factory( [μ, c, ][options] )"],["base.random.levy.NAME","base.random.levy.NAME"],["base.random.levy.PRNG","base.random.levy.PRNG"],["base.random.levy.seed","base.random.levy.seed"],["base.random.levy.seedLength","base.random.levy.seedLength"],["base.random.levy.state","base.random.levy.state"],["base.random.levy.stateLength","base.random.levy.stateLength"],["base.random.levy.byteLength","base.random.levy.byteLength"],["base.random.levy.toJSON","base.random.levy.toJSON()"],["base.random.logistic","base.random.logistic( μ, s )"],["base.random.logistic.factory","base.random.logistic.factory( [μ, s, ][options] )"],["base.random.logistic.NAME","base.random.logistic.NAME"],["base.random.logistic.PRNG","base.random.logistic.PRNG"],["base.random.logistic.seed","base.random.logistic.seed"],["base.random.logistic.seedLength","base.random.logistic.seedLength"],["base.random.logistic.state","base.random.logistic.state"],["base.random.logistic.stateLength","base.random.logistic.stateLength"],["base.random.logistic.byteLength","base.random.logistic.byteLength"],["base.random.logistic.toJSON","base.random.logistic.toJSON()"],["base.random.lognormal","base.random.lognormal( μ, σ )"],["base.random.lognormal.factory","base.random.lognormal.factory( [μ, σ, ][options] )"],["base.random.lognormal.NAME","base.random.lognormal.NAME"],["base.random.lognormal.PRNG","base.random.lognormal.PRNG"],["base.random.lognormal.seed","base.random.lognormal.seed"],["base.random.lognormal.seedLength","base.random.lognormal.seedLength"],["base.random.lognormal.state","base.random.lognormal.state"],["base.random.lognormal.stateLength","base.random.lognormal.stateLength"],["base.random.lognormal.byteLength","base.random.lognormal.byteLength"],["base.random.lognormal.toJSON","base.random.lognormal.toJSON()"],["base.random.minstd","base.random.minstd()"],["base.random.minstd.normalized","base.random.minstd.normalized()"],["base.random.minstd.factory","base.random.minstd.factory( [options] )"],["base.random.minstd.NAME","base.random.minstd.NAME"],["base.random.minstd.MIN","base.random.minstd.MIN"],["base.random.minstd.MAX","base.random.minstd.MAX"],["base.random.minstd.seed","base.random.minstd.seed"],["base.random.minstd.seedLength","base.random.minstd.seedLength"],["base.random.minstd.state","base.random.minstd.state"],["base.random.minstd.stateLength","base.random.minstd.stateLength"],["base.random.minstd.byteLength","base.random.minstd.byteLength"],["base.random.minstd.toJSON","base.random.minstd.toJSON()"],["base.random.minstdShuffle","base.random.minstdShuffle()"],["base.random.minstdShuffle.normalized","base.random.minstdShuffle.normalized()"],["base.random.minstdShuffle.factory","base.random.minstdShuffle.factory( [options] )"],["base.random.minstdShuffle.NAME","base.random.minstdShuffle.NAME"],["base.random.minstdShuffle.MIN","base.random.minstdShuffle.MIN"],["base.random.minstdShuffle.MAX","base.random.minstdShuffle.MAX"],["base.random.minstdShuffle.seed","base.random.minstdShuffle.seed"],["base.random.minstdShuffle.seedLength","base.random.minstdShuffle.seedLength"],["base.random.minstdShuffle.state","base.random.minstdShuffle.state"],["base.random.minstdShuffle.stateLength","base.random.minstdShuffle.stateLength"],["base.random.minstdShuffle.byteLength","base.random.minstdShuffle.byteLength"],["base.random.minstdShuffle.toJSON","base.random.minstdShuffle.toJSON()"],["base.random.mt19937","base.random.mt19937()"],["base.random.mt19937.normalized","base.random.mt19937.normalized()"],["base.random.mt19937.factory","base.random.mt19937.factory( [options] )"],["base.random.mt19937.NAME","base.random.mt19937.NAME"],["base.random.mt19937.MIN","base.random.mt19937.MIN"],["base.random.mt19937.MAX","base.random.mt19937.MAX"],["base.random.mt19937.seed","base.random.mt19937.seed"],["base.random.mt19937.seedLength","base.random.mt19937.seedLength"],["base.random.mt19937.state","base.random.mt19937.state"],["base.random.mt19937.stateLength","base.random.mt19937.stateLength"],["base.random.mt19937.byteLength","base.random.mt19937.byteLength"],["base.random.mt19937.toJSON","base.random.mt19937.toJSON()"],["base.random.negativeBinomial","base.random.negativeBinomial( r, p )"],["base.random.negativeBinomial.factory","base.random.negativeBinomial.factory( [r, p, ][options] )"],["base.random.negativeBinomial.NAME","base.random.negativeBinomial.NAME"],["base.random.negativeBinomial.PRNG","base.random.negativeBinomial.PRNG"],["base.random.negativeBinomial.seed","base.random.negativeBinomial.seed"],["base.random.negativeBinomial.seedLength","base.random.negativeBinomial.seedLength"],["base.random.negativeBinomial.state","base.random.negativeBinomial.state"],["base.random.negativeBinomial.stateLength","base.random.negativeBinomial.stateLength"],["base.random.negativeBinomial.byteLength","base.random.negativeBinomial.byteLength"],["base.random.negativeBinomial.toJSON","base.random.negativeBinomial.toJSON()"],["base.random.normal","base.random.normal( μ, σ )"],["base.random.normal.factory","base.random.normal.factory( [μ, σ, ][options] )"],["base.random.normal.NAME","base.random.normal.NAME"],["base.random.normal.PRNG","base.random.normal.PRNG"],["base.random.normal.seed","base.random.normal.seed"],["base.random.normal.seedLength","base.random.normal.seedLength"],["base.random.normal.state","base.random.normal.state"],["base.random.normal.stateLength","base.random.normal.stateLength"],["base.random.normal.byteLength","base.random.normal.byteLength"],["base.random.normal.toJSON","base.random.normal.toJSON()"],["base.random.pareto1","base.random.pareto1( α, β )"],["base.random.pareto1.factory","base.random.pareto1.factory( [α, β, ][options] )"],["base.random.pareto1.NAME","base.random.pareto1.NAME"],["base.random.pareto1.PRNG","base.random.pareto1.PRNG"],["base.random.pareto1.seed","base.random.pareto1.seed"],["base.random.pareto1.seedLength","base.random.pareto1.seedLength"],["base.random.pareto1.state","base.random.pareto1.state"],["base.random.pareto1.stateLength","base.random.pareto1.stateLength"],["base.random.pareto1.byteLength","base.random.pareto1.byteLength"],["base.random.pareto1.toJSON","base.random.pareto1.toJSON()"],["base.random.poisson","base.random.poisson( λ )"],["base.random.poisson.factory","base.random.poisson.factory( [λ, ][options] )"],["base.random.poisson.NAME","base.random.poisson.NAME"],["base.random.poisson.PRNG","base.random.poisson.PRNG"],["base.random.poisson.seed","base.random.poisson.seed"],["base.random.poisson.seedLength","base.random.poisson.seedLength"],["base.random.poisson.state","base.random.poisson.state"],["base.random.poisson.stateLength","base.random.poisson.stateLength"],["base.random.poisson.byteLength","base.random.poisson.byteLength"],["base.random.poisson.toJSON","base.random.poisson.toJSON()"],["base.random.randi","base.random.randi()"],["base.random.randi.factory","base.random.randi.factory( [options] )"],["base.random.randi.NAME","base.random.randi.NAME"],["base.random.randi.PRNG","base.random.randi.PRNG"],["base.random.randi.MIN","base.random.randi.MIN"],["base.random.randi.MAX","base.random.randi.MAX"],["base.random.randi.seed","base.random.randi.seed"],["base.random.randi.seedLength","base.random.randi.seedLength"],["base.random.randi.state","base.random.randi.state"],["base.random.randi.stateLength","base.random.randi.stateLength"],["base.random.randi.byteLength","base.random.randi.byteLength"],["base.random.randi.toJSON","base.random.randi.toJSON()"],["base.random.randn","base.random.randn()"],["base.random.randn.factory","base.random.randn.factory( [options] )"],["base.random.randn.NAME","base.random.randn.NAME"],["base.random.randn.PRNG","base.random.randn.PRNG"],["base.random.randn.seed","base.random.randn.seed"],["base.random.randn.seedLength","base.random.randn.seedLength"],["base.random.randn.state","base.random.randn.state"],["base.random.randn.stateLength","base.random.randn.stateLength"],["base.random.randn.byteLength","base.random.randn.byteLength"],["base.random.randn.toJSON","base.random.randn.toJSON()"],["base.random.randu","base.random.randu()"],["base.random.randu.factory","base.random.randu.factory( [options] )"],["base.random.randu.NAME","base.random.randu.NAME"],["base.random.randu.PRNG","base.random.randu.PRNG"],["base.random.randu.MIN","base.random.randu.MIN"],["base.random.randu.MAX","base.random.randu.MAX"],["base.random.randu.seed","base.random.randu.seed"],["base.random.randu.seedLength","base.random.randu.seedLength"],["base.random.randu.state","base.random.randu.state"],["base.random.randu.stateLength","base.random.randu.stateLength"],["base.random.randu.byteLength","base.random.randu.byteLength"],["base.random.randu.toJSON","base.random.randu.toJSON()"],["base.random.rayleigh","base.random.rayleigh( σ )"],["base.random.rayleigh.factory","base.random.rayleigh.factory( [σ, ][options] )"],["base.random.rayleigh.NAME","base.random.rayleigh.NAME"],["base.random.rayleigh.PRNG","base.random.rayleigh.PRNG"],["base.random.rayleigh.seed","base.random.rayleigh.seed"],["base.random.rayleigh.seedLength","base.random.rayleigh.seedLength"],["base.random.rayleigh.state","base.random.rayleigh.state"],["base.random.rayleigh.stateLength","base.random.rayleigh.stateLength"],["base.random.rayleigh.byteLength","base.random.rayleigh.byteLength"],["base.random.rayleigh.toJSON","base.random.rayleigh.toJSON()"],["base.random.t","base.random.t( v )"],["base.random.t.factory","base.random.t.factory( [v, ][options] )"],["base.random.t.NAME","base.random.t.NAME"],["base.random.t.PRNG","base.random.t.PRNG"],["base.random.t.seed","base.random.t.seed"],["base.random.t.seedLength","base.random.t.seedLength"],["base.random.t.state","base.random.t.state"],["base.random.t.stateLength","base.random.t.stateLength"],["base.random.t.byteLength","base.random.t.byteLength"],["base.random.t.toJSON","base.random.t.toJSON()"],["base.random.triangular","base.random.triangular( a, b, c )"],["base.random.triangular.factory","base.random.triangular.factory( [a, b, c, ][options] )"],["base.random.triangular.NAME","base.random.triangular.NAME"],["base.random.triangular.PRNG","base.random.triangular.PRNG"],["base.random.triangular.seed","base.random.triangular.seed"],["base.random.triangular.seedLength","base.random.triangular.seedLength"],["base.random.triangular.state","base.random.triangular.state"],["base.random.triangular.stateLength","base.random.triangular.stateLength"],["base.random.triangular.byteLength","base.random.triangular.byteLength"],["base.random.triangular.toJSON","base.random.triangular.toJSON()"],["base.random.uniform","base.random.uniform( a, b )"],["base.random.uniform.factory","base.random.uniform.factory( [a, b, ][options] )"],["base.random.uniform.NAME","base.random.uniform.NAME"],["base.random.uniform.PRNG","base.random.uniform.PRNG"],["base.random.uniform.seed","base.random.uniform.seed"],["base.random.uniform.seedLength","base.random.uniform.seedLength"],["base.random.uniform.state","base.random.uniform.state"],["base.random.uniform.stateLength","base.random.uniform.stateLength"],["base.random.uniform.byteLength","base.random.uniform.byteLength"],["base.random.uniform.toJSON","base.random.uniform.toJSON()"],["base.random.weibull","base.random.weibull( k, λ )"],["base.random.weibull.factory","base.random.weibull.factory( [k, λ, ][options] )"],["base.random.weibull.NAME","base.random.weibull.NAME"],["base.random.weibull.PRNG","base.random.weibull.PRNG"],["base.random.weibull.seed","base.random.weibull.seed"],["base.random.weibull.seedLength","base.random.weibull.seedLength"],["base.random.weibull.state","base.random.weibull.state"],["base.random.weibull.stateLength","base.random.weibull.stateLength"],["base.random.weibull.byteLength","base.random.weibull.byteLength"],["base.random.weibull.toJSON","base.random.weibull.toJSON()"],["base.reldiff","base.reldiff( x, y[, scale] )"],["base.rempio2","base.rempio2( x, y )"],["base.risingFactorial","base.risingFactorial( x, n )"],["base.rotl32","base.rotl32( x, shift )"],["base.rotr32","base.rotr32( x, shift )"],["base.round","base.round( x )"],["base.round2","base.round2( x )"],["base.round10","base.round10( x )"],["base.roundb","base.roundb( x, n, b )"],["base.roundn","base.roundn( x, n )"],["base.roundsd","base.roundsd( x, n[, b] )"],["base.rsqrt","base.rsqrt( x )"],["base.sasum","base.sasum( N, x, stride )"],["base.sasum.ndarray","base.sasum.ndarray( N, x, stride, offset )"],["base.saxpy","base.saxpy( N, alpha, x, strideX, y, strideY )"],["base.saxpy.ndarray","base.saxpy.ndarray( N, alpha, x, strideX, offsetX, y, strideY, offsetY )"],["base.scopy","base.scopy( N, x, strideX, y, strideY )"],["base.scopy.ndarray","base.scopy.ndarray( N, x, strideX, offsetX, y, strideY, offsetY )"],["base.sdot","base.sdot( N, x, strideX, y, strideY )"],["base.sdot.ndarray","base.sdot.ndarray( N, x, strideX, offsetX, y, strideY, offsetY )"],["base.setHighWord","base.setHighWord( x, high )"],["base.setLowWord","base.setLowWord( x, low )"],["base.sici","base.sici( [out,] x )"],["base.signbit","base.signbit( x )"],["base.signbitf","base.signbitf( x )"],["base.significandf","base.significandf( x )"],["base.signum","base.signum( x )"],["base.sin","base.sin( x )"],["base.sinc","base.sinc( x )"],["base.sincos","base.sincos( [out,] x )"],["base.sincospi","base.sincospi( [out,] x )"],["base.sinh","base.sinh( x )"],["base.sinpi","base.sinpi( x )"],["base.spence","base.spence( x )"],["base.sqrt","base.sqrt( x )"],["base.sqrt1pm1","base.sqrt1pm1( x )"],["base.sumSeries","base.sumSeries( generator[, options] )"],["base.tan","base.tan( x )"],["base.tanh","base.tanh( x )"],["base.toBinaryString","base.toBinaryString( x )"],["base.toBinaryStringf","base.toBinaryStringf( x )"],["base.toBinaryStringUint8","base.toBinaryStringUint8( x )"],["base.toBinaryStringUint16","base.toBinaryStringUint16( x )"],["base.toBinaryStringUint32","base.toBinaryStringUint32( x )"],["base.toWordf","base.toWordf( x )"],["base.toWords","base.toWords( [out,] x )"],["base.trigamma","base.trigamma( x )"],["base.trunc","base.trunc( x )"],["base.trunc2","base.trunc2( x )"],["base.trunc10","base.trunc10( x )"],["base.truncb","base.truncb( x, n, b )"],["base.truncn","base.truncn( x, n )"],["base.truncsd","base.truncsd( x, n[, b] )"],["base.uimul","base.uimul( a, b )"],["base.uimuldw","base.uimuldw( [out,] a, b )"],["base.uint32ToInt32","base.uint32ToInt32( x )"],["base.vercos","base.vercos( x )"],["base.versin","base.versin( x )"],["base.wrap","base.wrap( v, min, max )"],["base.xlog1py","base.xlog1py( x, y )"],["base.xlogy","base.xlogy( x, y )"],["base.zeta","base.zeta( s )"],["BERNDT_CPS_WAGES_1985","BERNDT_CPS_WAGES_1985()"],["bifurcate","bifurcate( collection, [options,] filter )"],["bifurcateBy","bifurcateBy( collection, [options,] predicate )"],["bifurcateByAsync","bifurcateByAsync( collection, [options,] predicate, done )"],["bifurcateByAsync.factory","bifurcateByAsync.factory( [options,] predicate )"],["bifurcateIn","bifurcateIn( obj, [options,] predicate )"],["bifurcateOwn","bifurcateOwn( obj, [options,] predicate )"],["binomialTest","binomialTest( x[, n][, options] )"],["Buffer","Buffer"],["Buffer","Buffer( size )"],["Buffer","Buffer( buffer )"],["Buffer","Buffer( array )"],["Buffer","Buffer( str[, encoding] )"],["buffer2json","buffer2json( buffer )"],["capitalize","capitalize( str )"],["capitalizeKeys","capitalizeKeys( obj )"],["CATALAN","CATALAN"],["CBRT_EPS","CBRT_EPS"],["chdir","chdir( path )"],["chi2gof","chi2gof( x, y[, ...args][, options] )"],["circarray2iterator","circarray2iterator( src[, options][, mapFcn[, thisArg]] )"],["circularArrayStream","circularArrayStream( src[, options] )"],["circularArrayStream.factory","circularArrayStream.factory( [options] )"],["circularArrayStream.objectMode","circularArrayStream.objectMode( src[, options] )"],["CircularBuffer","CircularBuffer( buffer )"],["CMUDICT","CMUDICT( [options] )"],["complex","complex( real, imag[, dtype] )"],["Complex64","Complex64( real, imag )"],["COMPLEX64_NUM_BYTES","COMPLEX64_NUM_BYTES"],["Complex128","Complex128( real, imag )"],["COMPLEX128_NUM_BYTES","COMPLEX128_NUM_BYTES"],["compose","compose( ...f )"],["composeAsync","composeAsync( ...f )"],["configdir","configdir( [p] )"],["conj","conj( z )"],["constantFunction","constantFunction( val )"],["constantStream","constantStream( value[, options] )"],["constantStream.factory","constantStream.factory( [value, ][options] )"],["constantStream.objectMode","constantStream.objectMode( value[, options] )"],["constructorName","constructorName( val )"],["contains","contains( val, searchValue[, position] )"],["convertArray","convertArray( arr, dtype )"],["convertArraySame","convertArraySame( x, y )"],["convertPath","convertPath( from, to )"],["copy","copy( value[, level] )"],["copyBuffer","copyBuffer( buffer )"],["countBy","countBy( collection, [options,] indicator )"],["countByAsync","countByAsync( collection, [options,] indicator, done )"],["countByAsync.factory","countByAsync.factory( [options,] indicator )"],["curry","curry( fcn[, arity][, thisArg] )"],["curryRight","curryRight( fcn[, arity][, thisArg] )"],["cwd","cwd()"],["DALE_CHALL_NEW","DALE_CHALL_NEW()"],["datasets","datasets( name[, options] )"],["dayOfQuarter","dayOfQuarter( [month[, day, year]] )"],["dayOfYear","dayOfYear( [month[, day, year]] )"],["daysInMonth","daysInMonth( [month[, year]] )"],["daysInYear","daysInYear( [value] )"],["debugSinkStream","debugSinkStream( [options,] [clbk] )"],["debugSinkStream.factory","debugSinkStream.factory( [options] )"],["debugSinkStream.objectMode","debugSinkStream.objectMode( [options,] [clbk] )"],["debugStream","debugStream( [options,] [clbk] )"],["debugStream.factory","debugStream.factory( [options] )"],["debugStream.objectMode","debugStream.objectMode( [options,] [clbk] )"],["deepEqual","deepEqual( a, b )"],["deepGet","deepGet( obj, path[, options] )"],["deepGet.factory","deepGet.factory( path[, options] )"],["deepHasOwnProp","deepHasOwnProp( value, path[, options] )"],["deepHasOwnProp.factory","deepHasOwnProp.factory( path[, options] )"],["deepHasProp","deepHasProp( value, path[, options] )"],["deepHasProp.factory","deepHasProp.factory( path[, options] )"],["deepPluck","deepPluck( arr, path[, options] )"],["deepSet","deepSet( obj, path, value[, options] )"],["deepSet.factory","deepSet.factory( path[, options] )"],["defineMemoizedProperty","defineMemoizedProperty( obj, prop, descriptor )"],["defineProperties","defineProperties( obj, properties )"],["defineProperty","defineProperty( obj, prop, descriptor )"],["dirname","dirname( path )"],["DoublyLinkedList","DoublyLinkedList()"],["doUntil","doUntil( fcn, predicate[, thisArg] )"],["doUntilAsync","doUntilAsync( fcn, predicate, done[, thisArg] )"],["doUntilEach","doUntilEach( collection, fcn, predicate[, thisArg] )"],["doUntilEachRight","doUntilEachRight( collection, fcn, predicate[, thisArg] )"],["doWhile","doWhile( fcn, predicate[, thisArg] )"],["doWhileAsync","doWhileAsync( fcn, predicate, done[, thisArg] )"],["doWhileEach","doWhileEach( collection, fcn, predicate[, thisArg] )"],["doWhileEachRight","doWhileEachRight( collection, fcn, predicate[, thisArg] )"],["E","E"],["EMOJI","EMOJI()"],["EMOJI_CODE_PICTO","EMOJI_CODE_PICTO()"],["EMOJI_PICTO_CODE","EMOJI_PICTO_CODE()"],["emptyStream","emptyStream( [options] )"],["emptyStream.factory","emptyStream.factory( [options] )"],["emptyStream.objectMode","emptyStream.objectMode()"],["endsWith","endsWith( str, search[, len] )"],["enumerableProperties","enumerableProperties( value )"],["enumerablePropertiesIn","enumerablePropertiesIn( value )"],["enumerablePropertySymbols","enumerablePropertySymbols( value )"],["enumerablePropertySymbolsIn","enumerablePropertySymbolsIn( value )"],["ENV","ENV"],["EPS","EPS"],["error2json","error2json( error )"],["EULERGAMMA","EULERGAMMA"],["every","every( collection )"],["everyBy","everyBy( collection, predicate[, thisArg ] )"],["everyByAsync","everyByAsync( collection, [options,] predicate, done )"],["everyByAsync.factory","everyByAsync.factory( [options,] predicate )"],["everyByRight","everyByRight( collection, predicate[, thisArg ] )"],["everyByRightAsync","everyByRightAsync( collection, [options,] predicate, done )"],["everyByRightAsync.factory","everyByRightAsync.factory( [options,] predicate )"],["evil","evil( str )"],["exists","exists( path, clbk )"],["exists.sync","exists.sync( path )"],["expandContractions","expandContractions( str )"],["extname","extname( filename )"],["fastmath.abs","fastmath.abs( x )"],["fastmath.acosh","fastmath.acosh( x )"],["fastmath.ampbm","fastmath.ampbm( x, y )"],["fastmath.ampbm.factory","fastmath.ampbm.factory( alpha, beta, [nonnegative[, ints]] )"],["fastmath.asinh","fastmath.asinh( x )"],["fastmath.atanh","fastmath.atanh( x )"],["fastmath.hypot","fastmath.hypot( x, y )"],["fastmath.log2Uint32","fastmath.log2Uint32( x )"],["fastmath.max","fastmath.max( x, y )"],["fastmath.min","fastmath.min( x, y )"],["fastmath.powint","fastmath.powint( x, y )"],["fastmath.sqrtUint32","fastmath.sqrtUint32( x )"],["FEMALE_FIRST_NAMES_EN","FEMALE_FIRST_NAMES_EN()"],["FIFO","FIFO()"],["find","find( arr, [options,] clbk )"],["flattenArray","flattenArray( arr[, options] )"],["flattenArray.factory","flattenArray.factory( dims[, options] )"],["flattenObject","flattenObject( obj[, options] )"],["flattenObject.factory","flattenObject.factory( [options] )"],["flignerTest","flignerTest( ...x[, options] )"],["FLOAT16_CBRT_EPS","FLOAT16_CBRT_EPS"],["FLOAT16_EPS","FLOAT16_EPS"],["FLOAT16_EXPONENT_BIAS","FLOAT16_EXPONENT_BIAS"],["FLOAT16_MAX","FLOAT16_MAX"],["FLOAT16_MAX_SAFE_INTEGER","FLOAT16_MAX_SAFE_INTEGER"],["FLOAT16_MIN_SAFE_INTEGER","FLOAT16_MIN_SAFE_INTEGER"],["FLOAT16_NINF","FLOAT16_NINF"],["FLOAT16_NUM_BYTES","FLOAT16_NUM_BYTES"],["FLOAT16_PINF","FLOAT16_PINF"],["FLOAT16_PRECISION","FLOAT16_PRECISION"],["FLOAT16_SMALLEST_NORMAL","FLOAT16_SMALLEST_NORMAL"],["FLOAT16_SMALLEST_SUBNORMAL","FLOAT16_SMALLEST_SUBNORMAL"],["FLOAT16_SQRT_EPS","FLOAT16_SQRT_EPS"],["FLOAT32_CBRT_EPS","FLOAT32_CBRT_EPS"],["FLOAT32_EPS","FLOAT32_EPS"],["FLOAT32_EXPONENT_BIAS","FLOAT32_EXPONENT_BIAS"],["FLOAT32_MAX","FLOAT32_MAX"],["FLOAT32_MAX_SAFE_INTEGER","FLOAT32_MAX_SAFE_INTEGER"],["FLOAT32_MIN_SAFE_INTEGER","FLOAT32_MIN_SAFE_INTEGER"],["FLOAT32_NINF","FLOAT32_NINF"],["FLOAT32_NUM_BYTES","FLOAT32_NUM_BYTES"],["FLOAT32_PINF","FLOAT32_PINF"],["FLOAT32_PRECISION","FLOAT32_PRECISION"],["FLOAT32_SMALLEST_NORMAL","FLOAT32_SMALLEST_NORMAL"],["FLOAT32_SMALLEST_SUBNORMAL","FLOAT32_SMALLEST_SUBNORMAL"],["FLOAT32_SQRT_EPS","FLOAT32_SQRT_EPS"],["Float32Array","Float32Array()"],["Float32Array","Float32Array( length )"],["Float32Array","Float32Array( typedarray )"],["Float32Array","Float32Array( obj )"],["Float32Array","Float32Array( buffer[, byteOffset[, length]] )"],["Float32Array.from","Float32Array.from( src[, map[, thisArg]] )"],["Float32Array.of","Float32Array.of( element0[, element1[, ...elementN]] )"],["Float32Array.BYTES_PER_ELEMENT","Float32Array.BYTES_PER_ELEMENT"],["Float32Array.name","Float32Array.name"],["Float32Array.prototype.buffer","Float32Array.prototype.buffer"],["Float32Array.prototype.byteLength","Float32Array.prototype.byteLength"],["Float32Array.prototype.byteOffset","Float32Array.prototype.byteOffset"],["Float32Array.prototype.BYTES_PER_ELEMENT","Float32Array.prototype.BYTES_PER_ELEMENT"],["Float32Array.prototype.length","Float32Array.prototype.length"],["Float32Array.prototype.copyWithin","Float32Array.prototype.copyWithin( target, start[, end] )"],["Float32Array.prototype.entries","Float32Array.prototype.entries()"],["Float32Array.prototype.every","Float32Array.prototype.every( predicate[, thisArg] )"],["Float32Array.prototype.fill","Float32Array.prototype.fill( value[, start[, end]] )"],["Float32Array.prototype.filter","Float32Array.prototype.filter( predicate[, thisArg] )"],["Float32Array.prototype.find","Float32Array.prototype.find( predicate[, thisArg] )"],["Float32Array.prototype.findIndex","Float32Array.prototype.findIndex( predicate[, thisArg] )"],["Float32Array.prototype.forEach","Float32Array.prototype.forEach( fcn[, thisArg] )"],["Float32Array.prototype.includes","Float32Array.prototype.includes( searchElement[, fromIndex] )"],["Float32Array.prototype.indexOf","Float32Array.prototype.indexOf( searchElement[, fromIndex] )"],["Float32Array.prototype.join","Float32Array.prototype.join( [separator] )"],["Float32Array.prototype.keys","Float32Array.prototype.keys()"],["Float32Array.prototype.lastIndexOf","Float32Array.prototype.lastIndexOf( searchElement[, fromIndex] )"],["Float32Array.prototype.map","Float32Array.prototype.map( fcn[, thisArg] )"],["Float32Array.prototype.reduce","Float32Array.prototype.reduce( fcn[, initialValue] )"],["Float32Array.prototype.reduceRight","Float32Array.prototype.reduceRight( fcn[, initialValue] )"],["Float32Array.prototype.reverse","Float32Array.prototype.reverse()"],["Float32Array.prototype.set","Float32Array.prototype.set( arr[, offset] )"],["Float32Array.prototype.slice","Float32Array.prototype.slice( [begin[, end]] )"],["Float32Array.prototype.some","Float32Array.prototype.some( predicate[, thisArg] )"],["Float32Array.prototype.sort","Float32Array.prototype.sort( [compareFunction] )"],["Float32Array.prototype.subarray","Float32Array.prototype.subarray( [begin[, end]] )"],["Float32Array.prototype.toLocaleString","Float32Array.prototype.toLocaleString( [locales[, options]] )"],["Float32Array.prototype.toString","Float32Array.prototype.toString()"],["Float32Array.prototype.values","Float32Array.prototype.values()"],["FLOAT64_EXPONENT_BIAS","FLOAT64_EXPONENT_BIAS"],["FLOAT64_HIGH_WORD_EXPONENT_MASK","FLOAT64_HIGH_WORD_EXPONENT_MASK"],["FLOAT64_HIGH_WORD_SIGNIFICAND_MASK","FLOAT64_HIGH_WORD_SIGNIFICAND_MASK"],["FLOAT64_MAX","FLOAT64_MAX"],["FLOAT64_MAX_BASE2_EXPONENT","FLOAT64_MAX_BASE2_EXPONENT"],["FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL","FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL"],["FLOAT64_MAX_BASE10_EXPONENT","FLOAT64_MAX_BASE10_EXPONENT"],["FLOAT64_MAX_BASE10_EXPONENT_SUBNORMAL","FLOAT64_MAX_BASE10_EXPONENT_SUBNORMAL"],["FLOAT64_MAX_LN","FLOAT64_MAX_LN"],["FLOAT64_MAX_SAFE_FIBONACCI","FLOAT64_MAX_SAFE_FIBONACCI"],["FLOAT64_MAX_SAFE_INTEGER","FLOAT64_MAX_SAFE_INTEGER"],["FLOAT64_MAX_SAFE_LUCAS","FLOAT64_MAX_SAFE_LUCAS"],["FLOAT64_MAX_SAFE_NTH_FIBONACCI","FLOAT64_MAX_SAFE_NTH_FIBONACCI"],["FLOAT64_MAX_SAFE_NTH_LUCAS","FLOAT64_MAX_SAFE_NTH_LUCAS"],["FLOAT64_MIN_BASE2_EXPONENT","FLOAT64_MIN_BASE2_EXPONENT"],["FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL","FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL"],["FLOAT64_MIN_BASE10_EXPONENT","FLOAT64_MIN_BASE10_EXPONENT"],["FLOAT64_MIN_BASE10_EXPONENT_SUBNORMAL","FLOAT64_MIN_BASE10_EXPONENT_SUBNORMAL"],["FLOAT64_MIN_LN","FLOAT64_MIN_LN"],["FLOAT64_MIN_SAFE_INTEGER","FLOAT64_MIN_SAFE_INTEGER"],["FLOAT64_NUM_BYTES","FLOAT64_NUM_BYTES"],["FLOAT64_PRECISION","FLOAT64_PRECISION"],["FLOAT64_SMALLEST_NORMAL","FLOAT64_SMALLEST_NORMAL"],["FLOAT64_SMALLEST_SUBNORMAL","FLOAT64_SMALLEST_SUBNORMAL"],["Float64Array","Float64Array()"],["Float64Array","Float64Array( length )"],["Float64Array","Float64Array( typedarray )"],["Float64Array","Float64Array( obj )"],["Float64Array","Float64Array( buffer[, byteOffset[, length]] )"],["Float64Array.from","Float64Array.from( src[, map[, thisArg]] )"],["Float64Array.of","Float64Array.of( element0[, element1[, ...elementN]] )"],["Float64Array.BYTES_PER_ELEMENT","Float64Array.BYTES_PER_ELEMENT"],["Float64Array.name","Float64Array.name"],["Float64Array.prototype.buffer","Float64Array.prototype.buffer"],["Float64Array.prototype.byteLength","Float64Array.prototype.byteLength"],["Float64Array.prototype.byteOffset","Float64Array.prototype.byteOffset"],["Float64Array.prototype.BYTES_PER_ELEMENT","Float64Array.prototype.BYTES_PER_ELEMENT"],["Float64Array.prototype.length","Float64Array.prototype.length"],["Float64Array.prototype.copyWithin","Float64Array.prototype.copyWithin( target, start[, end] )"],["Float64Array.prototype.entries","Float64Array.prototype.entries()"],["Float64Array.prototype.every","Float64Array.prototype.every( predicate[, thisArg] )"],["Float64Array.prototype.fill","Float64Array.prototype.fill( value[, start[, end]] )"],["Float64Array.prototype.filter","Float64Array.prototype.filter( predicate[, thisArg] )"],["Float64Array.prototype.find","Float64Array.prototype.find( predicate[, thisArg] )"],["Float64Array.prototype.findIndex","Float64Array.prototype.findIndex( predicate[, thisArg] )"],["Float64Array.prototype.forEach","Float64Array.prototype.forEach( fcn[, thisArg] )"],["Float64Array.prototype.includes","Float64Array.prototype.includes( searchElement[, fromIndex] )"],["Float64Array.prototype.indexOf","Float64Array.prototype.indexOf( searchElement[, fromIndex] )"],["Float64Array.prototype.join","Float64Array.prototype.join( [separator] )"],["Float64Array.prototype.keys","Float64Array.prototype.keys()"],["Float64Array.prototype.lastIndexOf","Float64Array.prototype.lastIndexOf( searchElement[, fromIndex] )"],["Float64Array.prototype.map","Float64Array.prototype.map( fcn[, thisArg] )"],["Float64Array.prototype.reduce","Float64Array.prototype.reduce( fcn[, initialValue] )"],["Float64Array.prototype.reduceRight","Float64Array.prototype.reduceRight( fcn[, initialValue] )"],["Float64Array.prototype.reverse","Float64Array.prototype.reverse()"],["Float64Array.prototype.set","Float64Array.prototype.set( arr[, offset] )"],["Float64Array.prototype.slice","Float64Array.prototype.slice( [begin[, end]] )"],["Float64Array.prototype.some","Float64Array.prototype.some( predicate[, thisArg] )"],["Float64Array.prototype.sort","Float64Array.prototype.sort( [compareFunction] )"],["Float64Array.prototype.subarray","Float64Array.prototype.subarray( [begin[, end]] )"],["Float64Array.prototype.toLocaleString","Float64Array.prototype.toLocaleString( [locales[, options]] )"],["Float64Array.prototype.toString","Float64Array.prototype.toString()"],["Float64Array.prototype.values","Float64Array.prototype.values()"],["forEach","forEach( collection, fcn[, thisArg] )"],["forEachAsync","forEachAsync( collection, [options,] fcn, done )"],["forEachAsync.factory","forEachAsync.factory( [options,] fcn )"],["forEachRight","forEachRight( collection, fcn[, thisArg] )"],["forEachRightAsync","forEachRightAsync( collection, [options,] fcn, done )"],["forEachRightAsync.factory","forEachRightAsync.factory( [options,] fcn )"],["forIn","forIn( obj, fcn[, thisArg] )"],["forOwn","forOwn( obj, fcn[, thisArg] )"],["FOURTH_PI","FOURTH_PI"],["FOURTH_ROOT_EPS","FOURTH_ROOT_EPS"],["FRB_SF_WAGE_RIGIDITY","FRB_SF_WAGE_RIGIDITY()"],["fromCodePoint","fromCodePoint( ...pt )"],["functionName","functionName( fcn )"],["functionSequence","functionSequence( ...fcn )"],["functionSequenceAsync","functionSequenceAsync( ...fcn )"],["GAMMA_LANCZOS_G","GAMMA_LANCZOS_G"],["getegid","getegid()"],["geteuid","geteuid()"],["getgid","getgid()"],["getGlobal","getGlobal( [codegen] )"],["getPrototypeOf","getPrototypeOf( value )"],["getuid","getuid()"],["GLAISHER","GLAISHER"],["group","group( collection, [options,] groups )"],["groupBy","groupBy( collection, [options,] indicator )"],["groupByAsync","groupByAsync( collection, [options,] indicator, done )"],["groupByAsync.factory","groupByAsync.factory( [options,] indicator )"],["groupIn","groupIn( obj, [options,] indicator )"],["groupOwn","groupOwn( obj, [options,] indicator )"],["HALF_LN2","HALF_LN2"],["HALF_PI","HALF_PI"],["HARRISON_BOSTON_HOUSE_PRICES","HARRISON_BOSTON_HOUSE_PRICES()"],["HARRISON_BOSTON_HOUSE_PRICES_CORRECTED","HARRISON_BOSTON_HOUSE_PRICES_CORRECTED()"],["hasArrayBufferSupport","hasArrayBufferSupport()"],["hasAsyncAwaitSupport","hasAsyncAwaitSupport()"],["hasAsyncIteratorSymbolSupport","hasAsyncIteratorSymbolSupport()"],["hasClassSupport","hasClassSupport()"],["hasDefinePropertiesSupport","hasDefinePropertiesSupport()"],["hasDefinePropertySupport","hasDefinePropertySupport()"],["hasFloat32ArraySupport","hasFloat32ArraySupport()"],["hasFloat64ArraySupport","hasFloat64ArraySupport()"],["hasFunctionNameSupport","hasFunctionNameSupport()"],["hasGeneratorSupport","hasGeneratorSupport()"],["hasGlobalThisSupport","hasGlobalThisSupport()"],["hasInt8ArraySupport","hasInt8ArraySupport()"],["hasInt16ArraySupport","hasInt16ArraySupport()"],["hasInt32ArraySupport","hasInt32ArraySupport()"],["hasIteratorSymbolSupport","hasIteratorSymbolSupport()"],["hasMapSupport","hasMapSupport()"],["hasNodeBufferSupport","hasNodeBufferSupport()"],["hasOwnProp","hasOwnProp( value, property )"],["hasProp","hasProp( value, property )"],["hasProxySupport","hasProxySupport()"],["hasSetSupport","hasSetSupport()"],["hasSharedArrayBufferSupport","hasSharedArrayBufferSupport()"],["hasSymbolSupport","hasSymbolSupport()"],["hasToStringTagSupport","hasToStringTagSupport()"],["hasUint8ArraySupport","hasUint8ArraySupport()"],["hasUint8ClampedArraySupport","hasUint8ClampedArraySupport()"],["hasUint16ArraySupport","hasUint16ArraySupport()"],["hasUint32ArraySupport","hasUint32ArraySupport()"],["hasWeakMapSupport","hasWeakMapSupport()"],["hasWeakSetSupport","hasWeakSetSupport()"],["hasWebAssemblySupport","hasWebAssemblySupport()"],["HERNDON_VENUS_SEMIDIAMETERS","HERNDON_VENUS_SEMIDIAMETERS()"],["homedir","homedir()"],["HOURS_IN_DAY","HOURS_IN_DAY"],["HOURS_IN_WEEK","HOURS_IN_WEEK"],["hoursInMonth","hoursInMonth( [month[, year]] )"],["hoursInYear","hoursInYear( [value] )"],["httpServer","httpServer( [options,] [requestListener] )"],["identity","identity( x )"],["ifelse","ifelse( bool, x, y )"],["ifelseAsync","ifelseAsync( predicate, x, y, done )"],["ifthen","ifthen( bool, x, y )"],["ifthenAsync","ifthenAsync( predicate, x, y, done )"],["imag","imag( z )"],["IMG_ACANTHUS_MOLLIS","IMG_ACANTHUS_MOLLIS()"],["IMG_AIRPLANE_FROM_ABOVE","IMG_AIRPLANE_FROM_ABOVE()"],["IMG_ALLIUM_OREOPHILUM","IMG_ALLIUM_OREOPHILUM()"],["IMG_BLACK_CANYON","IMG_BLACK_CANYON()"],["IMG_DUST_BOWL_HOME","IMG_DUST_BOWL_HOME()"],["IMG_FRENCH_ALPINE_LANDSCAPE","IMG_FRENCH_ALPINE_LANDSCAPE()"],["IMG_LOCOMOTION_HOUSE_CAT","IMG_LOCOMOTION_HOUSE_CAT()"],["IMG_LOCOMOTION_NUDE_MALE","IMG_LOCOMOTION_NUDE_MALE()"],["IMG_MARCH_PASTORAL","IMG_MARCH_PASTORAL()"],["IMG_NAGASAKI_BOATS","IMG_NAGASAKI_BOATS()"],["incrapcorr","incrapcorr( [mx, my] )"],["incrcount","incrcount()"],["incrcovariance","incrcovariance( [mx, my] )"],["incrcovmat","incrcovmat( out[, means] )"],["incrcv","incrcv( [mean] )"],["increwmean","increwmean( α )"],["increwstdev","increwstdev( α )"],["increwvariance","increwvariance( α )"],["incrgmean","incrgmean()"],["incrgrubbs","incrgrubbs( [options] )"],["incrhmean","incrhmean()"],["incrkmeans","incrkmeans( k[, ndims][, options] )"],["incrkurtosis","incrkurtosis()"],["incrmaape","incrmaape()"],["incrmae","incrmae()"],["incrmapcorr","incrmapcorr( W[, mx, my] )"],["incrmape","incrmape()"],["incrmax","incrmax()"],["incrmaxabs","incrmaxabs()"],["incrmcovariance","incrmcovariance( W[, mx, my] )"],["incrmcv","incrmcv( W[, mean] )"],["incrmda","incrmda()"],["incrme","incrme()"],["incrmean","incrmean()"],["incrmeanabs","incrmeanabs()"],["incrmeanabs2","incrmeanabs2()"],["incrmeanstdev","incrmeanstdev( [out] )"],["incrmeanvar","incrmeanvar( [out] )"],["incrmgmean","incrmgmean( W )"],["incrmgrubbs","incrmgrubbs( W[, options] )"],["incrmhmean","incrmhmean( W )"],["incrmidrange","incrmidrange()"],["incrmin","incrmin()"],["incrminabs","incrminabs()"],["incrminmax","incrminmax( [out] )"],["incrminmaxabs","incrminmaxabs( [out] )"],["incrmmaape","incrmmaape( W )"],["incrmmae","incrmmae( W )"],["incrmmape","incrmmape( W )"],["incrmmax","incrmmax( W )"],["incrmmaxabs","incrmmaxabs( W )"],["incrmmda","incrmmda( W )"],["incrmme","incrmme( W )"],["incrmmean","incrmmean( W )"],["incrmmeanabs","incrmmeanabs( W )"],["incrmmeanabs2","incrmmeanabs2( W )"],["incrmmeanstdev","incrmmeanstdev( [out,] W )"],["incrmmeanvar","incrmmeanvar( [out,] W )"],["incrmmidrange","incrmmidrange( W )"],["incrmmin","incrmmin( W )"],["incrmminabs","incrmminabs( W )"],["incrmminmax","incrmminmax( [out,] W )"],["incrmminmaxabs","incrmminmaxabs( [out,] W )"],["incrmmpe","incrmmpe( W )"],["incrmmse","incrmmse( W )"],["incrmpcorr","incrmpcorr( W[, mx, my] )"],["incrmpcorr2","incrmpcorr2( W[, mx, my] )"],["incrmpcorrdist","incrmpcorrdist( W[, mx, my] )"],["incrmpe","incrmpe()"],["incrmprod","incrmprod( W )"],["incrmrange","incrmrange( W )"],["incrmrmse","incrmrmse( W )"],["incrmrss","incrmrss( W )"],["incrmse","incrmse()"],["incrmstdev","incrmstdev( W[, mean] )"],["incrmsum","incrmsum( W )"],["incrmsumabs","incrmsumabs( W )"],["incrmsumabs2","incrmsumabs2( W )"],["incrmsummary","incrmsummary( W )"],["incrmsumprod","incrmsumprod( W )"],["incrmvariance","incrmvariance( W[, mean] )"],["incrmvmr","incrmvmr( W[, mean] )"],["incrpcorr","incrpcorr( [mx, my] )"],["incrpcorr2","incrpcorr2( [mx, my] )"],["incrpcorrdist","incrpcorrdist( [mx, my] )"],["incrpcorrdistmat","incrpcorrdistmat( out[, means] )"],["incrpcorrmat","incrpcorrmat( out[, means] )"],["incrprod","incrprod()"],["incrrange","incrrange()"],["incrrmse","incrrmse()"],["incrrss","incrrss()"],["incrskewness","incrskewness()"],["incrspace","incrspace( start, stop[, increment] )"],["incrstdev","incrstdev( [mean] )"],["incrsum","incrsum()"],["incrsumabs","incrsumabs()"],["incrsumabs2","incrsumabs2()"],["incrsummary","incrsummary()"],["incrsumprod","incrsumprod()"],["incrvariance","incrvariance( [mean] )"],["incrvmr","incrvmr( [mean] )"],["incrwmean","incrwmean()"],["ind2sub","ind2sub( [out,] shape, idx[, options] )"],["indexOf","indexOf( arr, searchElement[, fromIndex] )"],["inherit","inherit( ctor, superCtor )"],["inheritedEnumerableProperties","inheritedEnumerableProperties( value[, level] )"],["inheritedEnumerablePropertySymbols","inheritedEnumerablePropertySymbols( value[, level] )"],["inheritedKeys","inheritedKeys( value[, level] )"],["inheritedNonEnumerableProperties","inheritedNonEnumerableProperties( value[, level] )"],["inheritedNonEnumerablePropertyNames","inheritedNonEnumerablePropertyNames( value[, level] )"],["inheritedNonEnumerablePropertySymbols","inheritedNonEnumerablePropertySymbols( value[, level] )"],["inheritedProperties","inheritedProperties( value[, level] )"],["inheritedPropertyDescriptor","inheritedPropertyDescriptor( value, property[, level] )"],["inheritedPropertyDescriptors","inheritedPropertyDescriptors( value[, level] )"],["inheritedPropertyNames","inheritedPropertyNames( value[, level] )"],["inheritedPropertySymbols","inheritedPropertySymbols( value[, level] )"],["inheritedWritableProperties","inheritedWritableProperties( value[, level] )"],["inheritedWritablePropertyNames","inheritedWritablePropertyNames( value[, level] )"],["inheritedWritablePropertySymbols","inheritedWritablePropertySymbols( value[, level] )"],["inmap","inmap( collection, fcn[, thisArg] )"],["inmapAsync","inmapAsync( collection, [options,] fcn, done )"],["inmapAsync.factory","inmapAsync.factory( [options,] fcn )"],["inmapRight","inmapRight( collection, fcn[, thisArg] )"],["inmapRightAsync","inmapRightAsync( collection, [options,] fcn, done )"],["inmapRightAsync.factory","inmapRightAsync.factory( [options,] fcn )"],["inspectSinkStream","inspectSinkStream( [options,] clbk )"],["inspectSinkStream.factory","inspectSinkStream.factory( [options] )"],["inspectSinkStream.objectMode","inspectSinkStream.objectMode( [options,] clbk )"],["inspectStream","inspectStream( [options,] clbk )"],["inspectStream.factory","inspectStream.factory( [options] )"],["inspectStream.objectMode","inspectStream.objectMode( [options,] clbk )"],["instanceOf","instanceOf( value, constructor )"],["INT8_MAX","INT8_MAX"],["INT8_MIN","INT8_MIN"],["INT8_NUM_BYTES","INT8_NUM_BYTES"],["Int8Array","Int8Array()"],["Int8Array","Int8Array( length )"],["Int8Array","Int8Array( typedarray )"],["Int8Array","Int8Array( obj )"],["Int8Array","Int8Array( buffer[, byteOffset[, length]] )"],["Int8Array.from","Int8Array.from( src[, map[, thisArg]] )"],["Int8Array.of","Int8Array.of( element0[, element1[, ...elementN]] )"],["Int8Array.BYTES_PER_ELEMENT","Int8Array.BYTES_PER_ELEMENT"],["Int8Array.name","Int8Array.name"],["Int8Array.prototype.buffer","Int8Array.prototype.buffer"],["Int8Array.prototype.byteLength","Int8Array.prototype.byteLength"],["Int8Array.prototype.byteOffset","Int8Array.prototype.byteOffset"],["Int8Array.prototype.BYTES_PER_ELEMENT","Int8Array.prototype.BYTES_PER_ELEMENT"],["Int8Array.prototype.length","Int8Array.prototype.length"],["Int8Array.prototype.copyWithin","Int8Array.prototype.copyWithin( target, start[, end] )"],["Int8Array.prototype.entries","Int8Array.prototype.entries()"],["Int8Array.prototype.every","Int8Array.prototype.every( predicate[, thisArg] )"],["Int8Array.prototype.fill","Int8Array.prototype.fill( value[, start[, end]] )"],["Int8Array.prototype.filter","Int8Array.prototype.filter( predicate[, thisArg] )"],["Int8Array.prototype.find","Int8Array.prototype.find( predicate[, thisArg] )"],["Int8Array.prototype.findIndex","Int8Array.prototype.findIndex( predicate[, thisArg] )"],["Int8Array.prototype.forEach","Int8Array.prototype.forEach( fcn[, thisArg] )"],["Int8Array.prototype.includes","Int8Array.prototype.includes( searchElement[, fromIndex] )"],["Int8Array.prototype.indexOf","Int8Array.prototype.indexOf( searchElement[, fromIndex] )"],["Int8Array.prototype.join","Int8Array.prototype.join( [separator] )"],["Int8Array.prototype.keys","Int8Array.prototype.keys()"],["Int8Array.prototype.lastIndexOf","Int8Array.prototype.lastIndexOf( searchElement[, fromIndex] )"],["Int8Array.prototype.map","Int8Array.prototype.map( fcn[, thisArg] )"],["Int8Array.prototype.reduce","Int8Array.prototype.reduce( fcn[, initialValue] )"],["Int8Array.prototype.reduceRight","Int8Array.prototype.reduceRight( fcn[, initialValue] )"],["Int8Array.prototype.reverse","Int8Array.prototype.reverse()"],["Int8Array.prototype.set","Int8Array.prototype.set( arr[, offset] )"],["Int8Array.prototype.slice","Int8Array.prototype.slice( [begin[, end]] )"],["Int8Array.prototype.some","Int8Array.prototype.some( predicate[, thisArg] )"],["Int8Array.prototype.sort","Int8Array.prototype.sort( [compareFunction] )"],["Int8Array.prototype.subarray","Int8Array.prototype.subarray( [begin[, end]] )"],["Int8Array.prototype.toLocaleString","Int8Array.prototype.toLocaleString( [locales[, options]] )"],["Int8Array.prototype.toString","Int8Array.prototype.toString()"],["Int8Array.prototype.values","Int8Array.prototype.values()"],["INT16_MAX","INT16_MAX"],["INT16_MIN","INT16_MIN"],["INT16_NUM_BYTES","INT16_NUM_BYTES"],["Int16Array","Int16Array()"],["Int16Array","Int16Array( length )"],["Int16Array","Int16Array( typedarray )"],["Int16Array","Int16Array( obj )"],["Int16Array","Int16Array( buffer[, byteOffset[, length]] )"],["Int16Array.from","Int16Array.from( src[, map[, thisArg]] )"],["Int16Array.of","Int16Array.of( element0[, element1[, ...elementN]] )"],["Int16Array.BYTES_PER_ELEMENT","Int16Array.BYTES_PER_ELEMENT"],["Int16Array.name","Int16Array.name"],["Int16Array.prototype.buffer","Int16Array.prototype.buffer"],["Int16Array.prototype.byteLength","Int16Array.prototype.byteLength"],["Int16Array.prototype.byteOffset","Int16Array.prototype.byteOffset"],["Int16Array.prototype.BYTES_PER_ELEMENT","Int16Array.prototype.BYTES_PER_ELEMENT"],["Int16Array.prototype.length","Int16Array.prototype.length"],["Int16Array.prototype.copyWithin","Int16Array.prototype.copyWithin( target, start[, end] )"],["Int16Array.prototype.entries","Int16Array.prototype.entries()"],["Int16Array.prototype.every","Int16Array.prototype.every( predicate[, thisArg] )"],["Int16Array.prototype.fill","Int16Array.prototype.fill( value[, start[, end]] )"],["Int16Array.prototype.filter","Int16Array.prototype.filter( predicate[, thisArg] )"],["Int16Array.prototype.find","Int16Array.prototype.find( predicate[, thisArg] )"],["Int16Array.prototype.findIndex","Int16Array.prototype.findIndex( predicate[, thisArg] )"],["Int16Array.prototype.forEach","Int16Array.prototype.forEach( fcn[, thisArg] )"],["Int16Array.prototype.includes","Int16Array.prototype.includes( searchElement[, fromIndex] )"],["Int16Array.prototype.indexOf","Int16Array.prototype.indexOf( searchElement[, fromIndex] )"],["Int16Array.prototype.join","Int16Array.prototype.join( [separator] )"],["Int16Array.prototype.keys","Int16Array.prototype.keys()"],["Int16Array.prototype.lastIndexOf","Int16Array.prototype.lastIndexOf( searchElement[, fromIndex] )"],["Int16Array.prototype.map","Int16Array.prototype.map( fcn[, thisArg] )"],["Int16Array.prototype.reduce","Int16Array.prototype.reduce( fcn[, initialValue] )"],["Int16Array.prototype.reduceRight","Int16Array.prototype.reduceRight( fcn[, initialValue] )"],["Int16Array.prototype.reverse","Int16Array.prototype.reverse()"],["Int16Array.prototype.set","Int16Array.prototype.set( arr[, offset] )"],["Int16Array.prototype.slice","Int16Array.prototype.slice( [begin[, end]] )"],["Int16Array.prototype.some","Int16Array.prototype.some( predicate[, thisArg] )"],["Int16Array.prototype.sort","Int16Array.prototype.sort( [compareFunction] )"],["Int16Array.prototype.subarray","Int16Array.prototype.subarray( [begin[, end]] )"],["Int16Array.prototype.toLocaleString","Int16Array.prototype.toLocaleString( [locales[, options]] )"],["Int16Array.prototype.toString","Int16Array.prototype.toString()"],["Int16Array.prototype.values","Int16Array.prototype.values()"],["INT32_MAX","INT32_MAX"],["INT32_MIN","INT32_MIN"],["INT32_NUM_BYTES","INT32_NUM_BYTES"],["Int32Array","Int32Array()"],["Int32Array","Int32Array( length )"],["Int32Array","Int32Array( typedarray )"],["Int32Array","Int32Array( obj )"],["Int32Array","Int32Array( buffer[, byteOffset[, length]] )"],["Int32Array.from","Int32Array.from( src[, map[, thisArg]] )"],["Int32Array.of","Int32Array.of( element0[, element1[, ...elementN]] )"],["Int32Array.BYTES_PER_ELEMENT","Int32Array.BYTES_PER_ELEMENT"],["Int32Array.name","Int32Array.name"],["Int32Array.prototype.buffer","Int32Array.prototype.buffer"],["Int32Array.prototype.byteLength","Int32Array.prototype.byteLength"],["Int32Array.prototype.byteOffset","Int32Array.prototype.byteOffset"],["Int32Array.prototype.BYTES_PER_ELEMENT","Int32Array.prototype.BYTES_PER_ELEMENT"],["Int32Array.prototype.length","Int32Array.prototype.length"],["Int32Array.prototype.copyWithin","Int32Array.prototype.copyWithin( target, start[, end] )"],["Int32Array.prototype.entries","Int32Array.prototype.entries()"],["Int32Array.prototype.every","Int32Array.prototype.every( predicate[, thisArg] )"],["Int32Array.prototype.fill","Int32Array.prototype.fill( value[, start[, end]] )"],["Int32Array.prototype.filter","Int32Array.prototype.filter( predicate[, thisArg] )"],["Int32Array.prototype.find","Int32Array.prototype.find( predicate[, thisArg] )"],["Int32Array.prototype.findIndex","Int32Array.prototype.findIndex( predicate[, thisArg] )"],["Int32Array.prototype.forEach","Int32Array.prototype.forEach( fcn[, thisArg] )"],["Int32Array.prototype.includes","Int32Array.prototype.includes( searchElement[, fromIndex] )"],["Int32Array.prototype.indexOf","Int32Array.prototype.indexOf( searchElement[, fromIndex] )"],["Int32Array.prototype.join","Int32Array.prototype.join( [separator] )"],["Int32Array.prototype.keys","Int32Array.prototype.keys()"],["Int32Array.prototype.lastIndexOf","Int32Array.prototype.lastIndexOf( searchElement[, fromIndex] )"],["Int32Array.prototype.map","Int32Array.prototype.map( fcn[, thisArg] )"],["Int32Array.prototype.reduce","Int32Array.prototype.reduce( fcn[, initialValue] )"],["Int32Array.prototype.reduceRight","Int32Array.prototype.reduceRight( fcn[, initialValue] )"],["Int32Array.prototype.reverse","Int32Array.prototype.reverse()"],["Int32Array.prototype.set","Int32Array.prototype.set( arr[, offset] )"],["Int32Array.prototype.slice","Int32Array.prototype.slice( [begin[, end]] )"],["Int32Array.prototype.some","Int32Array.prototype.some( predicate[, thisArg] )"],["Int32Array.prototype.sort","Int32Array.prototype.sort( [compareFunction] )"],["Int32Array.prototype.subarray","Int32Array.prototype.subarray( [begin[, end]] )"],["Int32Array.prototype.toLocaleString","Int32Array.prototype.toLocaleString( [locales[, options]] )"],["Int32Array.prototype.toString","Int32Array.prototype.toString()"],["Int32Array.prototype.values","Int32Array.prototype.values()"],["IS_BIG_ENDIAN","IS_BIG_ENDIAN"],["IS_BROWSER","IS_BROWSER"],["IS_DARWIN","IS_DARWIN"],["IS_ELECTRON","IS_ELECTRON"],["IS_ELECTRON_MAIN","IS_ELECTRON_MAIN"],["IS_ELECTRON_RENDERER","IS_ELECTRON_RENDERER"],["IS_LITTLE_ENDIAN","IS_LITTLE_ENDIAN"],["IS_NODE","IS_NODE"],["IS_WEB_WORKER","IS_WEB_WORKER"],["IS_WINDOWS","IS_WINDOWS"],["isAbsolutePath","isAbsolutePath( value )"],["isAbsolutePath.posix","isAbsolutePath.posix( value )"],["isAbsolutePath.win32","isAbsolutePath.win32( value )"],["isAccessorProperty","isAccessorProperty( value, property )"],["isAccessorPropertyIn","isAccessorPropertyIn( value, property )"],["isAlphagram","isAlphagram( value )"],["isAlphaNumeric","isAlphaNumeric( str )"],["isAnagram","isAnagram( str, value )"],["isArguments","isArguments( value )"],["isArray","isArray( value )"],["isArrayArray","isArrayArray( value )"],["isArrayBuffer","isArrayBuffer( value )"],["isArrayLength","isArrayLength( value )"],["isArrayLike","isArrayLike( value )"],["isArrayLikeObject","isArrayLikeObject( value )"],["isASCII","isASCII( str )"],["isBetween","isBetween( value, a, b[, left, right] )"],["isBetweenArray","isBetweenArray( value, a, b[, left, right] )"],["isBinaryString","isBinaryString( value )"],["isBoolean","isBoolean( value )"],["isBoolean.isPrimitive","isBoolean.isPrimitive( value )"],["isBoolean.isObject","isBoolean.isObject( value )"],["isBooleanArray","isBooleanArray( value )"],["isBooleanArray.primitives","isBooleanArray.primitives( value )"],["isBooleanArray.objects","isBooleanArray.objects( value )"],["isBoxedPrimitive","isBoxedPrimitive( value )"],["isBuffer","isBuffer( value )"],["isCapitalized","isCapitalized( value )"],["isCentrosymmetricMatrix","isCentrosymmetricMatrix( value )"],["isCircular","isCircular( value )"],["isCircularArray","isCircularArray( value )"],["isCircularPlainObject","isCircularPlainObject( value )"],["isCollection","isCollection( value )"],["isComplex","isComplex( value )"],["isComplex64","isComplex64( value )"],["isComplex64Array","isComplex64Array( value )"],["isComplex128","isComplex128( value )"],["isComplex128Array","isComplex128Array( value )"],["isComplexLike","isComplexLike( value )"],["isComplexTypedArray","isComplexTypedArray( value )"],["isConfigurableProperty","isConfigurableProperty( value, property )"],["isConfigurablePropertyIn","isConfigurablePropertyIn( value, property )"],["isDataProperty","isDataProperty( value, property )"],["isDataPropertyIn","isDataPropertyIn( value, property )"],["isDateObject","isDateObject( value )"],["isDigitString","isDigitString( str )"],["isEmailAddress","isEmailAddress( value )"],["isEmptyArray","isEmptyArray( value )"],["isEmptyObject","isEmptyObject( value )"],["isEmptyString","isEmptyString( value )"],["isEmptyString.isPrimitive","isEmptyString.isPrimitive( value )"],["isEmptyString.isObject","isEmptyString.isObject( value )"],["isEnumerableProperty","isEnumerableProperty( value, property )"],["isEnumerablePropertyIn","isEnumerablePropertyIn( value, property )"],["isError","isError( value )"],["isEvalError","isEvalError( value )"],["isEven","isEven( value )"],["isEven.isPrimitive","isEven.isPrimitive( value )"],["isEven.isObject","isEven.isObject( value )"],["isFalsy","isFalsy( value )"],["isFalsyArray","isFalsyArray( value )"],["isFinite","isFinite( value )"],["isFinite.isPrimitive","isFinite.isPrimitive( value )"],["isFinite.isObject","isFinite.isObject( value )"],["isFiniteArray","isFiniteArray( value )"],["isFiniteArray.primitives","isFiniteArray.primitives( value )"],["isFiniteArray.objects","isFiniteArray.objects( value )"],["isFloat32Array","isFloat32Array( value )"],["isFloat64Array","isFloat64Array( value )"],["isFunction","isFunction( value )"],["isFunctionArray","isFunctionArray( value )"],["isGeneratorObject","isGeneratorObject( value )"],["isGeneratorObjectLike","isGeneratorObjectLike( value )"],["isHexString","isHexString( str )"],["isInfinite","isInfinite( value )"],["isInfinite.isPrimitive","isInfinite.isPrimitive( value )"],["isInfinite.isObject","isInfinite.isObject( value )"],["isInheritedProperty","isInheritedProperty( value, property )"],["isInt8Array","isInt8Array( value )"],["isInt16Array","isInt16Array( value )"],["isInt32Array","isInt32Array( value )"],["isInteger","isInteger( value )"],["isInteger.isPrimitive","isInteger.isPrimitive( value )"],["isInteger.isObject","isInteger.isObject( value )"],["isIntegerArray","isIntegerArray( value )"],["isIntegerArray.primitives","isIntegerArray.primitives( value )"],["isIntegerArray.objects","isIntegerArray.objects( value )"],["isIterableLike","isIterableLike( value )"],["isIteratorLike","isIteratorLike( value )"],["isJSON","isJSON( value )"],["isLeapYear","isLeapYear( value )"],["isLowercase","isLowercase( value )"],["isMatrixLike","isMatrixLike( value )"],["isMethod","isMethod( value, property )"],["isMethodIn","isMethodIn( value, property )"],["isNamedTypedTupleLike","isNamedTypedTupleLike( value )"],["isnan","isnan( value )"],["isnan.isPrimitive","isnan.isPrimitive( value )"],["isnan.isObject","isnan.isObject( value )"],["isNaNArray","isNaNArray( value )"],["isNaNArray.primitives","isNaNArray.primitives( value )"],["isNaNArray.objects","isNaNArray.objects( value )"],["isNativeFunction","isNativeFunction( value )"],["isndarrayLike","isndarrayLike( value )"],["isNegativeInteger","isNegativeInteger( value )"],["isNegativeInteger.isPrimitive","isNegativeInteger.isPrimitive( value )"],["isNegativeInteger.isObject","isNegativeInteger.isObject( value )"],["isNegativeIntegerArray","isNegativeIntegerArray( value )"],["isNegativeIntegerArray.primitives","isNegativeIntegerArray.primitives( value )"],["isNegativeIntegerArray.objects","isNegativeIntegerArray.objects( value )"],["isNegativeNumber","isNegativeNumber( value )"],["isNegativeNumber.isPrimitive","isNegativeNumber.isPrimitive( value )"],["isNegativeNumber.isObject","isNegativeNumber.isObject( value )"],["isNegativeNumberArray","isNegativeNumberArray( value )"],["isNegativeNumberArray.primitives","isNegativeNumberArray.primitives( value )"],["isNegativeNumberArray.objects","isNegativeNumberArray.objects( value )"],["isNegativeZero","isNegativeZero( value )"],["isNegativeZero.isPrimitive","isNegativeZero.isPrimitive( value )"],["isNegativeZero.isObject","isNegativeZero.isObject( value )"],["isNodeBuiltin","isNodeBuiltin( str )"],["isNodeDuplexStreamLike","isNodeDuplexStreamLike( value )"],["isNodeReadableStreamLike","isNodeReadableStreamLike( value )"],["isNodeREPL","isNodeREPL()"],["isNodeStreamLike","isNodeStreamLike( value )"],["isNodeTransformStreamLike","isNodeTransformStreamLike( value )"],["isNodeWritableStreamLike","isNodeWritableStreamLike( value )"],["isNonConfigurableProperty","isNonConfigurableProperty( value, property )"],["isNonConfigurablePropertyIn","isNonConfigurablePropertyIn( value, property )"],["isNonEnumerableProperty","isNonEnumerableProperty( value, property )"],["isNonEnumerablePropertyIn","isNonEnumerablePropertyIn( value, property )"],["isNonNegativeInteger","isNonNegativeInteger( value )"],["isNonNegativeInteger.isPrimitive","isNonNegativeInteger.isPrimitive( value )"],["isNonNegativeInteger.isObject","isNonNegativeInteger.isObject( value )"],["isNonNegativeIntegerArray","isNonNegativeIntegerArray( value )"],["isNonNegativeIntegerArray.primitives","isNonNegativeIntegerArray.primitives( value )"],["isNonNegativeIntegerArray.objects","isNonNegativeIntegerArray.objects( value )"],["isNonNegativeNumber","isNonNegativeNumber( value )"],["isNonNegativeNumber.isPrimitive","isNonNegativeNumber.isPrimitive( value )"],["isNonNegativeNumber.isObject","isNonNegativeNumber.isObject( value )"],["isNonNegativeNumberArray","isNonNegativeNumberArray( value )"],["isNonNegativeNumberArray.primitives","isNonNegativeNumberArray.primitives( value )"],["isNonNegativeNumberArray.objects","isNonNegativeNumberArray.objects( value )"],["isNonPositiveInteger","isNonPositiveInteger( value )"],["isNonPositiveInteger.isPrimitive","isNonPositiveInteger.isPrimitive( value )"],["isNonPositiveInteger.isObject","isNonPositiveInteger.isObject( value )"],["isNonPositiveIntegerArray","isNonPositiveIntegerArray( value )"],["isNonPositiveIntegerArray.primitives","isNonPositiveIntegerArray.primitives( value )"],["isNonPositiveIntegerArray.objects","isNonPositiveIntegerArray.objects( value )"],["isNonPositiveNumber","isNonPositiveNumber( value )"],["isNonPositiveNumber.isPrimitive","isNonPositiveNumber.isPrimitive( value )"],["isNonPositiveNumber.isObject","isNonPositiveNumber.isObject( value )"],["isNonPositiveNumberArray","isNonPositiveNumberArray( value )"],["isNonPositiveNumberArray.primitives","isNonPositiveNumberArray.primitives( value )"],["isNonPositiveNumberArray.objects","isNonPositiveNumberArray.objects( value )"],["isNonSymmetricMatrix","isNonSymmetricMatrix( value )"],["isNull","isNull( value )"],["isNullArray","isNullArray( value )"],["isNumber","isNumber( value )"],["isNumber.isPrimitive","isNumber.isPrimitive( value )"],["isNumber.isObject","isNumber.isObject( value )"],["isNumberArray","isNumberArray( value )"],["isNumberArray.primitives","isNumberArray.primitives( value )"],["isNumberArray.objects","isNumberArray.objects( value )"],["isNumericArray","isNumericArray( value )"],["isObject","isObject( value )"],["isObjectArray","isObjectArray( value )"],["isObjectLike","isObjectLike( value )"],["isOdd","isOdd( value )"],["isOdd.isPrimitive","isOdd.isPrimitive( value )"],["isOdd.isObject","isOdd.isObject( value )"],["isoWeeksInYear","isoWeeksInYear( [year] )"],["isPersymmetricMatrix","isPersymmetricMatrix( value )"],["isPlainObject","isPlainObject( value )"],["isPlainObjectArray","isPlainObjectArray( value )"],["isPositiveInteger","isPositiveInteger( value )"],["isPositiveInteger.isPrimitive","isPositiveInteger.isPrimitive( value )"],["isPositiveInteger.isObject","isPositiveInteger.isObject( value )"],["isPositiveIntegerArray","isPositiveIntegerArray( value )"],["isPositiveIntegerArray.primitives","isPositiveIntegerArray.primitives( value )"],["isPositiveIntegerArray.objects","isPositiveIntegerArray.objects( value )"],["isPositiveNumber","isPositiveNumber( value )"],["isPositiveNumber.isPrimitive","isPositiveNumber.isPrimitive( value )"],["isPositiveNumber.isObject","isPositiveNumber.isObject( value )"],["isPositiveNumberArray","isPositiveNumberArray( value )"],["isPositiveNumberArray.primitives","isPositiveNumberArray.primitives( value )"],["isPositiveNumberArray.objects","isPositiveNumberArray.objects( value )"],["isPositiveZero","isPositiveZero( value )"],["isPositiveZero.isPrimitive","isPositiveZero.isPrimitive( value )"],["isPositiveZero.isObject","isPositiveZero.isObject( value )"],["isPrimitive","isPrimitive( value )"],["isPrimitiveArray","isPrimitiveArray( value )"],["isPRNGLike","isPRNGLike( value )"],["isProbability","isProbability( value )"],["isProbability.isPrimitive","isProbability.isPrimitive( value )"],["isProbability.isObject","isProbability.isObject( value )"],["isProbabilityArray","isProbabilityArray( value )"],["isProbabilityArray.primitives","isProbabilityArray.primitives( value )"],["isProbabilityArray.objects","isProbabilityArray.objects( value )"],["isPrototypeOf","isPrototypeOf( value, proto )"],["isRangeError","isRangeError( value )"],["isReadableProperty","isReadableProperty( value, property )"],["isReadablePropertyIn","isReadablePropertyIn( value, property )"],["isReadOnlyProperty","isReadOnlyProperty( value, property )"],["isReadOnlyPropertyIn","isReadOnlyPropertyIn( value, property )"],["isReadWriteProperty","isReadWriteProperty( value, property )"],["isReadWritePropertyIn","isReadWritePropertyIn( value, property )"],["isReferenceError","isReferenceError( value )"],["isRegExp","isRegExp( value )"],["isRegExpString","isRegExpString( value )"],["isRelativePath","isRelativePath( value )"],["isRelativePath.posix","isRelativePath.posix( value )"],["isRelativePath.win32","isRelativePath.win32( value )"],["isSafeInteger","isSafeInteger( value )"],["isSafeInteger.isPrimitive","isSafeInteger.isPrimitive( value )"],["isSafeInteger.isObject","isSafeInteger.isObject( value )"],["isSafeIntegerArray","isSafeIntegerArray( value )"],["isSafeIntegerArray.primitives","isSafeIntegerArray.primitives( value )"],["isSafeIntegerArray.objects","isSafeIntegerArray.objects( value )"],["isSameValue","isSameValue( a, b )"],["isSameValueZero","isSameValueZero( a, b )"],["isSharedArrayBuffer","isSharedArrayBuffer( value )"],["isSkewCentrosymmetricMatrix","isSkewCentrosymmetricMatrix( value )"],["isSkewPersymmetricMatrix","isSkewPersymmetricMatrix( value )"],["isSkewSymmetricMatrix","isSkewSymmetricMatrix( value )"],["isSquareMatrix","isSquareMatrix( value )"],["isStrictEqual","isStrictEqual( a, b )"],["isString","isString( value )"],["isString.isPrimitive","isString.isPrimitive( value )"],["isString.isObject","isString.isObject( value )"],["isStringArray","isStringArray( value )"],["isStringArray.primitives","isStringArray.primitives( value )"],["isStringArray.objects","isStringArray.objects( value )"],["isSymbol","isSymbol( value )"],["isSymbolArray","isSymbolArray( value )"],["isSymbolArray.primitives","isSymbolArray.primitives( value )"],["isSymbolArray.objects","isSymbolArray.objects( value )"],["isSymmetricMatrix","isSymmetricMatrix( value )"],["isSyntaxError","isSyntaxError( value )"],["isTruthy","isTruthy( value )"],["isTruthyArray","isTruthyArray( value )"],["isTypedArray","isTypedArray( value )"],["isTypedArrayLength","isTypedArrayLength( value )"],["isTypedArrayLike","isTypedArrayLike( value )"],["isTypeError","isTypeError( value )"],["isUint8Array","isUint8Array( value )"],["isUint8ClampedArray","isUint8ClampedArray( value )"],["isUint16Array","isUint16Array( value )"],["isUint32Array","isUint32Array( value )"],["isUNCPath","isUNCPath( value )"],["isUndefined","isUndefined( value )"],["isUndefinedOrNull","isUndefinedOrNull( value )"],["isUnityProbabilityArray","isUnityProbabilityArray( value )"],["isUppercase","isUppercase( value )"],["isURI","isURI( value )"],["isURIError","isURIError( value )"],["isVectorLike","isVectorLike( value )"],["isWhitespace","isWhitespace( str )"],["isWritableProperty","isWritableProperty( value, property )"],["isWritablePropertyIn","isWritablePropertyIn( value, property )"],["isWriteOnlyProperty","isWriteOnlyProperty( value, property )"],["isWriteOnlyPropertyIn","isWriteOnlyPropertyIn( value, property )"],["iterAdd","iterAdd( iter0, ...iterator )"],["iterAdvance","iterAdvance( iterator[, n] )"],["iterAny","iterAny( iterator )"],["iterAnyBy","iterAnyBy( iterator, predicate[, thisArg ] )"],["iterator2array","iterator2array( iterator[, out][, mapFcn[, thisArg]] )"],["iterator2arrayview","iterator2arrayview( iterator, dest[, begin[, end]][, mapFcn[, thisArg]] )"],["iterator2arrayviewRight","iterator2arrayviewRight( iterator, dest[, begin[, end]][, mapFcn[, thisArg]] )"],["iteratorStream","iteratorStream( iterator[, options] )"],["iteratorStream.factory","iteratorStream.factory( [options] )"],["iteratorStream.objectMode","iteratorStream.objectMode( iterator[, options] )"],["IteratorSymbol","IteratorSymbol"],["iterawgn","iterawgn( iterator, sigma[, options] )"],["iterawln","iterawln( iterator, sigma[, options] )"],["iterawun","iterawun( iterator, sigma[, options] )"],["iterBartlettHannPulse","iterBartlettHannPulse( [options] )"],["iterBartlettPulse","iterBartlettPulse( [options] )"],["iterConcat","iterConcat( iter0, ...iterator )"],["iterConstant","iterConstant( value[, options] )"],["iterCosineWave","iterCosineWave( [options] )"],["iterCounter","iterCounter( iterator )"],["itercugmean","itercugmean( iterator )"],["itercuhmean","itercuhmean( iterator )"],["itercumax","itercumax( iterator )"],["itercumaxabs","itercumaxabs( iterator )"],["itercumean","itercumean( iterator )"],["itercumeanabs","itercumeanabs( iterator )"],["itercumeanabs2","itercumeanabs2( iterator )"],["itercumidrange","itercumidrange( iterator )"],["itercumin","itercumin( iterator )"],["itercuminabs","itercuminabs( iterator )"],["itercuprod","itercuprod( iterator )"],["itercurange","itercurange( iterator )"],["itercusum","itercusum( iterator )"],["itercusumabs","itercusumabs( iterator )"],["itercusumabs2","itercusumabs2( iterator )"],["iterDedupe","iterDedupe( iterator[, limit] )"],["iterDedupeBy","iterDedupeBy( iterator, [limit,] fcn )"],["iterDiracComb","iterDiracComb( [options] )"],["iterDivide","iterDivide( iter0, ...iterator )"],["iterEmpty","iterEmpty()"],["iterEvery","iterEvery( iterator )"],["iterEveryBy","iterEveryBy( iterator, predicate[, thisArg ] )"],["iterFibonacci","iterFibonacci( [options] )"],["iterFill","iterFill( iterator, value[, begin[, end]] )"],["iterFilter","iterFilter( iterator, predicate[, thisArg] )"],["iterFilterMap","iterFilterMap( iterator, fcn[, thisArg] )"],["iterFirst","iterFirst( iterator )"],["iterFlatTopPulse","iterFlatTopPulse( [options] )"],["iterFlow","iterFlow( methods )"],["iterForEach","iterForEach( iterator, fcn[, thisArg] )"],["iterHannPulse","iterHannPulse( [options] )"],["iterHead","iterHead( iterator, n )"],["iterIntersection","iterIntersection( iter0, ...iterator )"],["iterIntersectionByHash","iterIntersectionByHash( iter0, ...iterator, hashFcn[, thisArg] )"],["iterLanczosPulse","iterLanczosPulse( [options] )"],["iterLast","iterLast( iterator )"],["iterLength","iterLength( iterator )"],["iterMap","iterMap( iterator, fcn[, thisArg] )"],["iterMapN","iterMapN( iter0, ...iterator, fcn[, thisArg] )"],["itermax","itermax( iterator )"],["itermaxabs","itermaxabs( iterator )"],["itermean","itermean( iterator )"],["itermeanabs","itermeanabs( iterator )"],["itermeanabs2","itermeanabs2( iterator )"],["itermidrange","itermidrange( iterator )"],["itermin","itermin( iterator )"],["iterminabs","iterminabs( iterator )"],["itermmax","itermmax( iterator, W )"],["itermmaxabs","itermmaxabs( iterator, W )"],["itermmean","itermmean( iterator, W )"],["itermmeanabs","itermmeanabs( iterator, W )"],["itermmeanabs2","itermmeanabs2( iterator, W )"],["itermmidrange","itermmidrange( iterator, W )"],["itermmin","itermmin( iterator, W )"],["itermminabs","itermminabs( iterator, W )"],["iterMod","iterMod( iter0, ...iterator )"],["itermprod","itermprod( iterator, W )"],["itermrange","itermrange( iterator, W )"],["itermsum","itermsum( iterator, W )"],["itermsumabs","itermsumabs( iterator, W )"],["itermsumabs2","itermsumabs2( iterator, W )"],["iterMultiply","iterMultiply( iter0, ...iterator )"],["iterNone","iterNone( iterator )"],["iterNoneBy","iterNoneBy( iterator, predicate[, thisArg ] )"],["iterNonFibonacci","iterNonFibonacci( [options] )"],["iterNth","iterNth( iterator, n )"],["iterPeriodicSinc","iterPeriodicSinc( n[, options] )"],["iterPipeline","iterPipeline( iterFcn[, ...iterFcn] )"],["iterPop","iterPop( iterator[, clbk[, thisArg]] )"],["iterprod","iterprod( iterator )"],["iterPulse","iterPulse( [options] )"],["iterPush","iterPush( iterator, ...items )"],["iterrange","iterrange( iterator )"],["iterReject","iterReject( iterator, predicate[, thisArg] )"],["iterReplicate","iterReplicate( iterator, n )"],["iterReplicateBy","iterReplicateBy( iterator, fcn[, thisArg] )"],["iterSawtoothWave","iterSawtoothWave( [options] )"],["iterShift","iterShift( iterator[, clbk[, thisArg]] )"],["iterSineWave","iterSineWave( [options] )"],["iterSlice","iterSlice( iterator[, begin[, end]] )"],["iterSome","iterSome( iterator, n )"],["iterSomeBy","iterSomeBy( iterator, n, predicate[, thisArg ] )"],["iterSquareWave","iterSquareWave( [options] )"],["iterstdev","iterstdev( iterator[, mean] )"],["iterSubtract","iterSubtract( iter0, ...iterator )"],["itersum","itersum( iterator )"],["itersumabs","itersumabs( iterator )"],["itersumabs2","itersumabs2( iterator )"],["iterThunk","iterThunk( iterFcn[, ...args] )"],["iterTriangleWave","iterTriangleWave( [options] )"],["iterUnion","iterUnion( iter0, ...iterator )"],["iterUnique","iterUnique( iterator )"],["iterUniqueBy","iterUniqueBy( iterator, predicate[, thisArg] )"],["iterUniqueByHash","iterUniqueByHash( iterator, hashFcn[, thisArg] )"],["iterUnshift","iterUnshift( iterator, ...items )"],["itervariance","itervariance( iterator[, mean] )"],["joinStream","joinStream( [options] )"],["joinStream.factory","joinStream.factory( [options] )"],["joinStream.objectMode","joinStream.objectMode( [options] )"],["keyBy","keyBy( collection, fcn[, thisArg] )"],["keyByRight","keyByRight( collection, fcn[, thisArg] )"],["keysIn","keysIn( obj )"],["kruskalTest","kruskalTest( ...x[, options] )"],["kstest","kstest( x, y[, ...params][, options] )"],["LinkedList","LinkedList()"],["linspace","linspace( start, stop[, length] )"],["LIU_NEGATIVE_OPINION_WORDS_EN","LIU_NEGATIVE_OPINION_WORDS_EN()"],["LIU_POSITIVE_OPINION_WORDS_EN","LIU_POSITIVE_OPINION_WORDS_EN()"],["LN_HALF","LN_HALF"],["LN_PI","LN_PI"],["LN_SQRT_TWO_PI","LN_SQRT_TWO_PI"],["LN_TWO_PI","LN_TWO_PI"],["LN2","LN2"],["LN10","LN10"],["LOG2E","LOG2E"],["LOG10E","LOG10E"],["logspace","logspace( a, b[, length] )"],["lowercase","lowercase( str )"],["lowercaseKeys","lowercaseKeys( obj )"],["lowess","lowess( x, y[, options] )"],["lpad","lpad( str, len[, pad] )"],["ltrim","ltrim( str )"],["MALE_FIRST_NAMES_EN","MALE_FIRST_NAMES_EN()"],["mapFun","mapFun( fcn, n[, thisArg] )"],["mapFunAsync","mapFunAsync( fcn, n, [options,] done )"],["mapFunAsync.factory","mapFunAsync.factory( [options,] fcn )"],["mapKeys","mapKeys( obj, transform )"],["mapKeysAsync","mapKeysAsync( obj, [options,] transform, done )"],["mapKeysAsync.factory","mapKeysAsync.factory( [options,] transform )"],["mapValues","mapValues( obj, transform )"],["mapValuesAsync","mapValuesAsync( obj, [options,] transform, done )"],["mapValuesAsync.factory","mapValuesAsync.factory( [options,] transform )"],["MAX_ARRAY_LENGTH","MAX_ARRAY_LENGTH"],["MAX_TYPED_ARRAY_LENGTH","MAX_TYPED_ARRAY_LENGTH"],["memoize","memoize( fcn[, hashFunction] )"],["merge","merge( target, ...source )"],["merge.factory","merge.factory( options )"],["MILLISECONDS_IN_DAY","MILLISECONDS_IN_DAY"],["MILLISECONDS_IN_HOUR","MILLISECONDS_IN_HOUR"],["MILLISECONDS_IN_MINUTE","MILLISECONDS_IN_MINUTE"],["MILLISECONDS_IN_SECOND","MILLISECONDS_IN_SECOND"],["MILLISECONDS_IN_WEEK","MILLISECONDS_IN_WEEK"],["MINARD_NAPOLEONS_MARCH","MINARD_NAPOLEONS_MARCH( [options] )"],["MINUTES_IN_DAY","MINUTES_IN_DAY"],["MINUTES_IN_HOUR","MINUTES_IN_HOUR"],["MINUTES_IN_WEEK","MINUTES_IN_WEEK"],["minutesInMonth","minutesInMonth( [month[, year]] )"],["minutesInYear","minutesInYear( [value] )"],["MOBY_DICK","MOBY_DICK()"],["MONTH_NAMES_EN","MONTH_NAMES_EN()"],["MONTHS_IN_YEAR","MONTHS_IN_YEAR"],["moveProperty","moveProperty( source, prop, target )"],["namedtypedtuple","namedtypedtuple( fields[, options] )"],["nativeClass","nativeClass( value )"],["ndarray","ndarray( dtype, ndims[, options] )"],["ndarrayCastingModes","ndarrayCastingModes()"],["ndarrayDataTypes","ndarrayDataTypes()"],["ndarrayIndexModes","ndarrayIndexModes()"],["ndarrayMemoized","ndarrayMemoized( dtype, ndims[, options] )"],["ndarrayMinDataType","ndarrayMinDataType( value )"],["ndarrayNextDataType","ndarrayNextDataType( [dtype] )"],["ndarrayOrders","ndarrayOrders()"],["ndarrayPromotionRules","ndarrayPromotionRules( [dtype1, dtype2] )"],["ndarraySafeCasts","ndarraySafeCasts( [dtype] )"],["ndarraySameKindCasts","ndarraySameKindCasts( [dtype] )"],["NIGHTINGALES_ROSE","NIGHTINGALES_ROSE()"],["NINF","NINF"],["NODE_VERSION","NODE_VERSION"],["none","none( collection )"],["noneBy","noneBy( collection, predicate[, thisArg ] )"],["noneByAsync","noneByAsync( collection, [options,] predicate, done )"],["noneByAsync.factory","noneByAsync.factory( [options,] predicate )"],["noneByRight","noneByRight( collection, predicate[, thisArg ] )"],["noneByRightAsync","noneByRightAsync( collection, [options,] predicate, done )"],["noneByRightAsync.factory","noneByRightAsync.factory( [options,] predicate )"],["nonEnumerableProperties","nonEnumerableProperties( value )"],["nonEnumerablePropertiesIn","nonEnumerablePropertiesIn( value )"],["nonEnumerablePropertyNames","nonEnumerablePropertyNames( value )"],["nonEnumerablePropertyNamesIn","nonEnumerablePropertyNamesIn( value )"],["nonEnumerablePropertySymbols","nonEnumerablePropertySymbols( value )"],["nonEnumerablePropertySymbolsIn","nonEnumerablePropertySymbolsIn( value )"],["noop","noop()"],["now","now()"],["NUM_CPUS","NUM_CPUS"],["Number","Number( value )"],["objectEntries","objectEntries( obj )"],["objectEntriesIn","objectEntriesIn( obj )"],["objectFromEntries","objectFromEntries( entries )"],["objectInverse","objectInverse( obj[, options] )"],["objectInverseBy","objectInverseBy( obj, [options,] transform )"],["objectKeys","objectKeys( value )"],["objectValues","objectValues( obj )"],["objectValuesIn","objectValuesIn( obj )"],["omit","omit( obj, keys )"],["omitBy","omitBy( obj, predicate )"],["openURL","openURL( url )"],["PACE_BOSTON_HOUSE_PRICES","PACE_BOSTON_HOUSE_PRICES()"],["pad","pad( str, len[, options] )"],["papply","papply( fcn, ...args )"],["papplyRight","papplyRight( fcn, ...args )"],["parallel","parallel( files, [options,] clbk )"],["parseJSON","parseJSON( str[, reviver] )"],["PATH_DELIMITER","PATH_DELIMITER"],["PATH_DELIMITER_POSIX","PATH_DELIMITER_POSIX"],["PATH_DELIMITER_WIN32","PATH_DELIMITER_WIN32"],["PATH_SEP","PATH_SEP"],["PATH_SEP_POSIX","PATH_SEP_POSIX"],["PATH_SEP_WIN32","PATH_SEP_WIN32"],["pcorrtest","pcorrtest( x, y[, options] )"],["percentEncode","percentEncode( str )"],["PHI","PHI"],["PI","PI"],["PI_SQUARED","PI_SQUARED"],["pick","pick( obj, keys )"],["pickBy","pickBy( obj, predicate )"],["PINF","PINF"],["pkg2alias","pkg2alias( pkg )"],["pkg2related","pkg2related( pkg )"],["PLATFORM","PLATFORM"],["plot","plot( [x, y,] [options] )"],["Plot","Plot( [x, y,] [options] )"],["pluck","pluck( arr, prop[, options] )"],["pop","pop( collection )"],["porterStemmer","porterStemmer( word )"],["prepend","prepend( collection1, collection2 )"],["properties","properties( value )"],["propertiesIn","propertiesIn( value )"],["propertyDescriptor","propertyDescriptor( value, property )"],["propertyDescriptorIn","propertyDescriptorIn( value, property )"],["propertyDescriptors","propertyDescriptors( value )"],["propertyDescriptorsIn","propertyDescriptorsIn( value )"],["propertyNames","propertyNames( value )"],["propertyNamesIn","propertyNamesIn( value )"],["propertySymbols","propertySymbols( value )"],["propertySymbolsIn","propertySymbolsIn( value )"],["Proxy","Proxy( target, handlers )"],["Proxy.revocable","Proxy.revocable( target, handlers )"],["push","push( collection, ...items )"],["quarterOfYear","quarterOfYear( [month] )"],["random.iterators.arcsine","random.iterators.arcsine( a, b[, options] )"],["random.iterators.bernoulli","random.iterators.bernoulli( p[, options] )"],["random.iterators.beta","random.iterators.beta( α, β[, options] )"],["random.iterators.betaprime","random.iterators.betaprime( α, β[, options] )"],["random.iterators.binomial","random.iterators.binomial( n, p[, options] )"],["random.iterators.boxMuller","random.iterators.boxMuller( [options] )"],["random.iterators.cauchy","random.iterators.cauchy( x0, Ɣ[, options] )"],["random.iterators.chi","random.iterators.chi( k[, options] )"],["random.iterators.chisquare","random.iterators.chisquare( k[, options] )"],["random.iterators.cosine","random.iterators.cosine( μ, s[, options] )"],["random.iterators.discreteUniform","random.iterators.discreteUniform( a, b[, options] )"],["random.iterators.erlang","random.iterators.erlang( k, λ[, options] )"],["random.iterators.exponential","random.iterators.exponential( λ[, options] )"],["random.iterators.f","random.iterators.f( d1, d2[, options] )"],["random.iterators.frechet","random.iterators.frechet( α, s, m[, options] )"],["random.iterators.gamma","random.iterators.gamma( α, β[, options] )"],["random.iterators.geometric","random.iterators.geometric( p[, options] )"],["random.iterators.gumbel","random.iterators.gumbel( μ, β[, options] )"],["random.iterators.hypergeometric","random.iterators.hypergeometric( N, K, n[, options] )"],["random.iterators.improvedZiggurat","random.iterators.improvedZiggurat( [options] )"],["random.iterators.invgamma","random.iterators.invgamma( α, β[, options] )"],["random.iterators.kumaraswamy","random.iterators.kumaraswamy( a, b[, options] )"],["random.iterators.laplace","random.iterators.laplace( μ, b[, options] )"],["random.iterators.levy","random.iterators.levy( μ, c[, options] )"],["random.iterators.logistic","random.iterators.logistic( μ, s[, options] )"],["random.iterators.lognormal","random.iterators.lognormal( μ, σ[, options] )"],["random.iterators.minstd","random.iterators.minstd( [options] )"],["random.iterators.minstdShuffle","random.iterators.minstdShuffle( [options] )"],["random.iterators.mt19937","random.iterators.mt19937( [options] )"],["random.iterators.negativeBinomial","random.iterators.negativeBinomial( r, p[, options] )"],["random.iterators.normal","random.iterators.normal( μ, σ[, options] )"],["random.iterators.pareto1","random.iterators.pareto1( α, β[, options] )"],["random.iterators.poisson","random.iterators.poisson( λ[, options] )"],["random.iterators.randi","random.iterators.randi( [options] )"],["random.iterators.randn","random.iterators.randn( [options] )"],["random.iterators.randu","random.iterators.randu( [options] )"],["random.iterators.rayleigh","random.iterators.rayleigh( σ[, options] )"],["random.iterators.t","random.iterators.t( v[, options] )"],["random.iterators.triangular","random.iterators.triangular( a, b, c[, options] )"],["random.iterators.uniform","random.iterators.uniform( a, b[, options] )"],["random.iterators.weibull","random.iterators.weibull( k, λ[, options] )"],["random.streams.arcsine","random.streams.arcsine( a, b[, options] )"],["random.streams.arcsine.factory","random.streams.arcsine.factory( [a, b, ][options] )"],["random.streams.arcsine.objectMode","random.streams.arcsine.objectMode( a, b[, options] )"],["random.streams.bernoulli","random.streams.bernoulli( p[, options] )"],["random.streams.bernoulli.factory","random.streams.bernoulli.factory( [p, ][options] )"],["random.streams.bernoulli.objectMode","random.streams.bernoulli.objectMode( p[, options] )"],["random.streams.beta","random.streams.beta( α, β[, options] )"],["random.streams.beta.factory","random.streams.beta.factory( [α, β, ][options] )"],["random.streams.beta.objectMode","random.streams.beta.objectMode( α, β[, options] )"],["random.streams.betaprime","random.streams.betaprime( α, β[, options] )"],["random.streams.betaprime.factory","random.streams.betaprime.factory( [α, β, ][options] )"],["random.streams.betaprime.objectMode","random.streams.betaprime.objectMode( α, β[, options] )"],["random.streams.binomial","random.streams.binomial( n, p[, options] )"],["random.streams.binomial.factory","random.streams.binomial.factory( [n, p, ][options] )"],["random.streams.binomial.objectMode","random.streams.binomial.objectMode( n, p[, options] )"],["random.streams.boxMuller","random.streams.boxMuller( [options] )"],["random.streams.boxMuller.factory","random.streams.boxMuller.factory( [options] )"],["random.streams.boxMuller.objectMode","random.streams.boxMuller.objectMode( [options] )"],["random.streams.cauchy","random.streams.cauchy( x0, γ[, options] )"],["random.streams.cauchy.factory","random.streams.cauchy.factory( [x0, γ, ][options] )"],["random.streams.cauchy.objectMode","random.streams.cauchy.objectMode( x0, γ[, options] )"],["random.streams.chi","random.streams.chi( k[, options] )"],["random.streams.chi.factory","random.streams.chi.factory( [k, ][options] )"],["random.streams.chi.objectMode","random.streams.chi.objectMode( k[, options] )"],["random.streams.chisquare","random.streams.chisquare( k[, options] )"],["random.streams.chisquare.factory","random.streams.chisquare.factory( [k, ][options] )"],["random.streams.chisquare.objectMode","random.streams.chisquare.objectMode( k[, options] )"],["random.streams.cosine","random.streams.cosine( μ, s[, options] )"],["random.streams.cosine.factory","random.streams.cosine.factory( [μ, s, ][options] )"],["random.streams.cosine.objectMode","random.streams.cosine.objectMode( μ, s[, options] )"],["random.streams.discreteUniform","random.streams.discreteUniform( a, b[, options] )"],["random.streams.discreteUniform.factory","random.streams.discreteUniform.factory( [a, b, ][options] )"],["random.streams.discreteUniform.objectMode","random.streams.discreteUniform.objectMode( a, b[, options] )"],["random.streams.erlang","random.streams.erlang( k, λ[, options] )"],["random.streams.erlang.factory","random.streams.erlang.factory( [k, λ, ][options] )"],["random.streams.erlang.objectMode","random.streams.erlang.objectMode( k, λ[, options] )"],["random.streams.exponential","random.streams.exponential( λ[, options] )"],["random.streams.exponential.factory","random.streams.exponential.factory( [λ, ][options] )"],["random.streams.exponential.objectMode","random.streams.exponential.objectMode( λ[, options] )"],["random.streams.f","random.streams.f( d1, d2[, options] )"],["random.streams.f.factory","random.streams.f.factory( [d1, d2, ][options] )"],["random.streams.f.objectMode","random.streams.f.objectMode( d1, d2[, options] )"],["random.streams.frechet","random.streams.frechet( α, s, m[, options] )"],["random.streams.frechet.factory","random.streams.frechet.factory( [α, s, m,][options] )"],["random.streams.frechet.objectMode","random.streams.frechet.objectMode( α, s, m[, options] )"],["random.streams.gamma","random.streams.gamma( α, β[, options] )"],["random.streams.gamma.factory","random.streams.gamma.factory( [α, β, ][options] )"],["random.streams.gamma.objectMode","random.streams.gamma.objectMode( α, β[, options] )"],["random.streams.geometric","random.streams.geometric( p[, options] )"],["random.streams.geometric.factory","random.streams.geometric.factory( [p, ][options] )"],["random.streams.geometric.objectMode","random.streams.geometric.objectMode( p[, options] )"],["random.streams.gumbel","random.streams.gumbel( μ, β[, options] )"],["random.streams.gumbel.factory","random.streams.gumbel.factory( [μ, β, ][options] )"],["random.streams.gumbel.objectMode","random.streams.gumbel.objectMode( μ, β[, options] )"],["random.streams.hypergeometric","random.streams.hypergeometric( N, K, n[, options] )"],["random.streams.hypergeometric.factory","random.streams.hypergeometric.factory( [N, K, n,][options] )"],["random.streams.hypergeometric.objectMode","random.streams.hypergeometric.objectMode( N, K, n[, options] )"],["random.streams.improvedZiggurat","random.streams.improvedZiggurat( [options] )"],["random.streams.improvedZiggurat.factory","random.streams.improvedZiggurat.factory( [options] )"],["random.streams.improvedZiggurat.objectMode","random.streams.improvedZiggurat.objectMode( [options] )"],["random.streams.invgamma","random.streams.invgamma( α, β[, options] )"],["random.streams.invgamma.factory","random.streams.invgamma.factory( [α, β, ][options] )"],["random.streams.invgamma.objectMode","random.streams.invgamma.objectMode( α, β[, options] )"],["random.streams.kumaraswamy","random.streams.kumaraswamy( a, b[, options] )"],["random.streams.kumaraswamy.factory","random.streams.kumaraswamy.factory( [a, b, ][options] )"],["random.streams.kumaraswamy.objectMode","random.streams.kumaraswamy.objectMode( a, b[, options] )"],["random.streams.laplace","random.streams.laplace( μ, b[, options] )"],["random.streams.laplace.factory","random.streams.laplace.factory( [μ, b, ][options] )"],["random.streams.laplace.objectMode","random.streams.laplace.objectMode( μ, b[, options] )"],["random.streams.levy","random.streams.levy( μ, c[, options] )"],["random.streams.levy.factory","random.streams.levy.factory( [μ, c, ][options] )"],["random.streams.levy.objectMode","random.streams.levy.objectMode( μ, c[, options] )"],["random.streams.logistic","random.streams.logistic( μ, s[, options] )"],["random.streams.logistic.factory","random.streams.logistic.factory( [μ, s, ][options] )"],["random.streams.logistic.objectMode","random.streams.logistic.objectMode( μ, s[, options] )"],["random.streams.lognormal","random.streams.lognormal( μ, σ[, options] )"],["random.streams.lognormal.factory","random.streams.lognormal.factory( [μ, σ, ][options] )"],["random.streams.lognormal.objectMode","random.streams.lognormal.objectMode( μ, σ[, options] )"],["random.streams.minstd","random.streams.minstd( [options] )"],["random.streams.minstd.factory","random.streams.minstd.factory( [options] )"],["random.streams.minstd.objectMode","random.streams.minstd.objectMode( [options] )"],["random.streams.minstdShuffle","random.streams.minstdShuffle( [options] )"],["random.streams.minstdShuffle.factory","random.streams.minstdShuffle.factory( [options] )"],["random.streams.minstdShuffle.objectMode","random.streams.minstdShuffle.objectMode( [options] )"],["random.streams.mt19937","random.streams.mt19937( [options] )"],["random.streams.mt19937.factory","random.streams.mt19937.factory( [options] )"],["random.streams.mt19937.objectMode","random.streams.mt19937.objectMode( [options] )"],["random.streams.negativeBinomial","random.streams.negativeBinomial( r, p[, options] )"],["random.streams.negativeBinomial.factory","random.streams.negativeBinomial.factory( [r, p, ][options] )"],["random.streams.negativeBinomial.objectMode","random.streams.negativeBinomial.objectMode( r, p[, options] )"],["random.streams.normal","random.streams.normal( μ, σ[, options] )"],["random.streams.normal.factory","random.streams.normal.factory( [μ, σ, ][options] )"],["random.streams.normal.objectMode","random.streams.normal.objectMode( μ, σ[, options] )"],["random.streams.pareto1","random.streams.pareto1( α, β[, options] )"],["random.streams.pareto1.factory","random.streams.pareto1.factory( [α, β, ][options] )"],["random.streams.pareto1.objectMode","random.streams.pareto1.objectMode( α, β[, options] )"],["random.streams.poisson","random.streams.poisson( λ[, options] )"],["random.streams.poisson.factory","random.streams.poisson.factory( [λ, ][options] )"],["random.streams.poisson.objectMode","random.streams.poisson.objectMode( λ[, options] )"],["random.streams.randi","random.streams.randi( [options] )"],["random.streams.randi.factory","random.streams.randi.factory( [options] )"],["random.streams.randi.objectMode","random.streams.randi.objectMode( [options] )"],["random.streams.randn","random.streams.randn( [options] )"],["random.streams.randn.factory","random.streams.randn.factory( [options] )"],["random.streams.randn.objectMode","random.streams.randn.objectMode( [options] )"],["random.streams.randu","random.streams.randu( [options] )"],["random.streams.randu.factory","random.streams.randu.factory( [options] )"],["random.streams.randu.objectMode","random.streams.randu.objectMode( [options] )"],["random.streams.rayleigh","random.streams.rayleigh( σ[, options] )"],["random.streams.rayleigh.factory","random.streams.rayleigh.factory( [σ, ][options] )"],["random.streams.rayleigh.objectMode","random.streams.rayleigh.objectMode( σ[, options] )"],["random.streams.t","random.streams.t( v[, options] )"],["random.streams.t.factory","random.streams.t.factory( [v, ][options] )"],["random.streams.t.objectMode","random.streams.t.objectMode( v[, options] )"],["random.streams.triangular","random.streams.triangular( a, b, c[, options] )"],["random.streams.triangular.factory","random.streams.triangular.factory( [a, b, c, ][options] )"],["random.streams.triangular.objectMode","random.streams.triangular.objectMode( a, b, c[, options] )"],["random.streams.uniform","random.streams.uniform( a, b[, options] )"],["random.streams.uniform.factory","random.streams.uniform.factory( [a, b, ][options] )"],["random.streams.uniform.objectMode","random.streams.uniform.objectMode( a, b[, options] )"],["random.streams.weibull","random.streams.weibull( k, λ[, options] )"],["random.streams.weibull.factory","random.streams.weibull.factory( [k, λ, ][options] )"],["random.streams.weibull.objectMode","random.streams.weibull.objectMode( k, λ[, options] )"],["ranks","ranks( arr[, options] )"],["RE_BASENAME","RE_BASENAME"],["RE_BASENAME.posix","RE_BASENAME.posix"],["RE_BASENAME.win32","RE_BASENAME.win32"],["RE_BASENAME_POSIX","RE_BASENAME_POSIX"],["RE_BASENAME_WINDOWS","RE_BASENAME_WINDOWS"],["RE_COLOR_HEXADECIMAL","RE_COLOR_HEXADECIMAL"],["RE_COLOR_HEXADECIMAL.shorthand","RE_COLOR_HEXADECIMAL.shorthand"],["RE_COLOR_HEXADECIMAL.either","RE_COLOR_HEXADECIMAL.either"],["RE_DECIMAL_NUMBER","RE_DECIMAL_NUMBER"],["RE_DIRNAME","RE_DIRNAME"],["RE_DIRNAME.posix","RE_DIRNAME.posix"],["RE_DIRNAME.win32","RE_DIRNAME.win32"],["RE_DIRNAME_POSIX","RE_DIRNAME_POSIX"],["RE_DIRNAME_WINDOWS","RE_DIRNAME_WINDOWS"],["RE_EOL","RE_EOL"],["RE_EXTENDED_LENGTH_PATH","RE_EXTENDED_LENGTH_PATH"],["RE_EXTNAME","RE_EXTNAME"],["RE_EXTNAME.posix","RE_EXTNAME.posix"],["RE_EXTNAME.win32","RE_EXTNAME.win32"],["RE_EXTNAME_POSIX","RE_EXTNAME_POSIX"],["RE_EXTNAME_WINDOWS","RE_EXTNAME_WINDOWS"],["RE_FILENAME","RE_FILENAME"],["RE_FILENAME.posix","RE_FILENAME.posix"],["RE_FILENAME.win32","RE_FILENAME.win32"],["RE_FILENAME_POSIX","RE_FILENAME_POSIX"],["RE_FILENAME_WINDOWS","RE_FILENAME_WINDOWS"],["RE_FUNCTION_NAME","RE_FUNCTION_NAME"],["RE_NATIVE_FUNCTION","RE_NATIVE_FUNCTION"],["RE_REGEXP","RE_REGEXP"],["RE_UNC_PATH","RE_UNC_PATH"],["RE_UTF16_SURROGATE_PAIR","RE_UTF16_SURROGATE_PAIR"],["RE_UTF16_UNPAIRED_SURROGATE","RE_UTF16_UNPAIRED_SURROGATE"],["RE_WHITESPACE","RE_WHITESPACE"],["readDir","readDir( path, clbk )"],["readDir.sync","readDir.sync( path )"],["readFile","readFile( file[, options], clbk )"],["readFile.sync","readFile.sync( file[, options] )"],["readFileList","readFileList( filepaths[, options], clbk )"],["readFileList.sync","readFileList.sync( filepaths[, options] )"],["readJSON","readJSON( file[, options], clbk )"],["readJSON.sync","readJSON.sync( file[, options] )"],["readWASM","readWASM( file[, options], clbk )"],["readWASM.sync","readWASM.sync( file[, options] )"],["real","real( z )"],["realmax","realmax( dtype )"],["realmin","realmin( dtype )"],["reduce","reduce( collection, initial, reducer[, thisArg] )"],["reduceAsync","reduceAsync( collection, initial, [options,] reducer, done )"],["reduceAsync.factory","reduceAsync.factory( [options,] fcn )"],["reduceRight","reduceRight( collection, initial, reducer[, thisArg] )"],["reduceRightAsync","reduceRightAsync( collection, initial, [options,] reducer, done )"],["reduceRightAsync.factory","reduceRightAsync.factory( [options,] fcn )"],["reFromString","reFromString( str )"],["reim","reim( z )"],["removeFirst","removeFirst( str )"],["removeLast","removeLast( str )"],["removePunctuation","removePunctuation( str )"],["removeUTF8BOM","removeUTF8BOM( str )"],["removeWords","removeWords( str, words[, ignoreCase] )"],["rename","rename( oldPath, newPath, clbk )"],["rename.sync","rename.sync( oldPath, newPath )"],["reorderArguments","reorderArguments( fcn, indices[, thisArg] )"],["repeat","repeat( str, n )"],["replace","replace( str, search, newval )"],["rescape","rescape( str )"],["resolveParentPath","resolveParentPath( path[, options], clbk )"],["resolveParentPath.sync","resolveParentPath.sync( path[, options] )"],["reverseArguments","reverseArguments( fcn[, thisArg] )"],["reverseString","reverseString( str )"],["reviveBasePRNG","reviveBasePRNG( key, value )"],["reviveBuffer","reviveBuffer( key, value )"],["reviveComplex","reviveComplex( key, value )"],["reviveComplex64","reviveComplex64( key, value )"],["reviveComplex128","reviveComplex128( key, value )"],["reviveError","reviveError( key, value )"],["reviveTypedArray","reviveTypedArray( key, value )"],["rpad","rpad( str, len[, pad] )"],["rtrim","rtrim( str )"],["safeintmax","safeintmax( dtype )"],["safeintmin","safeintmin( dtype )"],["sample","sample( x[, options] )"],["sample.factory","sample.factory( [pool, ][options] )"],["SAVOY_STOPWORDS_FIN","SAVOY_STOPWORDS_FIN()"],["SAVOY_STOPWORDS_FR","SAVOY_STOPWORDS_FR()"],["SAVOY_STOPWORDS_GER","SAVOY_STOPWORDS_GER()"],["SAVOY_STOPWORDS_IT","SAVOY_STOPWORDS_IT()"],["SAVOY_STOPWORDS_POR","SAVOY_STOPWORDS_POR()"],["SAVOY_STOPWORDS_SP","SAVOY_STOPWORDS_SP()"],["SAVOY_STOPWORDS_SWE","SAVOY_STOPWORDS_SWE()"],["SECONDS_IN_DAY","SECONDS_IN_DAY"],["SECONDS_IN_HOUR","SECONDS_IN_HOUR"],["SECONDS_IN_MINUTE","SECONDS_IN_MINUTE"],["SECONDS_IN_WEEK","SECONDS_IN_WEEK"],["secondsInMonth","secondsInMonth( [month[, year]] )"],["secondsInYear","secondsInYear( [value] )"],["setConfigurableReadOnly","setConfigurableReadOnly( obj, prop, value )"],["setConfigurableReadOnlyAccessor","setConfigurableReadOnlyAccessor( obj, prop, getter )"],["setConfigurableReadWriteAccessor","setConfigurableReadWriteAccessor( obj, prop, getter, setter )"],["setConfigurableWriteOnlyAccessor","setConfigurableWriteOnlyAccessor( obj, prop, setter )"],["setMemoizedConfigurableReadOnly","setMemoizedConfigurableReadOnly( obj, prop, fcn )"],["setMemoizedReadOnly","setMemoizedReadOnly( obj, prop, fcn )"],["setNonEnumerableProperty","setNonEnumerableProperty( obj, prop, value )"],["setNonEnumerableReadOnly","setNonEnumerableReadOnly( obj, prop, value )"],["setNonEnumerableReadOnlyAccessor","setNonEnumerableReadOnlyAccessor( obj, prop, getter )"],["setNonEnumerableReadWriteAccessor","setNonEnumerableReadWriteAccessor( obj, prop, getter, setter )"],["setNonEnumerableWriteOnlyAccessor","setNonEnumerableWriteOnlyAccessor( obj, prop, setter )"],["setReadOnly","setReadOnly( obj, prop, value )"],["setReadOnlyAccessor","setReadOnlyAccessor( obj, prop, getter )"],["setReadWriteAccessor","setReadWriteAccessor( obj, prop, getter, setter )"],["setWriteOnlyAccessor","setWriteOnlyAccessor( obj, prop, setter )"],["SharedArrayBuffer","SharedArrayBuffer( size )"],["SharedArrayBuffer.length","SharedArrayBuffer.length"],["SharedArrayBuffer.prototype.byteLength","SharedArrayBuffer.prototype.byteLength"],["SharedArrayBuffer.prototype.slice","SharedArrayBuffer.prototype.slice( [start[, end]] )"],["shift","shift( collection )"],["shuffle","shuffle( arr[, options] )"],["shuffle.factory","shuffle.factory( [options] )"],["sizeOf","sizeOf( dtype )"],["some","some( collection, n )"],["someBy","someBy( collection, n, predicate[, thisArg ] )"],["someByAsync","someByAsync( collection, n, [options,] predicate, done )"],["someByAsync.factory","someByAsync.factory( [options,] predicate )"],["someByRight","someByRight( collection, n, predicate[, thisArg ] )"],["someByRightAsync","someByRightAsync( collection, n, [options,] predicate, done )"],["someByRightAsync.factory","someByRightAsync.factory( [options,] predicate )"],["SOTU","SOTU( [options] )"],["SPACHE_REVISED","SPACHE_REVISED()"],["SPAM_ASSASSIN","SPAM_ASSASSIN()"],["SparklineBase","SparklineBase( [data,] [options] )"],["sparsearray2iterator","sparsearray2iterator( src[, mapFcn[, thisArg]] )"],["sparsearray2iteratorRight","sparsearray2iteratorRight( src[, mapFcn[, thisArg]] )"],["splitStream","splitStream( [options] )"],["splitStream.factory","splitStream.factory( [options] )"],["splitStream.objectMode","splitStream.objectMode( [options] )"],["SQRT_EPS","SQRT_EPS"],["SQRT_HALF","SQRT_HALF"],["SQRT_HALF_PI","SQRT_HALF_PI"],["SQRT_PHI","SQRT_PHI"],["SQRT_PI","SQRT_PI"],["SQRT_THREE","SQRT_THREE"],["SQRT_TWO","SQRT_TWO"],["SQRT_TWO_PI","SQRT_TWO_PI"],["Stack","Stack()"],["startcase","startcase( str )"],["startsWith","startsWith( str, search[, position] )"],["STOPWORDS_EN","STOPWORDS_EN()"],["stridedarray2iterator","stridedarray2iterator( N, src, stride, offset[, mapFcn[, thisArg]] )"],["stridedArrayStream","stridedArrayStream( N, buffer, stride, offset[, options] )"],["stridedArrayStream.factory","stridedArrayStream.factory( [options] )"],["stridedArrayStream.objectMode","stridedArrayStream.objectMode( N, buffer, stride, offset[, options] )"],["string2buffer","string2buffer( str[, encoding] )"],["sub2ind","sub2ind( shape, ...subscript[, options] )"],["SUTHAHARAN_MULTI_HOP_SENSOR_NETWORK","SUTHAHARAN_MULTI_HOP_SENSOR_NETWORK()"],["SUTHAHARAN_SINGLE_HOP_SENSOR_NETWORK","SUTHAHARAN_SINGLE_HOP_SENSOR_NETWORK()"],["Symbol","Symbol( [description] )"],["tabulate","tabulate( collection )"],["tabulateBy","tabulateBy( collection, [options,] indicator )"],["tabulateByAsync","tabulateByAsync( collection, [options,] indicator, done )"],["tabulateByAsync.factory","tabulateByAsync.factory( [options,] indicator )"],["tic","tic()"],["timeit","timeit( code, [options,] clbk )"],["tmpdir","tmpdir()"],["toc","toc( time )"],["tokenize","tokenize( str[, keepWhitespace] )"],["transformStream","transformStream( [options] )"],["transformStream.factory","transformStream.factory( [options] )"],["transformStream.objectMode","transformStream.objectMode( [options] )"],["transformStream.ctor","transformStream.ctor( [options] )"],["trim","trim( str )"],["trycatch","trycatch( x, y )"],["trycatchAsync","trycatchAsync( x, y, done )"],["tryFunction","tryFunction( fcn[, thisArg] )"],["tryRequire","tryRequire( id )"],["trythen","trythen( x, y )"],["trythenAsync","trythenAsync( x, y, done )"],["ttest","ttest( x[, y][, options] )"],["ttest2","ttest2( x, y[, options] )"],["TWO_PI","TWO_PI"],["typedarray","typedarray( [dtype] )"],["typedarray","typedarray( length[, dtype] )"],["typedarray","typedarray( typedarray[, dtype] )"],["typedarray","typedarray( obj[, dtype] )"],["typedarray","typedarray( buffer[, byteOffset[, length]][, dtype] )"],["typedarray2json","typedarray2json( arr )"],["typedarrayComplexCtors","typedarrayComplexCtors( dtype )"],["typedarrayComplexDataTypes","typedarrayComplexDataTypes()"],["typedarrayCtors","typedarrayCtors( dtype )"],["typedarrayDataTypes","typedarrayDataTypes()"],["typedarraypool","typedarraypool( [dtype] )"],["typedarraypool","typedarraypool( length[, dtype] )"],["typedarraypool","typedarraypool( typedarray[, dtype] )"],["typedarraypool","typedarraypool( obj[, dtype] )"],["typedarraypool.malloc","typedarraypool.malloc( [dtype] )"],["typedarraypool.malloc","typedarraypool.malloc( length[, dtype] )"],["typedarraypool.malloc","typedarraypool.malloc( typedarray[, dtype] )"],["typedarraypool.malloc","typedarraypool.malloc( obj[, dtype] )"],["typedarraypool.calloc","typedarraypool.calloc( [dtype] )"],["typedarraypool.calloc","typedarraypool.calloc( length[, dtype] )"],["typedarraypool.free","typedarraypool.free( buf )"],["typedarraypool.clear","typedarraypool.clear()"],["typedarraypool.highWaterMark","typedarraypool.highWaterMark"],["typedarraypool.nbytes","typedarraypool.nbytes"],["typedarraypool.factory","typedarraypool.factory( [options] )"],["typemax","typemax( dtype )"],["typemin","typemin( dtype )"],["typeOf","typeOf( value )"],["UINT8_MAX","UINT8_MAX"],["UINT8_NUM_BYTES","UINT8_NUM_BYTES"],["Uint8Array","Uint8Array()"],["Uint8Array","Uint8Array( length )"],["Uint8Array","Uint8Array( typedarray )"],["Uint8Array","Uint8Array( obj )"],["Uint8Array","Uint8Array( buffer[, byteOffset[, length]] )"],["Uint8Array.from","Uint8Array.from( src[, map[, thisArg]] )"],["Uint8Array.of","Uint8Array.of( element0[, element1[, ...elementN]] )"],["Uint8Array.BYTES_PER_ELEMENT","Uint8Array.BYTES_PER_ELEMENT"],["Uint8Array.name","Uint8Array.name"],["Uint8Array.prototype.buffer","Uint8Array.prototype.buffer"],["Uint8Array.prototype.byteLength","Uint8Array.prototype.byteLength"],["Uint8Array.prototype.byteOffset","Uint8Array.prototype.byteOffset"],["Uint8Array.prototype.BYTES_PER_ELEMENT","Uint8Array.prototype.BYTES_PER_ELEMENT"],["Uint8Array.prototype.length","Uint8Array.prototype.length"],["Uint8Array.prototype.copyWithin","Uint8Array.prototype.copyWithin( target, start[, end] )"],["Uint8Array.prototype.entries","Uint8Array.prototype.entries()"],["Uint8Array.prototype.every","Uint8Array.prototype.every( predicate[, thisArg] )"],["Uint8Array.prototype.fill","Uint8Array.prototype.fill( value[, start[, end]] )"],["Uint8Array.prototype.filter","Uint8Array.prototype.filter( predicate[, thisArg] )"],["Uint8Array.prototype.find","Uint8Array.prototype.find( predicate[, thisArg] )"],["Uint8Array.prototype.findIndex","Uint8Array.prototype.findIndex( predicate[, thisArg] )"],["Uint8Array.prototype.forEach","Uint8Array.prototype.forEach( fcn[, thisArg] )"],["Uint8Array.prototype.includes","Uint8Array.prototype.includes( searchElement[, fromIndex] )"],["Uint8Array.prototype.indexOf","Uint8Array.prototype.indexOf( searchElement[, fromIndex] )"],["Uint8Array.prototype.join","Uint8Array.prototype.join( [separator] )"],["Uint8Array.prototype.keys","Uint8Array.prototype.keys()"],["Uint8Array.prototype.lastIndexOf","Uint8Array.prototype.lastIndexOf( searchElement[, fromIndex] )"],["Uint8Array.prototype.map","Uint8Array.prototype.map( fcn[, thisArg] )"],["Uint8Array.prototype.reduce","Uint8Array.prototype.reduce( fcn[, initialValue] )"],["Uint8Array.prototype.reduceRight","Uint8Array.prototype.reduceRight( fcn[, initialValue] )"],["Uint8Array.prototype.reverse","Uint8Array.prototype.reverse()"],["Uint8Array.prototype.set","Uint8Array.prototype.set( arr[, offset] )"],["Uint8Array.prototype.slice","Uint8Array.prototype.slice( [begin[, end]] )"],["Uint8Array.prototype.some","Uint8Array.prototype.some( predicate[, thisArg] )"],["Uint8Array.prototype.sort","Uint8Array.prototype.sort( [compareFunction] )"],["Uint8Array.prototype.subarray","Uint8Array.prototype.subarray( [begin[, end]] )"],["Uint8Array.prototype.toLocaleString","Uint8Array.prototype.toLocaleString( [locales[, options]] )"],["Uint8Array.prototype.toString","Uint8Array.prototype.toString()"],["Uint8Array.prototype.values","Uint8Array.prototype.values()"],["Uint8ClampedArray","Uint8ClampedArray()"],["Uint8ClampedArray","Uint8ClampedArray( length )"],["Uint8ClampedArray","Uint8ClampedArray( typedarray )"],["Uint8ClampedArray","Uint8ClampedArray( obj )"],["Uint8ClampedArray","Uint8ClampedArray( buffer[, byteOffset[, length]] )"],["Uint8ClampedArray.from","Uint8ClampedArray.from( src[, map[, thisArg]] )"],["Uint8ClampedArray.of","Uint8ClampedArray.of( element0[, element1[, ...elementN]] )"],["Uint8ClampedArray.BYTES_PER_ELEMENT","Uint8ClampedArray.BYTES_PER_ELEMENT"],["Uint8ClampedArray.name","Uint8ClampedArray.name"],["Uint8ClampedArray.prototype.buffer","Uint8ClampedArray.prototype.buffer"],["Uint8ClampedArray.prototype.byteLength","Uint8ClampedArray.prototype.byteLength"],["Uint8ClampedArray.prototype.byteOffset","Uint8ClampedArray.prototype.byteOffset"],["Uint8ClampedArray.prototype.BYTES_PER_ELEMENT","Uint8ClampedArray.prototype.BYTES_PER_ELEMENT"],["Uint8ClampedArray.prototype.length","Uint8ClampedArray.prototype.length"],["Uint8ClampedArray.prototype.copyWithin","Uint8ClampedArray.prototype.copyWithin( target, start[, end] )"],["Uint8ClampedArray.prototype.entries","Uint8ClampedArray.prototype.entries()"],["Uint8ClampedArray.prototype.every","Uint8ClampedArray.prototype.every( predicate[, thisArg] )"],["Uint8ClampedArray.prototype.fill","Uint8ClampedArray.prototype.fill( value[, start[, end]] )"],["Uint8ClampedArray.prototype.filter","Uint8ClampedArray.prototype.filter( predicate[, thisArg] )"],["Uint8ClampedArray.prototype.find","Uint8ClampedArray.prototype.find( predicate[, thisArg] )"],["Uint8ClampedArray.prototype.findIndex","Uint8ClampedArray.prototype.findIndex( predicate[, thisArg] )"],["Uint8ClampedArray.prototype.forEach","Uint8ClampedArray.prototype.forEach( fcn[, thisArg] )"],["Uint8ClampedArray.prototype.includes","Uint8ClampedArray.prototype.includes( searchElement[, fromIndex] )"],["Uint8ClampedArray.prototype.indexOf","Uint8ClampedArray.prototype.indexOf( searchElement[, fromIndex] )"],["Uint8ClampedArray.prototype.join","Uint8ClampedArray.prototype.join( [separator] )"],["Uint8ClampedArray.prototype.keys","Uint8ClampedArray.prototype.keys()"],["Uint8ClampedArray.prototype.lastIndexOf","Uint8ClampedArray.prototype.lastIndexOf( searchElement[, fromIndex] )"],["Uint8ClampedArray.prototype.map","Uint8ClampedArray.prototype.map( fcn[, thisArg] )"],["Uint8ClampedArray.prototype.reduce","Uint8ClampedArray.prototype.reduce( fcn[, initialValue] )"],["Uint8ClampedArray.prototype.reduceRight","Uint8ClampedArray.prototype.reduceRight( fcn[, initialValue] )"],["Uint8ClampedArray.prototype.reverse","Uint8ClampedArray.prototype.reverse()"],["Uint8ClampedArray.prototype.set","Uint8ClampedArray.prototype.set( arr[, offset] )"],["Uint8ClampedArray.prototype.slice","Uint8ClampedArray.prototype.slice( [begin[, end]] )"],["Uint8ClampedArray.prototype.some","Uint8ClampedArray.prototype.some( predicate[, thisArg] )"],["Uint8ClampedArray.prototype.sort","Uint8ClampedArray.prototype.sort( [compareFunction] )"],["Uint8ClampedArray.prototype.subarray","Uint8ClampedArray.prototype.subarray( [begin[, end]] )"],["Uint8ClampedArray.prototype.toLocaleString","Uint8ClampedArray.prototype.toLocaleString( [locales[, options]] )"],["Uint8ClampedArray.prototype.toString","Uint8ClampedArray.prototype.toString()"],["Uint8ClampedArray.prototype.values","Uint8ClampedArray.prototype.values()"],["UINT16_MAX","UINT16_MAX"],["UINT16_NUM_BYTES","UINT16_NUM_BYTES"],["Uint16Array","Uint16Array()"],["Uint16Array","Uint16Array( length )"],["Uint16Array","Uint16Array( typedarray )"],["Uint16Array","Uint16Array( obj )"],["Uint16Array","Uint16Array( buffer[, byteOffset[, length]] )"],["Uint16Array.from","Uint16Array.from( src[, map[, thisArg]] )"],["Uint16Array.of","Uint16Array.of( element0[, element1[, ...elementN]] )"],["Uint16Array.BYTES_PER_ELEMENT","Uint16Array.BYTES_PER_ELEMENT"],["Uint16Array.name","Uint16Array.name"],["Uint16Array.prototype.buffer","Uint16Array.prototype.buffer"],["Uint16Array.prototype.byteLength","Uint16Array.prototype.byteLength"],["Uint16Array.prototype.byteOffset","Uint16Array.prototype.byteOffset"],["Uint16Array.prototype.BYTES_PER_ELEMENT","Uint16Array.prototype.BYTES_PER_ELEMENT"],["Uint16Array.prototype.length","Uint16Array.prototype.length"],["Uint16Array.prototype.copyWithin","Uint16Array.prototype.copyWithin( target, start[, end] )"],["Uint16Array.prototype.entries","Uint16Array.prototype.entries()"],["Uint16Array.prototype.every","Uint16Array.prototype.every( predicate[, thisArg] )"],["Uint16Array.prototype.fill","Uint16Array.prototype.fill( value[, start[, end]] )"],["Uint16Array.prototype.filter","Uint16Array.prototype.filter( predicate[, thisArg] )"],["Uint16Array.prototype.find","Uint16Array.prototype.find( predicate[, thisArg] )"],["Uint16Array.prototype.findIndex","Uint16Array.prototype.findIndex( predicate[, thisArg] )"],["Uint16Array.prototype.forEach","Uint16Array.prototype.forEach( fcn[, thisArg] )"],["Uint16Array.prototype.includes","Uint16Array.prototype.includes( searchElement[, fromIndex] )"],["Uint16Array.prototype.indexOf","Uint16Array.prototype.indexOf( searchElement[, fromIndex] )"],["Uint16Array.prototype.join","Uint16Array.prototype.join( [separator] )"],["Uint16Array.prototype.keys","Uint16Array.prototype.keys()"],["Uint16Array.prototype.lastIndexOf","Uint16Array.prototype.lastIndexOf( searchElement[, fromIndex] )"],["Uint16Array.prototype.map","Uint16Array.prototype.map( fcn[, thisArg] )"],["Uint16Array.prototype.reduce","Uint16Array.prototype.reduce( fcn[, initialValue] )"],["Uint16Array.prototype.reduceRight","Uint16Array.prototype.reduceRight( fcn[, initialValue] )"],["Uint16Array.prototype.reverse","Uint16Array.prototype.reverse()"],["Uint16Array.prototype.set","Uint16Array.prototype.set( arr[, offset] )"],["Uint16Array.prototype.slice","Uint16Array.prototype.slice( [begin[, end]] )"],["Uint16Array.prototype.some","Uint16Array.prototype.some( predicate[, thisArg] )"],["Uint16Array.prototype.sort","Uint16Array.prototype.sort( [compareFunction] )"],["Uint16Array.prototype.subarray","Uint16Array.prototype.subarray( [begin[, end]] )"],["Uint16Array.prototype.toLocaleString","Uint16Array.prototype.toLocaleString( [locales[, options]] )"],["Uint16Array.prototype.toString","Uint16Array.prototype.toString()"],["Uint16Array.prototype.values","Uint16Array.prototype.values()"],["UINT32_MAX","UINT32_MAX"],["UINT32_NUM_BYTES","UINT32_NUM_BYTES"],["Uint32Array","Uint32Array()"],["Uint32Array","Uint32Array( length )"],["Uint32Array","Uint32Array( typedarray )"],["Uint32Array","Uint32Array( obj )"],["Uint32Array","Uint32Array( buffer[, byteOffset[, length]] )"],["Uint32Array.from","Uint32Array.from( src[, map[, thisArg]] )"],["Uint32Array.of","Uint32Array.of( element0[, element1[, ...elementN]] )"],["Uint32Array.BYTES_PER_ELEMENT","Uint32Array.BYTES_PER_ELEMENT"],["Uint32Array.name","Uint32Array.name"],["Uint32Array.prototype.buffer","Uint32Array.prototype.buffer"],["Uint32Array.prototype.byteLength","Uint32Array.prototype.byteLength"],["Uint32Array.prototype.byteOffset","Uint32Array.prototype.byteOffset"],["Uint32Array.prototype.BYTES_PER_ELEMENT","Uint32Array.prototype.BYTES_PER_ELEMENT"],["Uint32Array.prototype.length","Uint32Array.prototype.length"],["Uint32Array.prototype.copyWithin","Uint32Array.prototype.copyWithin( target, start[, end] )"],["Uint32Array.prototype.entries","Uint32Array.prototype.entries()"],["Uint32Array.prototype.every","Uint32Array.prototype.every( predicate[, thisArg] )"],["Uint32Array.prototype.fill","Uint32Array.prototype.fill( value[, start[, end]] )"],["Uint32Array.prototype.filter","Uint32Array.prototype.filter( predicate[, thisArg] )"],["Uint32Array.prototype.find","Uint32Array.prototype.find( predicate[, thisArg] )"],["Uint32Array.prototype.findIndex","Uint32Array.prototype.findIndex( predicate[, thisArg] )"],["Uint32Array.prototype.forEach","Uint32Array.prototype.forEach( fcn[, thisArg] )"],["Uint32Array.prototype.includes","Uint32Array.prototype.includes( searchElement[, fromIndex] )"],["Uint32Array.prototype.indexOf","Uint32Array.prototype.indexOf( searchElement[, fromIndex] )"],["Uint32Array.prototype.join","Uint32Array.prototype.join( [separator] )"],["Uint32Array.prototype.keys","Uint32Array.prototype.keys()"],["Uint32Array.prototype.lastIndexOf","Uint32Array.prototype.lastIndexOf( searchElement[, fromIndex] )"],["Uint32Array.prototype.map","Uint32Array.prototype.map( fcn[, thisArg] )"],["Uint32Array.prototype.reduce","Uint32Array.prototype.reduce( fcn[, initialValue] )"],["Uint32Array.prototype.reduceRight","Uint32Array.prototype.reduceRight( fcn[, initialValue] )"],["Uint32Array.prototype.reverse","Uint32Array.prototype.reverse()"],["Uint32Array.prototype.set","Uint32Array.prototype.set( arr[, offset] )"],["Uint32Array.prototype.slice","Uint32Array.prototype.slice( [begin[, end]] )"],["Uint32Array.prototype.some","Uint32Array.prototype.some( predicate[, thisArg] )"],["Uint32Array.prototype.sort","Uint32Array.prototype.sort( [compareFunction] )"],["Uint32Array.prototype.subarray","Uint32Array.prototype.subarray( [begin[, end]] )"],["Uint32Array.prototype.toLocaleString","Uint32Array.prototype.toLocaleString( [locales[, options]] )"],["Uint32Array.prototype.toString","Uint32Array.prototype.toString()"],["Uint32Array.prototype.values","Uint32Array.prototype.values()"],["umask","umask( [mask,] [options] )"],["uncapitalize","uncapitalize( str )"],["uncapitalizeKeys","uncapitalizeKeys( obj )"],["uncurry","uncurry( fcn[, arity, ][thisArg] )"],["uncurryRight","uncurryRight( fcn[, arity, ][thisArg] )"],["UNICODE_MAX","UNICODE_MAX"],["UNICODE_MAX_BMP","UNICODE_MAX_BMP"],["UnicodeColumnChartSparkline","UnicodeColumnChartSparkline( [data,] [options] )"],["UnicodeLineChartSparkline","UnicodeLineChartSparkline( [data,] [options] )"],["UnicodeSparkline","UnicodeSparkline( [data,] [options] )"],["UnicodeTristateChartSparkline","UnicodeTristateChartSparkline( [data,] [options] )"],["UnicodeUpDownChartSparkline","UnicodeUpDownChartSparkline( [data,] [options] )"],["UnicodeWinLossChartSparkline","UnicodeWinLossChartSparkline( [data,] [options] )"],["unlink","unlink( path, clbk )"],["unlink.sync","unlink.sync( path )"],["unshift","unshift( collection, ...items )"],["until","until( predicate, fcn[, thisArg] )"],["untilAsync","untilAsync( predicate, fcn, done[, thisArg] )"],["untilEach","untilEach( collection, predicate, fcn[, thisArg] )"],["untilEachRight","untilEachRight( collection, predicate, fcn[, thisArg] )"],["unzip","unzip( arr[, idx] )"],["uppercase","uppercase( str )"],["uppercaseKeys","uppercaseKeys( obj )"],["US_STATES_ABBR","US_STATES_ABBR()"],["US_STATES_CAPITALS","US_STATES_CAPITALS()"],["US_STATES_CAPITALS_NAMES","US_STATES_CAPITALS_NAMES()"],["US_STATES_NAMES","US_STATES_NAMES()"],["US_STATES_NAMES_CAPITALS","US_STATES_NAMES_CAPITALS()"],["utf16ToUTF8Array","utf16ToUTF8Array( str )"],["vartest","vartest( x, y[, options] )"],["waterfall","waterfall( fcns, clbk[, thisArg] )"],["waterfall.factory","waterfall.factory( fcns, clbk[, thisArg] )"],["whileAsync","whileAsync( predicate, fcn, done[, thisArg] )"],["whileEach","whileEach( collection, predicate, fcn[, thisArg] )"],["whileEachRight","whileEachRight( collection, predicate, fcn[, thisArg] )"],["whilst","whilst( predicate, fcn[, thisArg] )"],["writableProperties","writableProperties( value )"],["writablePropertiesIn","writablePropertiesIn( value )"],["writablePropertyNames","writablePropertyNames( value )"],["writablePropertyNamesIn","writablePropertyNamesIn( value )"],["writablePropertySymbols","writablePropertySymbols( value )"],["writablePropertySymbolsIn","writablePropertySymbolsIn( value )"],["writeFile","writeFile( file, data[, options], clbk )"],["writeFile.sync","writeFile.sync( file, data[, options] )"],["zip","zip( ...arr[, options] )"],["ztest","ztest( x, sigma[, options] )"],["ztest2","ztest2( x, y, sigmax, sigmay[, options] )"]]