AFINN_96,"var list = AFINN_96()\n"
AFINN_111,"var list = AFINN_111()\n"
alias2pkg,"var v = alias2pkg( 'base.sin' )\n"
alias2related,"var v = alias2related( 'base.sin' )\n"
aliases,"var o = aliases()\no = aliases( '@stdlib/math/base/special' )\n"
allocUnsafe,"var buf = allocUnsafe( 100 )\n"
anova1,"var x = [1, 3, 5, 2, 4, 6, 8, 7, 10, 11, 12, 15];\nvar f = [\n 'control', 'treatA', 'treatB', 'treatC', 'control',\n 'treatA', 'treatB', 'treatC', 'control', 'treatA', 'treatB', 'treatC'\n ];\nvar out = anova1( x, f )\n"
ANSCOMBES_QUARTET,"var d = ANSCOMBES_QUARTET()\n"
any,"var arr = [ 0, 0, 0, 0, 1 ];\nvar bool = any( arr )\n"
anyBy,"function negative( v ) { return ( v < 0 ); };\nvar arr = [ 1, 2, 3, 4, -1 ];\nvar bool = anyBy( arr, negative )\n"
anyByAsync,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 3000, 2500, 1000 ];\nanyByAsync( arr, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 3000, 2500, 1000 ];\nanyByAsync( arr, opts, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'series': true };\nvar arr = [ 3000, 2500, 1000 ];\nanyByAsync( arr, opts, predicate, done )\n"
anyByAsync.factory,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nvar opts = { 'series': true };\nvar f = anyByAsync.factory( opts, predicate );\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 3000, 2500, 1000 ];\nf( arr, done )\narr = [ 2000, 1500, 1000 ];\nf( arr, done )\n"
anyByRight,"function negative( v ) { return ( v < 0 ); };\nvar arr = [ -1, 1, 2, 3, 4 ];\nvar bool = anyByRight( arr, negative )\n"
anyByRightAsync,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 1000, 2500, 3000 ];\nanyByRightAsync( arr, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 1000, 2500, 3000 ];\nanyByRightAsync( arr, opts, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'series': true };\nvar arr = [ 1000, 2500, 3000 ];\nanyByRightAsync( arr, opts, predicate, done )\n"
anyByRightAsync.factory,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nvar opts = { 'series': true };\nvar f = anyByRightAsync.factory( opts, predicate );\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 1000, 2500, 3000 ];\nf( arr, done )\narr = [ 1000, 1500, 2000 ];\nf( arr, done )\n"
APERY,"APERY\n"
append,"var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\narr = append( arr, [ 6.0, 7.0 ] )\narr = new Float64Array( [ 1.0, 2.0 ] );\narr = append( arr, [ 3.0, 4.0 ] )\narr = { 'length': 0 };\narr = append( arr, [ 1.0, 2.0 ] )\n"
ARCH,"ARCH\n"
argumentFunction,"var argn = argumentFunction( 1 );\nvar v = argn( 3.14, -3.14, 0.0 )\nv = argn( -1.0, -0.0, 1.0 )\nv = argn( 'beep', 'boop', 'bop' )\nv = argn( 'beep' )\n"
ARGV,"var execPath = ARGV[ 0 ]\n"
array,"var arr = array( [ [ 1.0, 2.0 ], [ 3.0, 4.0 ] ] )\nvar v = arr.get( 1, 1 )\nv = arr.iget( 3 )\narr.set( 1, 1, 40.0 );\narr.get( 1, 1 )\narr.iset( 3, 99.0 );\narr.get( 1, 1 )\n"
array2buffer,"var buf = array2buffer( [ 1, 2, 3, 4 ] )\n"
array2iterator,"var it = array2iterator( [ 1, 2, 3, 4 ] );\nvar v = it.next().value\nv = it.next().value\n"
array2iteratorRight,"var it = array2iteratorRight( [ 1, 2, 3, 4 ] );\nvar v = it.next().value\nv = it.next().value\n"
ArrayBuffer,"var buf = new ArrayBuffer( 5 )\n"
ArrayBuffer.length,"ArrayBuffer.length\n"
ArrayBuffer.isView,"var arr = new Float64Array( 10 );\nArrayBuffer.isView( arr )\n"
ArrayBuffer.prototype.byteLength,"var buf = new ArrayBuffer( 5 );\nbuf.byteLength\n"
ArrayBuffer.prototype.slice,"var b1 = new ArrayBuffer( 10 );\nvar b2 = b1.slice( 2, 6 );\nvar bool = ( b1 === b2 )\nb2.byteLength\n"
arraybuffer2buffer,"var ab = new ArrayBuffer( 10 )\nvar buf = arraybuffer2buffer( ab )\nvar len = buf.length\nbuf = arraybuffer2buffer( ab, 2, 6 )\nlen = buf.length\n"
arrayCtors,"var ctor = arrayCtors( 'float64' )\nctor = arrayCtors( 'float' )\n"
arrayDataType,"var arr = new Float64Array( 10 );\nvar dt = arrayDataType( arr )\ndt = arrayDataType( 'beep' )\n"
arrayDataTypes,"var out = arrayDataTypes()\n"
arrayMinDataType,"var dt = arrayMinDataType( 3.141592653589793 )\ndt = arrayMinDataType( 3 )\ndt = arrayMinDataType( -3 )\ndt = arrayMinDataType( '-3' )\n"
arrayNextDataType,"var out = arrayNextDataType( 'float32' )\n"
arrayPromotionRules,"var out = arrayPromotionRules( 'float32', 'int32' )\n"
arraySafeCasts,"var out = arraySafeCasts( 'float32' )\n"
arraySameKindCasts,"var out = arraySameKindCasts( 'float32' )\n"
arrayShape,"var out = arrayShape( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ] )\n"
arrayStream,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar s = arrayStream( [ 1, 2, 3 ] );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
arrayStream.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = arrayStream.factory( opts );\n"
arrayStream.objectMode,"function fcn( v ) { console.log( v ); };\nvar s = arrayStream.objectMode( [ 1, 2, 3 ] );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
arrayview2iterator,"var it = arrayview2iterator( [ 1, 2, 3, 4 ], 1, 3 );\nvar v = it.next().value\nv = it.next().value\n"
arrayview2iteratorRight,"var it = arrayview2iteratorRight( [ 1, 2, 3, 4 ], 1, 3 );\nvar v = it.next().value\nv = it.next().value\n"
AsyncIteratorSymbol,"var s = AsyncIteratorSymbol\n"
bartlettTest,"var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\nvar y = [ 3.8, 2.7, 4.0, 2.4 ];\nvar z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\nvar out = bartlettTest( x, y, z )\nvar arr = [ 2.9, 3.0, 2.5, 2.6, 3.2,\n 3.8, 2.7, 4.0, 2.4,\n 2.8, 3.4, 3.7, 2.2, 2.0\n ];\nvar groups = [\n 'a', 'a', 'a', 'a', 'a',\n 'b', 'b', 'b', 'b',\n 'c', 'c', 'c', 'c', 'c'\n ];\nout = bartlettTest( arr, { 'groups': groups })\n"
base.abs,"var y = base.abs( -1.0 )\ny = base.abs( 2.0 )\ny = base.abs( 0.0 )\ny = base.abs( -0.0 )\ny = base.abs( NaN )\n"
base.abs2,"var y = base.abs2( -1.0 )\ny = base.abs2( 2.0 )\ny = base.abs2( 0.0 )\ny = base.abs2( -0.0 )\ny = base.abs2( NaN )\n"
base.absdiff,"var d = base.absdiff( 2.0, 5.0 )\nd = base.absdiff( -1.0, 3.14 )\nd = base.absdiff( 10.1, -2.05 )\nd = base.absdiff( -0.0, 0.0 )\nd = base.absdiff( NaN, 5.0 )\nd = base.absdiff( PINF, NINF )\nd = base.absdiff( PINF, PINF )\n"
base.absInt32,"var v = base.absInt32( -1|0 )\nv = base.absInt32( 2|0 )\nv = base.absInt32( 0|0 )\n"
base.acos,"var y = base.acos( 1.0 )\ny = base.acos( 0.707 )\ny = base.acos( NaN )\n"
base.acosh,"var y = base.acosh( 1.0 )\ny = base.acosh( 2.0 )\ny = base.acosh( NaN )\n"
base.acoth,"var y = base.acoth( 2.0 )\ny = base.acoth( 0.0 )\ny = base.acoth( 0.5 )\ny = base.acoth( 1.0 )\ny = base.acoth( NaN )\n"
base.acovercos,"var y = base.acovercos( -1.5 )\ny = base.acovercos( -0.0 )\n"
base.acoversin,"var y = base.acoversin( 1.5 )\ny = base.acoversin( 0.0 )\n"
base.ahavercos,"var y = base.ahavercos( 0.5 )\ny = base.ahavercos( 0.0 )\n"
base.ahaversin,"var y = base.ahaversin( 0.5 )\ny = base.ahaversin( 0.0 )\n"
base.asin,"var y = base.asin( 0.0 )\ny = base.asin( PI/2.0 )\ny = base.asin( -PI/6.0 )\ny = base.asin( NaN )\n"
base.asinh,"var y = base.asinh( 0.0 )\ny = base.asinh( 2.0 )\ny = base.asinh( -2.0 )\ny = base.asinh( NaN )\ny = base.asinh( NINF )\ny = base.asinh( PINF )\n"
base.atan,"var y = base.atan( 0.0 )\ny = base.atan( -PI/2.0 )\ny = base.atan( PI/2.0 )\ny = base.atan( NaN )\n"
base.atan2,"var v = base.atan2( 2.0, 2.0 )\nv = base.atan2( 6.0, 2.0 )\nv = base.atan2( -1.0, -1.0 )\nv = base.atan2( 3.0, 0.0 )\nv = base.atan2( -2.0, 0.0 )\nv = base.atan2( 0.0, 0.0 )\nv = base.atan2( 3.0, NaN )\nv = base.atan2( NaN, 2.0 )\n"
base.atanh,"var y = base.atanh( 0.0 )\ny = base.atanh( 0.9 )\ny = base.atanh( 1.0 )\ny = base.atanh( -1.0 )\ny = base.atanh( NaN )\n"
base.avercos,"var y = base.avercos( -1.5 )\ny = base.avercos( -0.0 )\n"
base.aversin,"var y = base.aversin( 1.5 )\ny = base.aversin( 0.0 )\n"
base.bernoulli,"var y = base.bernoulli( 0 )\ny = base.bernoulli( 1 )\ny = base.bernoulli( 2 )\ny = base.bernoulli( 3 )\ny = base.bernoulli( 4 )\ny = base.bernoulli( 5 )\ny = base.bernoulli( 20 )\ny = base.bernoulli( 260 )\ny = base.bernoulli( 262 )\ny = base.bernoulli( NaN )\n"
base.besselj0,"var y = base.besselj0( 0.0 )\ny = base.besselj0( 1.0 )\ny = base.besselj0( PINF )\ny = base.besselj0( NINF )\ny = base.besselj0( NaN )\n"
base.besselj1,"var y = base.besselj1( 0.0 )\ny = base.besselj1( 1.0 )\ny = base.besselj1( PINF )\ny = base.besselj1( NINF )\ny = base.besselj1( NaN )\n"
base.bessely0,"var y = base.bessely0( 0.0 )\ny = base.bessely0( 1.0 )\ny = base.bessely0( -1.0 )\ny = base.bessely0( PINF )\ny = base.bessely0( NINF )\ny = base.bessely0( NaN )\n"
base.bessely1,"var y = base.bessely1( 0.0 )\ny = base.bessely1( 1.0 )\ny = base.bessely1( -1.0 )\ny = base.bessely1( PINF )\ny = base.bessely1( NINF )\ny = base.bessely1( NaN )\n"
base.beta,"var v = base.beta( 0.0, 0.5 )\nv = base.beta( 1.0, 1.0 )\nv = base.beta( -1.0, 2.0 )\nv = base.beta( 5.0, 0.2 )\nv = base.beta( 4.0, 1.0 )\nv = base.beta( NaN, 2.0 )\n"
base.betainc,"var y = base.betainc( 0.5, 2.0, 2.0 )\ny = base.betainc( 0.5, 2.0, 2.0, false )\ny = base.betainc( 0.2, 1.0, 2.0 )\ny = base.betainc( 0.2, 1.0, 2.0, true, true )\ny = base.betainc( NaN, 1.0, 1.0 )\ny = base.betainc( 0.8, NaN, 1.0 )\ny = base.betainc( 0.8, 1.0, NaN )\ny = base.betainc( 1.5, 1.0, 1.0 )\ny = base.betainc( -0.5, 1.0, 1.0 )\ny = base.betainc( 0.5, -2.0, 2.0 )\ny = base.betainc( 0.5, 2.0, -2.0 )\n"
base.betaincinv,"var y = base.betaincinv( 0.2, 3.0, 3.0 )\ny = base.betaincinv( 0.4, 3.0, 3.0 )\ny = base.betaincinv( 0.4, 3.0, 3.0, true )\ny = base.betaincinv( 0.4, 1.0, 6.0 )\ny = base.betaincinv( 0.8, 1.0, 6.0 )\ny = base.betaincinv( NaN, 1.0, 1.0 )\ny = base.betaincinv( 0.5, NaN, 1.0 )\ny = base.betaincinv( 0.5, 1.0, NaN )\ny = base.betaincinv( 1.2, 1.0, 1.0 )\ny = base.betaincinv( -0.5, 1.0, 1.0 )\ny = base.betaincinv( 0.5, -2.0, 2.0 )\ny = base.betaincinv( 0.5, 0.0, 2.0 )\ny = base.betaincinv( 0.5, 2.0, -2.0 )\ny = base.betaincinv( 0.5, 2.0, 0.0 )\n"
base.betaln,"var v = base.betaln( 0.0, 0.0 )\nv = base.betaln( 1.0, 1.0 )\nv = base.betaln( -1.0, 2.0 )\nv = base.betaln( 5.0, 0.2 )\nv = base.betaln( 4.0, 1.0 )\nv = base.betaln( NaN, 2.0 )\n"
base.binet,"var y = base.binet( 0.0 )\ny = base.binet( 1.0 )\ny = base.binet( 2.0 )\ny = base.binet( 3.0 )\ny = base.binet( 4.0 )\ny = base.binet( 5.0 )\ny = base.binet( NaN )\n"
base.binomcoef,"var v = base.binomcoef( 8, 2 )\nv = base.binomcoef( 0, 0 )\nv = base.binomcoef( -4, 2 )\nv = base.binomcoef( 5, 3 )\nv = base.binomcoef( NaN, 3 )\nv = base.binomcoef( 5, NaN )\nv = base.binomcoef( NaN, NaN )\n"
base.binomcoefln,"var v = base.binomcoefln( 8, 2 )\nv = base.binomcoefln( 0, 0 )\nv = base.binomcoefln( -4, 2 )\nv = base.binomcoefln( 88, 3 )\nv = base.binomcoefln( NaN, 3 )\nv = base.binomcoefln( 5, NaN )\nv = base.binomcoefln( NaN, NaN )\n"
base.boxcox,"var v = base.boxcox( 1.0, 2.5 )\nv = base.boxcox( 4.0, 2.5 )\nv = base.boxcox( 10.0, 2.5 )\nv = base.boxcox( 2.0, 0.0 )\nv = base.boxcox( -1.0, 2.5 )\nv = base.boxcox( 0.0, -1.0 )\n"
base.boxcox1p,"var v =  base.boxcox1p( 1.0, 2.5 )\nv = base.boxcox1p( 4.0, 2.5 )\nv = base.boxcox1p( 10.0, 2.5 )\nv = base.boxcox1p( 2.0, 0.0 )\nv = base.boxcox1p( -1.0, 2.5 )\nv = base.boxcox1p( 0.0, -1.0 )\nv = base.boxcox1p( -1.0, -1.0 )\n"
base.boxcox1pinv,"var v = base.boxcox1pinv( 1.0, 2.5 )\nv = base.boxcox1pinv( 4.0, 2.5 )\nv = base.boxcox1pinv( 10.0, 2.5 )\nv = base.boxcox1pinv( 2.0, 0.0 )\nv = base.boxcox1pinv( -1.0, 2.5 )\nv = base.boxcox1pinv( 0.0, -1.0 )\nv = base.boxcox1pinv( 1.0, NaN )\nv = base.boxcox1pinv( NaN, 3.1 )\n"
base.boxcoxinv,"var v = base.boxcoxinv( 1.0, 2.5 )\nv = base.boxcoxinv( 4.0, 2.5 )\nv = base.boxcoxinv( 10.0, 2.5 )\nv = base.boxcoxinv( 2.0, 0.0 )\nv = base.boxcoxinv( -1.0, 2.5 )\nv = base.boxcoxinv( 0.0, -1.0 )\nv = base.boxcoxinv( 1.0, NaN )\nv = base.boxcoxinv( NaN, 3.1 )\n"
base.cabs,"var y = base.cabs( 5.0, 3.0 )\n"
base.cabs2,"var y = base.cabs2( 5.0, 3.0 )\n"
base.cadd,"var y = base.cadd( 5.0, 3.0, -2.0, 1.0 )\nvar out = new Float32Array( 2 );\ny = base.cadd( out, 5.0, 3.0, -2.0, 1.0 )\nvar bool = ( y === out )\n"
base.cbrt,"var y = base.cbrt( 64.0 )\ny = base.cbrt( 27.0 )\ny = base.cbrt( 0.0 )\ny = base.cbrt( -0.0 )\ny = base.cbrt( -9.0 )\ny = base.cbrt( NaN )\n"
base.cceil,"var out = base.cceil( 5.5, 3.3 )\nout = new Float64Array( 2 );\nvar v = base.cceil( out, 5.5, 3.3 )\nvar bool = ( v === out )\n"
base.cceiln,"var out = base.cceiln( 5.555, -3.333, -2 )\nout = new Float64Array( 2 );\nvar v = base.cceiln( out, 5.555, -3.333, -2 )\nvar bool = ( v === out )\n"
base.ccis,"var y = base.ccis( 0.0, 0.0 )\nvar y = base.ccis( 1.0, 0.0 )\nvar out = new Float64Array( 2 );\nvar v = base.ccis( out, 1.0, 0.0 )\nvar bool = ( v === out )\n"
base.cdiv,"var y = base.cdiv( -13.0, -1.0, -2.0, 1.0 )\nvar out = new Float64Array( 2 );\nvar v = base.cdiv( out, -13.0, -1.0, -2.0, 1.0 )\nvar bool = ( v === out )\n"
base.ceil,"var y = base.ceil( 3.14 )\ny = base.ceil( -4.2 )\ny = base.ceil( -4.6 )\ny = base.ceil( 9.5 )\ny = base.ceil( -0.0 )\n"
base.ceil2,"var y = base.ceil2( 3.14 )\ny = base.ceil2( -4.2 )\ny = base.ceil2( -4.6 )\ny = base.ceil2( 9.5 )\ny = base.ceil2( 13.0 )\ny = base.ceil2( -13.0 )\ny = base.ceil2( -0.0 )\n"
base.ceil10,"var y = base.ceil10( 3.14 )\ny = base.ceil10( -4.2 )\ny = base.ceil10( -4.6 )\ny = base.ceil10( 9.5 )\ny = base.ceil10( 13.0 )\ny = base.ceil10( -13.0 )\ny = base.ceil10( -0.0 )\n"
base.ceilb,"var y = base.ceilb( 3.14159, -4, 10 )\ny = base.ceilb( 3.14159, 0, 2 )\ny = base.ceilb( 5.0, 1, 2 )\n"
base.ceiln,"var y = base.ceiln( 3.14159, -2 )\ny = base.ceiln( 3.14159, 0 )\ny = base.ceiln( 12368.0, 3 )\n"
base.ceilsd,"var y = base.ceilsd( 3.14159, 5 )\ny = base.ceilsd( 3.14159, 1 )\ny = base.ceilsd( 12368.0, 2 )\ny = base.ceilsd( 0.0313, 2, 2 )\n"
base.cexp,"var y = base.cexp( 0.0, 0.0 )\ny = base.cexp( 0.0, 1.0 )\nvar out = new Float64Array( 2 );\nvar v = base.cexp( out, 0.0, 1.0 )\nvar bool = ( v === out )\n"
base.cflipsign,"var out = base.cflipsign( -4.2, 5.5, -9 )\nout = new Float64Array( 2 );\nvar v = base.cflipsign( out, -4.2, 5.5, 8 )\nvar bool = ( v === out )\n"
base.cfloor,"var out = base.cfloor( 5.5, 3.3 )\nout = new Float64Array( 2 );\nvar v = base.cfloor( out, 5.5, 3.3 )\nvar bool = ( v === out )\n"
base.cfloorn,"var out = base.cfloorn( 5.555, -3.333, -2 )\nout = new Float64Array( 2 );\nvar v = base.cfloorn( out, 5.555, -3.333, -2 )\nvar bool = ( v === out )\n"
base.cinv,"var y = base.cinv( 2.0, 4.0 )\nvar out = new Float64Array( 2 );\nvar v = base.cinv( out, 2.0, 4.0 )\nvar bool = ( v === out )\n"
base.clamp,"var y = base.clamp( 3.14, 0.0, 5.0 )\ny = base.clamp( -3.14, 0.0, 5.0 )\ny = base.clamp( 3.14, 0.0, 3.0 )\ny = base.clamp( -0.0, 0.0, 5.0 )\ny = base.clamp( 0.0, -3.14, -0.0 )\ny = base.clamp( NaN, 0.0, 5.0 )\n"
base.cmul,"var out = base.cmul( 5.0, 3.0, -2.0, 1.0 )\nvar out = new Float64Array( 2 );\nvar v = base.cmul( out, 5.0, 3.0, -2.0, 1.0 )\nvar bool = ( v === out )\n"
base.cneg,"var out = base.cneg( -4.2, 5.5 )\nout = new Float64Array( 2 );\nvar v = base.cneg( out, -4.2, 5.5 )\nvar bool = ( v === out )\n"
base.continuedFraction,"function closure() {\nvar i = 0;\nreturn function() {\n    i += 1;\n    return [ i, i ];\n};\n };\nvar gen = closure();\nvar out = base.continuedFraction( gen )\nfunction* generator() {\n var i = 0;\n while ( true ) {\n     i += 1;\n     yield [ i, i ];\n }\n };\ngen = generator();\nout = base.continuedFraction( gen )\nout = base.continuedFraction( generator(), { 'keep': true } )\nout = base.continuedFraction( generator(), { 'maxIter': 10 } )\nout = base.continuedFraction( generator(), { 'tolerance': 1e-1 } )\n"
base.copysign,"var z = base.copysign( -3.14, 10.0 )\nz = base.copysign( 3.14, -1.0 )\nz = base.copysign( 1.0, -0.0 )\nz = base.copysign( -3.14, -0.0 )\nz = base.copysign( -0.0, 1.0 )\n"
base.cos,"var y = base.cos( 0.0 )\ny = base.cos( PI/4.0 )\ny = base.cos( -PI/6.0 )\ny = base.cos( NaN )\n"
base.cosh,"var y = base.cosh( 0.0 )\ny = base.cosh( 2.0 )\ny = base.cosh( -2.0 )\ny = base.cosh( NaN )\n"
base.cosm1,"var y = base.cosm1( 0.0 )\ny = base.cosm1( PI/4.0 )\ny = base.cosm1( -PI/6.0 )\ny = base.cosm1( NaN )\n"
base.cospi,"var y = base.cospi( 0.0 )\ny = base.cospi( 0.5 )\ny = base.cospi( 0.1 )\ny = base.cospi( NaN )\n"
base.covercos,"var y = base.covercos( 3.14 )\ny = base.covercos( -4.2 )\ny = base.covercos( -4.6 )\ny = base.covercos( 9.5 )\ny = base.covercos( -0.0 )\n"
base.coversin,"var y = base.coversin( 3.14 )\ny = base.coversin( -4.2 )\ny = base.coversin( -4.6 )\ny = base.coversin( 9.5 )\ny = base.coversin( -0.0 )\n"
base.cphase,"var phi = base.cphase( 5.0, 3.0 )\n"
base.cpolar,"var out = base.cpolar( 5.0, 3.0 )\nout = new Float64Array( 2 );\nvar v = base.cpolar( out, 5.0, 3.0 )\nvar bool = ( v === out )\n"
base.cround,"var out = base.cround( 5.5, 3.3 )\nout = new Float64Array( 2 );\nvar v = base.cround( out, 5.5, 3.3 )\nvar bool = ( v === out )\n"
base.croundn,"var out = base.croundn( 5.555, -3.336, -2 )\nout = new Float64Array( 2 );\nvar v = base.croundn( out, 5.555, -3.336, -2 )\nvar bool = ( v === out )\n"
base.csignum,"var out = base.csignum( -4.2, 5.5 )\nout = new Float64Array( 2 );\nvar v = base.csignum( out, -4.2, 5.5 )\nvar bool = ( v === out )\n"
base.csub,"var out = base.csub( 5.0, 3.0, -2.0, 1.0 )\nout = new Float64Array( 2 );\nvar v = base.csub( out, 5.0, 3.0, -2.0, 1.0 )\nvar bool = ( v === out )\n"
base.dasum,"var x = new Float64Array( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ] );\nvar sum = base.dasum( x.length, x, 1 )\nvar N = base.floor( x.length / 2 );\nvar stride = 2;\nsum = base.dasum( N, x, stride )\nvar x0 = new Float64Array( [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ] );\nvar x1 = new Float64Array( x0.buffer, x0.BYTES_PER_ELEMENT*1 );\nN = base.floor( x0.length / 2 );\nsum = base.dasum( N, x1, stride )\n"
base.dasum.ndarray,"var x = new Float64Array( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ] );\nvar sum = base.dasum.ndarray( x.length, x, 1, 0 )\nx = new Float64Array( [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ] );\nsum = base.dasum.ndarray( 3, x, -1, x.length-1 )\n"
base.dasum.wasm,"var wasm = base.dasum.wasm();\nvar N = 5;\nvar bytes = wasm.malloc( N * 8 );\nvar view = new Float64Array( bytes.buffer, bytes.byteOffset, N );\nview.set( [ 1.0, -2.0, 3.0, -4.0, 5.0 ] );\nvar s = wasm( N, bytes, 1 )\nwasm.free( bytes );\n"
base.daxpy,"var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\nvar y = new Float64Array( [ 1.0, 1.0, 1.0, 1.0, 1.0 ] );\nvar alpha = 5.0;\nbase.daxpy( x.length, alpha, x, 1, y, 1 )\nx = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\ny = new Float64Array( [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ] );\nvar N = base.floor( x.length / 2 );\nbase.daxpy( N, alpha, x, 2, y, -1 )\nvar x0 = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\nvar y0 = new Float64Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar x1 = new Float64Array( x0.buffer, x0.BYTES_PER_ELEMENT*1 );\nvar y1 = new Float64Array( y0.buffer, y0.BYTES_PER_ELEMENT*3 );\nN = base.floor( x0.length / 2 );\nbase.daxpy( N, 5.0, x1, -2, y1, 1 )\ny0\n"
base.daxpy.ndarray,"var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\nvar y = new Float64Array( [ 1.0, 1.0, 1.0, 1.0, 1.0 ] );\nvar alpha = 5.0;\nbase.daxpy.ndarray( x.length, alpha, x, 1, 0, y, 1, 0 )\nx = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\ny = new Float64Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar N = base.floor( x.length / 2 );\nbase.daxpy.ndarray( N, alpha, x, 2, 1, y, -1, y.length-1 )\n"
base.daxpy.wasm,"var wasm = base.daxpy.wasm();\nvar N = 5;\nvar xbytes = wasm.malloc( N * 8 );\nvar ybytes = wasm.malloc( N * 8 );\nvar x = new Float64Array( xbytes.buffer, xbytes.byteOffset, N );\nvar y = new Float64Array( ybytes.buffer, ybytes.byteOffset, N );\nx.set( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\ny.set( [ 1.0, 1.0, 1.0, 1.0, 1.0 ] );\nvar alpha = 5.0;\nwasm( x.length, alpha, xbytes, 1, ybytes, 1 );\ny\nwasm.free( xbytes );\nwasm.free( ybytes );\n"
base.dcopy,"var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\nvar y = new Float64Array( [ 6.0, 7.0, 8.0, 9.0, 10.0 ] );\nbase.dcopy( x.length, x, 1, y, 1 )\nx = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\ny = new Float64Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar N = base.floor( x.length / 2 );\nbase.dcopy( N, x, -2, y, 1 )\nvar x0 = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\nvar y0 = new Float64Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar x1 = new Float64Array( x0.buffer, x0.BYTES_PER_ELEMENT*1 );\nvar y1 = new Float64Array( y0.buffer, y0.BYTES_PER_ELEMENT*3 );\nN = base.floor( x0.length / 2 );\nbase.dcopy( N, x1, -2, y1, 1 )\ny0\n"
base.dcopy.ndarray,"var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\nvar y = new Float64Array( [ 6.0, 7.0, 8.0, 9.0, 10.0 ] );\nbase.dcopy.ndarray( x.length, x, 1, 0, y, 1, 0 )\nx = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\ny = new Float64Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar N = base.floor( x.length / 2 );\nbase.dcopy.ndarray( N, x, 2, 1, y, -1, y.length-1 )\n"
base.deg2rad,"var r = base.deg2rad( 90.0 )\nr = base.deg2rad( -45.0 )\nr = base.deg2rad( NaN )\n"
base.digamma,"var y = base.digamma( -2.5 )\ny = base.digamma( 1.0 )\ny = base.digamma( 10.0 )\ny = base.digamma( NaN )\ny = base.digamma( -1.0 )\n"
base.diracDelta,"var y = base.diracDelta( 3.14 )\ny = base.diracDelta( 0.0 )\n"
base.dists.arcsine.Arcsine,"var arcsine = base.dists.arcsine.Arcsine( 0.0, 1.0 );\narcsine.a\narcsine.b\narcsine.entropy\narcsine.kurtosis\narcsine.mean\narcsine.median\narcsine.mode\narcsine.skewness\narcsine.stdev\narcsine.variance\narcsine.cdf( 0.8 )\narcsine.logcdf( 0.8 )\narcsine.logpdf( 0.4 )\narcsine.pdf( 0.8 )\narcsine.quantile( 0.8 )\n"
base.dists.arcsine.cdf,"var y = base.dists.arcsine.cdf( 9.0, 0.0, 10.0 )\ny = base.dists.arcsine.cdf( 0.5, 0.0, 2.0 )\ny = base.dists.arcsine.cdf( PINF, 2.0, 4.0 )\ny = base.dists.arcsine.cdf( NINF, 2.0, 4.0 )\ny = base.dists.arcsine.cdf( NaN, 0.0, 1.0 )\ny = base.dists.arcsine.cdf( 0.0, NaN, 1.0 )\ny = base.dists.arcsine.cdf( 0.0, 0.0, NaN )\ny = base.dists.arcsine.cdf( 2.0, 1.0, 0.0 )\n"
base.dists.arcsine.cdf.factory,"var mycdf = base.dists.arcsine.cdf.factory( 0.0, 10.0 );\nvar y = mycdf( 0.5 )\ny = mycdf( 8.0 )\n"
base.dists.arcsine.entropy,"var v = base.dists.arcsine.entropy( 0.0, 1.0 )\nv = base.dists.arcsine.entropy( 4.0, 12.0 )\nv = base.dists.arcsine.entropy( 2.0, 8.0 )\n"
base.dists.arcsine.kurtosis,"var v = base.dists.arcsine.kurtosis( 0.0, 1.0 )\nv = base.dists.arcsine.kurtosis( 4.0, 12.0 )\nv = base.dists.arcsine.kurtosis( 2.0, 8.0 )\n"
base.dists.arcsine.logcdf,"var y = base.dists.arcsine.logcdf( 9.0, 0.0, 10.0 )\ny = base.dists.arcsine.logcdf( 0.5, 0.0, 2.0 )\ny = base.dists.arcsine.logcdf( PINF, 2.0, 4.0 )\ny = base.dists.arcsine.logcdf( NINF, 2.0, 4.0 )\ny = base.dists.arcsine.logcdf( NaN, 0.0, 1.0 )\ny = base.dists.arcsine.logcdf( 0.0, NaN, 1.0 )\ny = base.dists.arcsine.logcdf( 0.0, 0.0, NaN )\ny = base.dists.arcsine.logcdf( 2.0, 1.0, 0.0 )\n"
base.dists.arcsine.logcdf.factory,"var mylogcdf = base.dists.arcsine.logcdf.factory( 0.0, 10.0 );\nvar y = mylogcdf( 0.5 )\ny = mylogcdf( 8.0 )\n"
base.dists.arcsine.logpdf,"var y = base.dists.arcsine.logpdf( 2.0, 0.0, 4.0 )\ny = base.dists.arcsine.logpdf( 5.0, 0.0, 4.0 )\ny = base.dists.arcsine.logpdf( 0.25, 0.0, 1.0 )\ny = base.dists.arcsine.logpdf( NaN, 0.0, 1.0 )\ny = base.dists.arcsine.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.arcsine.logpdf( 0.0, 0.0, NaN )\ny = base.dists.arcsine.logpdf( 2.0, 3.0, 1.0 )\n"
base.dists.arcsine.logpdf.factory,"var mylogPDF = base.dists.arcsine.logpdf.factory( 6.0, 7.0 );\nvar y = mylogPDF( 7.0 )\ny = mylogPDF( 5.0 )\n"
base.dists.arcsine.mean,"var v = base.dists.arcsine.mean( 0.0, 1.0 )\nv = base.dists.arcsine.mean( 4.0, 12.0 )\nv = base.dists.arcsine.mean( 2.0, 8.0 )\n"
base.dists.arcsine.median,"var v = base.dists.arcsine.median( 0.0, 1.0 )\nv = base.dists.arcsine.median( 4.0, 12.0 )\nv = base.dists.arcsine.median( 2.0, 8.0 )\n"
base.dists.arcsine.mode,"var v = base.dists.arcsine.mode( 0.0, 1.0 )\nv = base.dists.arcsine.mode( 4.0, 12.0 )\nv = base.dists.arcsine.mode( 2.0, 8.0 )\n"
base.dists.arcsine.pdf,"var y = base.dists.arcsine.pdf( 2.0, 0.0, 4.0 )\ny = base.dists.arcsine.pdf( 5.0, 0.0, 4.0 )\ny = base.dists.arcsine.pdf( 0.25, 0.0, 1.0 )\ny = base.dists.arcsine.pdf( NaN, 0.0, 1.0 )\ny = base.dists.arcsine.pdf( 0.0, NaN, 1.0 )\ny = base.dists.arcsine.pdf( 0.0, 0.0, NaN )\ny = base.dists.arcsine.pdf( 2.0, 3.0, 1.0 )\n"
base.dists.arcsine.pdf.factory,"var myPDF = base.dists.arcsine.pdf.factory( 6.0, 7.0 );\nvar y = myPDF( 7.0 )\ny = myPDF( 5.0 )\n"
base.dists.arcsine.quantile,"var y = base.dists.arcsine.quantile( 0.8, 0.0, 1.0 )\ny = base.dists.arcsine.quantile( 0.5, 0.0, 10.0 )\ny = base.dists.arcsine.quantile( 1.1, 0.0, 1.0 )\ny = base.dists.arcsine.quantile( -0.2, 0.0, 1.0 )\ny = base.dists.arcsine.quantile( NaN, 0.0, 1.0 )\ny = base.dists.arcsine.quantile( 0.0, NaN, 1.0 )\ny = base.dists.arcsine.quantile( 0.0, 0.0, NaN )\ny = base.dists.arcsine.quantile( 0.5, 2.0, 1.0 )\n"
base.dists.arcsine.quantile.factory,"var myQuantile = base.dists.arcsine.quantile.factory( 0.0, 4.0 );\nvar y = myQuantile( 0.8 )\n"
base.dists.arcsine.skewness,"var v = base.dists.arcsine.skewness( 0.0, 1.0 )\nv = base.dists.arcsine.skewness( 4.0, 12.0 )\nv = base.dists.arcsine.skewness( 2.0, 8.0 )\n"
base.dists.arcsine.stdev,"var v = base.dists.arcsine.stdev( 0.0, 1.0 )\nv = base.dists.arcsine.stdev( 4.0, 12.0 )\nv = base.dists.arcsine.stdev( 2.0, 8.0 )\n"
base.dists.arcsine.variance,"var v = base.dists.arcsine.variance( 0.0, 1.0 )\nv = base.dists.arcsine.variance( 4.0, 12.0 )\nv = base.dists.arcsine.variance( 2.0, 8.0 )\n"
base.dists.bernoulli.Bernoulli,"var bernoulli = base.dists.bernoulli.Bernoulli( 0.6 );\nbernoulli.p\nbernoulli.entropy\nbernoulli.kurtosis\nbernoulli.mean\nbernoulli.median\nbernoulli.skewness\nbernoulli.stdev\nbernoulli.variance\nbernoulli.cdf( 0.5 )\nbernoulli.mgf( 3.0 )\nbernoulli.pmf( 0.0 )\nbernoulli.quantile( 0.7 )\n"
base.dists.bernoulli.cdf,"var y = base.dists.bernoulli.cdf( 0.5, 0.5 )\ny = base.dists.bernoulli.cdf( 0.8, 0.1 )\ny = base.dists.bernoulli.cdf( -1.0, 0.4 )\ny = base.dists.bernoulli.cdf( 1.5, 0.4 )\ny = base.dists.bernoulli.cdf( NaN, 0.5 )\ny = base.dists.bernoulli.cdf( 0.0, NaN )\ny = base.dists.bernoulli.cdf( 2.0, 1.4 )\n"
base.dists.bernoulli.cdf.factory,"var mycdf = base.dists.bernoulli.cdf.factory( 0.5 );\nvar y = mycdf( 3.0 )\ny = mycdf( 0.7 )\n"
base.dists.bernoulli.entropy,"var v = base.dists.bernoulli.entropy( 0.1 )\nv = base.dists.bernoulli.entropy( 0.5 )\n"
base.dists.bernoulli.kurtosis,"var v = base.dists.bernoulli.kurtosis( 0.1 )\nv = base.dists.bernoulli.kurtosis( 0.5 )\n"
base.dists.bernoulli.mean,"var v = base.dists.bernoulli.mean( 0.1 )\nv = base.dists.bernoulli.mean( 0.5 )\n"
base.dists.bernoulli.median,"var v = base.dists.bernoulli.median( 0.1 )\nv = base.dists.bernoulli.median( 0.8 )\n"
base.dists.bernoulli.mgf,"var y = base.dists.bernoulli.mgf( 0.2, 0.5 )\ny = base.dists.bernoulli.mgf( 0.4, 0.5 )\ny = base.dists.bernoulli.mgf( NaN, 0.0 )\ny = base.dists.bernoulli.mgf( 0.0, NaN )\ny = base.dists.bernoulli.mgf( -2.0, -1.0 )\ny = base.dists.bernoulli.mgf( 0.2, 2.0 )\n"
base.dists.bernoulli.mgf.factory,"var mymgf = base.dists.bernoulli.mgf.factory( 0.8 );\nvar y = mymgf( -0.2 )\n"
base.dists.bernoulli.mode,"var v = base.dists.bernoulli.mode( 0.1 )\nv = base.dists.bernoulli.mode( 0.8 )\n"
base.dists.bernoulli.pmf,"var y = base.dists.bernoulli.pmf( 1.0, 0.3 )\ny = base.dists.bernoulli.pmf( 0.0, 0.7 )\ny = base.dists.bernoulli.pmf( -1.0, 0.5 )\ny = base.dists.bernoulli.pmf( 0.0, NaN )\ny = base.dists.bernoulli.pmf( NaN, 0.5 )\ny = base.dists.bernoulli.pmf( 0.0, 1.5 )\n"
base.dists.bernoulli.pmf.factory,"var mypmf = base.dists.bernoulli.pmf.factory( 0.5 );\nvar y = mypmf( 1.0 )\ny = mypmf( 0.0 )\n"
base.dists.bernoulli.quantile,"var y = base.dists.bernoulli.quantile( 0.8, 0.4 )\ny = base.dists.bernoulli.quantile( 0.5, 0.4 )\ny = base.dists.bernoulli.quantile( 0.9, 0.1 )\ny = base.dists.bernoulli.quantile( -0.2, 0.1 )\ny = base.dists.bernoulli.quantile( NaN, 0.8 )\ny = base.dists.bernoulli.quantile( 0.4, NaN )\ny = base.dists.bernoulli.quantile( 0.5, -1.0 )\ny = base.dists.bernoulli.quantile( 0.5, 1.5 )\n"
base.dists.bernoulli.quantile.factory,"var myquantile = base.dists.bernoulli.quantile.factory( 0.4 );\nvar y = myquantile( 0.4 )\ny = myquantile( 0.8 )\ny = myquantile( 1.0 )\n"
base.dists.bernoulli.skewness,"var v = base.dists.bernoulli.skewness( 0.1 )\nv = base.dists.bernoulli.skewness( 0.5 )\n"
base.dists.bernoulli.stdev,"var v = base.dists.bernoulli.stdev( 0.1 )\nv = base.dists.bernoulli.stdev( 0.5 )\n"
base.dists.bernoulli.variance,"var v = base.dists.bernoulli.variance( 0.1 )\nv = base.dists.bernoulli.variance( 0.5 )\n"
base.dists.beta.Beta,"var beta = base.dists.beta.Beta( 1.0, 1.0 );\nbeta.alpha\nbeta.beta\nbeta.entropy\nbeta.kurtosis\nbeta.mean\nbeta.median\nbeta.mode\nbeta.skewness\nbeta.stdev\nbeta.variance\nbeta.cdf( 0.8 )\nbeta.logcdf( 0.8 )\nbeta.logpdf( 1.0 )\nbeta.mgf( 3.14 )\nbeta.pdf( 1.0 )\nbeta.quantile( 0.8 )\n"
base.dists.beta.cdf,"var y = base.dists.beta.cdf( 0.5, 1.0, 1.0 )\ny = base.dists.beta.cdf( 0.5, 2.0, 4.0 )\ny = base.dists.beta.cdf( 0.2, 2.0, 2.0 )\ny = base.dists.beta.cdf( 0.8, 4.0, 4.0 )\ny = base.dists.beta.cdf( -0.5, 4.0, 2.0 )\ny = base.dists.beta.cdf( 1.5, 4.0, 2.0 )\ny = base.dists.beta.cdf( 2.0, -1.0, 0.5 )\ny = base.dists.beta.cdf( 2.0, 0.5, -1.0 )\ny = base.dists.beta.cdf( NaN, 1.0, 1.0 )\ny = base.dists.beta.cdf( 0.0, NaN, 1.0 )\ny = base.dists.beta.cdf( 0.0, 1.0, NaN )\n"
base.dists.beta.cdf.factory,"var mycdf = base.dists.beta.cdf.factory( 0.5, 0.5 );\nvar y = mycdf( 0.8 )\ny = mycdf( 0.3 )\n"
base.dists.beta.entropy,"var v = base.dists.beta.entropy( 1.0, 1.0 )\nv = base.dists.beta.entropy( 4.0, 12.0 )\nv = base.dists.beta.entropy( 8.0, 2.0 )\nv = base.dists.beta.entropy( 1.0, -0.1 )\nv = base.dists.beta.entropy( -0.1, 1.0 )\nv = base.dists.beta.entropy( 2.0, NaN )\nv = base.dists.beta.entropy( NaN, 2.0 )\n"
base.dists.beta.kurtosis,"var v = base.dists.beta.kurtosis( 1.0, 1.0 )\nv = base.dists.beta.kurtosis( 4.0, 12.0 )\nv = base.dists.beta.kurtosis( 8.0, 2.0 )\nv = base.dists.beta.kurtosis( 1.0, -0.1 )\nv = base.dists.beta.kurtosis( -0.1, 1.0 )\nv = base.dists.beta.kurtosis( 2.0, NaN )\nv = base.dists.beta.kurtosis( NaN, 2.0 )\n"
base.dists.beta.logcdf,"var y = base.dists.beta.logcdf( 0.5, 1.0, 1.0 )\ny = base.dists.beta.logcdf( 0.5, 2.0, 4.0 )\ny = base.dists.beta.logcdf( 0.2, 2.0, 2.0 )\ny = base.dists.beta.logcdf( 0.8, 4.0, 4.0 )\ny = base.dists.beta.logcdf( -0.5, 4.0, 2.0 )\ny = base.dists.beta.logcdf( 1.5, 4.0, 2.0 )\ny = base.dists.beta.logcdf( 2.0, -1.0, 0.5 )\ny = base.dists.beta.logcdf( 2.0, 0.5, -1.0 )\ny = base.dists.beta.logcdf( NaN, 1.0, 1.0 )\ny = base.dists.beta.logcdf( 0.0, NaN, 1.0 )\ny = base.dists.beta.logcdf( 0.0, 1.0, NaN )\n"
base.dists.beta.logcdf.factory,"var mylogcdf = base.dists.beta.logcdf.factory( 0.5, 0.5 );\nvar y = mylogcdf( 0.8 )\ny = mylogcdf( 0.3 )\n"
base.dists.beta.logpdf,"var y = base.dists.beta.logpdf( 0.5, 1.0, 1.0 )\ny = base.dists.beta.logpdf( 0.5, 2.0, 4.0 )\ny = base.dists.beta.logpdf( 0.2, 2.0, 2.0 )\ny = base.dists.beta.logpdf( 0.8, 4.0, 4.0 )\ny = base.dists.beta.logpdf( -0.5, 4.0, 2.0 )\ny = base.dists.beta.logpdf( 1.5, 4.0, 2.0 )\ny = base.dists.beta.logpdf( 0.5, -1.0, 0.5 )\ny = base.dists.beta.logpdf( 0.5, 0.5, -1.0 )\ny = base.dists.beta.logpdf( NaN, 1.0, 1.0 )\ny = base.dists.beta.logpdf( 0.5, NaN, 1.0 )\ny = base.dists.beta.logpdf( 0.5, 1.0, NaN )\n"
base.dists.beta.logpdf.factory,"var mylogpdf = base.dists.beta.logpdf.factory( 0.5, 0.5 );\nvar y = mylogpdf( 0.8 )\ny = mylogpdf( 0.3 )\n"
base.dists.beta.mean,"var v = base.dists.beta.mean( 1.0, 1.0 )\nv = base.dists.beta.mean( 4.0, 12.0 )\nv = base.dists.beta.mean( 8.0, 2.0 )\n"
base.dists.beta.median,"var v = base.dists.beta.median( 1.0, 1.0 )\nv = base.dists.beta.median( 4.0, 12.0 )\nv = base.dists.beta.median( 8.0, 2.0 )\nv = base.dists.beta.median( 1.0, -0.1 )\nv = base.dists.beta.median( -0.1, 1.0 )\nv = base.dists.beta.median( 2.0, NaN )\nv = base.dists.beta.median( NaN, 2.0 )\n"
base.dists.beta.mgf,"var y = base.dists.beta.mgf( 0.5, 1.0, 1.0 )\ny = base.dists.beta.mgf( 0.5, 2.0, 4.0 )\ny = base.dists.beta.mgf( 3.0, 2.0, 2.0 )\ny = base.dists.beta.mgf( -0.8, 4.0, 4.0 )\ny = base.dists.beta.mgf( NaN, 1.0, 1.0 )\ny = base.dists.beta.mgf( 0.0, NaN, 1.0 )\ny = base.dists.beta.mgf( 0.0, 1.0, NaN )\ny = base.dists.beta.mgf( 2.0, -1.0, 0.5 )\ny = base.dists.beta.mgf( 2.0, 0.0, 0.5 )\ny = base.dists.beta.mgf( 2.0, 0.5, -1.0 )\ny = base.dists.beta.mgf( 2.0, 0.5, 0.0 )\n"
base.dists.beta.mgf.factory,"var myMGF = base.dists.beta.mgf.factory( 0.5, 0.5 );\nvar y = myMGF( 0.8 )\ny = myMGF( 0.3 )\n"
base.dists.beta.mode,"var v = base.dists.beta.mode( 4.0, 12.0 )\nv = base.dists.beta.mode( 8.0, 2.0 )\nv = base.dists.beta.mode( 1.0, 1.0 )\n"
base.dists.beta.pdf,"var y = base.dists.beta.pdf( 0.5, 1.0, 1.0 )\ny = base.dists.beta.pdf( 0.5, 2.0, 4.0 )\ny = base.dists.beta.pdf( 0.2, 2.0, 2.0 )\ny = base.dists.beta.pdf( 0.8, 4.0, 4.0 )\ny = base.dists.beta.pdf( -0.5, 4.0, 2.0 )\ny = base.dists.beta.pdf( 1.5, 4.0, 2.0 )\ny = base.dists.beta.pdf( 0.5, -1.0, 0.5 )\ny = base.dists.beta.pdf( 0.5, 0.5, -1.0 )\ny = base.dists.beta.pdf( NaN, 1.0, 1.0 )\ny = base.dists.beta.pdf( 0.5, NaN, 1.0 )\ny = base.dists.beta.pdf( 0.5, 1.0, NaN )\n"
base.dists.beta.pdf.factory,"var mypdf = base.dists.beta.pdf.factory( 0.5, 0.5 );\nvar y = mypdf( 0.8 )\ny = mypdf( 0.3 )\n"
base.dists.beta.quantile,"var y = base.dists.beta.quantile( 0.8, 2.0, 1.0 )\ny = base.dists.beta.quantile( 0.5, 4.0, 2.0 )\ny = base.dists.beta.quantile( 1.1, 1.0, 1.0 )\ny = base.dists.beta.quantile( -0.2, 1.0, 1.0 )\ny = base.dists.beta.quantile( NaN, 1.0, 1.0 )\ny = base.dists.beta.quantile( 0.5, NaN, 1.0 )\ny = base.dists.beta.quantile( 0.5, 1.0, NaN )\ny = base.dists.beta.quantile( 0.5, -1.0, 1.0 )\ny = base.dists.beta.quantile( 0.5, 1.0, -1.0 )\n"
base.dists.beta.quantile.factory,"var myquantile = base.dists.beta.quantile.factory( 2.0, 2.0 );\ny = myquantile( 0.8 )\ny = myquantile( 0.4 )\n"
base.dists.beta.skewness,"var v = base.dists.beta.skewness( 1.0, 1.0 )\nv = base.dists.beta.skewness( 4.0, 12.0 )\nv = base.dists.beta.skewness( 8.0, 2.0 )\nv = base.dists.beta.skewness( 1.0, -0.1 )\nv = base.dists.beta.skewness( -0.1, 1.0 )\nv = base.dists.beta.skewness( 2.0, NaN )\nv = base.dists.beta.skewness( NaN, 2.0 )\n"
base.dists.beta.stdev,"var v = base.dists.beta.stdev( 1.0, 1.0 )\nv = base.dists.beta.stdev( 4.0, 12.0 )\nv = base.dists.beta.stdev( 8.0, 2.0 )\nv = base.dists.beta.stdev( 1.0, -0.1 )\nv = base.dists.beta.stdev( -0.1, 1.0 )\nv = base.dists.beta.stdev( 2.0, NaN )\nv = base.dists.beta.stdev( NaN, 2.0 )\n"
base.dists.beta.variance,"var v = base.dists.beta.variance( 1.0, 1.0 )\nv = base.dists.beta.variance( 4.0, 12.0 )\nv = base.dists.beta.variance( 8.0, 2.0 )\nv = base.dists.beta.variance( 1.0, -0.1 )\nv = base.dists.beta.variance( -0.1, 1.0 )\nv = base.dists.beta.variance( 2.0, NaN )\nv = base.dists.beta.variance( NaN, 2.0 )\n"
base.dists.betaprime.BetaPrime,"var betaprime = base.dists.betaprime.BetaPrime( 6.0, 5.0 );\nbetaprime.alpha\nbetaprime.beta\nbetaprime.kurtosis\nbetaprime.mean\nbetaprime.mode\nbetaprime.skewness\nbetaprime.stdev\nbetaprime.variance\nbetaprime.cdf( 0.8 )\nbetaprime.logcdf( 0.8 )\nbetaprime.logpdf( 1.0 )\nbetaprime.pdf( 1.0 )\nbetaprime.quantile( 0.8 )\n"
base.dists.betaprime.cdf,"var y = base.dists.betaprime.cdf( 0.5, 1.0, 1.0 )\ny = base.dists.betaprime.cdf( 0.5, 2.0, 4.0 )\ny = base.dists.betaprime.cdf( 0.2, 2.0, 2.0 )\ny = base.dists.betaprime.cdf( 0.8, 4.0, 4.0 )\ny = base.dists.betaprime.cdf( -0.5, 4.0, 2.0 )\ny = base.dists.betaprime.cdf( 2.0, -1.0, 0.5 )\ny = base.dists.betaprime.cdf( 2.0, 0.5, -1.0 )\ny = base.dists.betaprime.cdf( NaN, 1.0, 1.0 )\ny = base.dists.betaprime.cdf( 0.0, NaN, 1.0 )\ny = base.dists.betaprime.cdf( 0.0, 1.0, NaN )\n"
base.dists.betaprime.cdf.factory,"var mycdf = base.dists.betaprime.cdf.factory( 0.5, 0.5 );\nvar y = mycdf( 0.8 )\ny = mycdf( 0.3 )\n"
base.dists.betaprime.kurtosis,"var v = base.dists.betaprime.kurtosis( 2.0, 6.0 )\nv = base.dists.betaprime.kurtosis( 4.0, 12.0 )\nv = base.dists.betaprime.kurtosis( 8.0, 6.0 )\nv = base.dists.betaprime.kurtosis( 1.0, 2.8 )\nv = base.dists.betaprime.kurtosis( 1.0, -0.1 )\nv = base.dists.betaprime.kurtosis( -0.1, 5.0 )\nv = base.dists.betaprime.kurtosis( 2.0, NaN )\nv = base.dists.betaprime.kurtosis( NaN, 6.0 )\n"
base.dists.betaprime.logcdf,"var y = base.dists.betaprime.logcdf( 0.5, 1.0, 1.0 )\ny = base.dists.betaprime.logcdf( 0.5, 2.0, 4.0 )\ny = base.dists.betaprime.logcdf( 0.2, 2.0, 2.0 )\ny = base.dists.betaprime.logcdf( 0.8, 4.0, 4.0 )\ny = base.dists.betaprime.logcdf( -0.5, 4.0, 2.0 )\ny = base.dists.betaprime.logcdf( 2.0, -1.0, 0.5 )\ny = base.dists.betaprime.logcdf( 2.0, 0.5, -1.0 )\ny = base.dists.betaprime.logcdf( NaN, 1.0, 1.0 )\ny = base.dists.betaprime.logcdf( 0.0, NaN, 1.0 )\ny = base.dists.betaprime.logcdf( 0.0, 1.0, NaN )\n"
base.dists.betaprime.logcdf.factory,"var mylogcdf = base.dists.betaprime.logcdf.factory( 0.5, 0.5 );\nvar y = mylogcdf( 0.8 )\ny = mylogcdf( 0.3 )\n"
base.dists.betaprime.logpdf,"var y = base.dists.betaprime.logpdf( 0.5, 1.0, 1.0 )\ny = base.dists.betaprime.logpdf( 0.5, 2.0, 4.0 )\ny = base.dists.betaprime.logpdf( 0.2, 2.0, 2.0 )\ny = base.dists.betaprime.logpdf( 0.8, 4.0, 4.0 )\ny = base.dists.betaprime.logpdf( -0.5, 4.0, 2.0 )\ny = base.dists.betaprime.logpdf( 0.5, -1.0, 0.5 )\ny = base.dists.betaprime.logpdf( 0.5, 0.5, -1.0 )\ny = base.dists.betaprime.logpdf( NaN, 1.0, 1.0 )\ny = base.dists.betaprime.logpdf( 0.5, NaN, 1.0 )\ny = base.dists.betaprime.logpdf( 0.5, 1.0, NaN )\n"
base.dists.betaprime.logpdf.factory,"var mylogpdf = base.dists.betaprime.logpdf.factory( 0.5, 0.5 );\nvar y = mylogpdf( 0.8 )\ny = mylogpdf( 0.3 )\n"
base.dists.betaprime.mean,"var v = base.dists.betaprime.mean( 1.0, 2.0 )\nv = base.dists.betaprime.mean( 4.0, 12.0 )\nv = base.dists.betaprime.mean( 8.0, 2.0 )\n"
base.dists.betaprime.mode,"var v = base.dists.betaprime.mode( 1.0, 2.0 )\nv = base.dists.betaprime.mode( 4.0, 12.0 )\nv = base.dists.betaprime.mode( 8.0, 2.0 )\n"
base.dists.betaprime.pdf,"var y = base.dists.betaprime.pdf( 0.5, 1.0, 1.0 )\ny = base.dists.betaprime.pdf( 0.5, 2.0, 4.0 )\ny = base.dists.betaprime.pdf( 0.2, 2.0, 2.0 )\ny = base.dists.betaprime.pdf( 0.8, 4.0, 4.0 )\ny = base.dists.betaprime.pdf( -0.5, 4.0, 2.0 )\ny = base.dists.betaprime.pdf( 0.5, -1.0, 0.5 )\ny = base.dists.betaprime.pdf( 0.5, 0.5, -1.0 )\ny = base.dists.betaprime.pdf( NaN, 1.0, 1.0 )\ny = base.dists.betaprime.pdf( 0.5, NaN, 1.0 )\ny = base.dists.betaprime.pdf( 0.5, 1.0, NaN )\n"
base.dists.betaprime.pdf.factory,"var mypdf = base.dists.betaprime.pdf.factory( 0.5, 0.5 );\nvar y = mypdf( 0.8 )\ny = mypdf( 0.3 )\n"
base.dists.betaprime.quantile,"var y = base.dists.betaprime.quantile( 0.8, 2.0, 1.0 )\ny = base.dists.betaprime.quantile( 0.5, 4.0, 2.0 )\ny = base.dists.betaprime.quantile( 1.1, 1.0, 1.0 )\ny = base.dists.betaprime.quantile( -0.2, 1.0, 1.0 )\ny = base.dists.betaprime.quantile( NaN, 1.0, 1.0 )\ny = base.dists.betaprime.quantile( 0.5, NaN, 1.0 )\ny = base.dists.betaprime.quantile( 0.5, 1.0, NaN )\ny = base.dists.betaprime.quantile( 0.5, -1.0, 1.0 )\ny = base.dists.betaprime.quantile( 0.5, 1.0, -1.0 )\n"
base.dists.betaprime.quantile.factory,"var myQuantile = base.dists.betaprime.quantile.factory( 2.0, 2.0 );\ny = myQuantile( 0.8 )\ny = myQuantile( 0.4 )\n"
base.dists.betaprime.skewness,"var v = base.dists.betaprime.skewness( 2.0, 4.0 )\nv = base.dists.betaprime.skewness( 4.0, 12.0 )\nv = base.dists.betaprime.skewness( 8.0, 4.0 )\nv = base.dists.betaprime.skewness( 1.0, 2.8 )\nv = base.dists.betaprime.skewness( 1.0, -0.1 )\nv = base.dists.betaprime.skewness( -0.1, 4.0 )\nv = base.dists.betaprime.skewness( 2.0, NaN )\nv = base.dists.betaprime.skewness( NaN, 4.0 )\n"
base.dists.betaprime.stdev,"var v = base.dists.betaprime.stdev( 1.0, 2.5 )\nv = base.dists.betaprime.stdev( 4.0, 12.0 )\nv = base.dists.betaprime.stdev( 8.0, 2.5 )\nv = base.dists.betaprime.stdev( 8.0, 1.0 )\nv = base.dists.betaprime.stdev( 1.0, -0.1 )\nv = base.dists.betaprime.stdev( -0.1, 3.0 )\nv = base.dists.betaprime.stdev( 2.0, NaN )\nv = base.dists.betaprime.stdev( NaN, 3.0 )\n"
base.dists.betaprime.variance,"var v = base.dists.betaprime.variance( 1.0, 2.5 )\nv = base.dists.betaprime.variance( 4.0, 12.0 )\nv = base.dists.betaprime.variance( 8.0, 2.5 )\nv = base.dists.betaprime.variance( 8.0, 1.0 )\nv = base.dists.betaprime.variance( 1.0, -0.1 )\nv = base.dists.betaprime.variance( -0.1, 3.0 )\nv = base.dists.betaprime.variance( 2.0, NaN )\nv = base.dists.betaprime.variance( NaN, 3.0 )\n"
base.dists.binomial.Binomial,"var binomial = base.dists.binomial.Binomial( 8, 0.5 );\nbinomial.n\nbinomial.p\nbinomial.kurtosis\nbinomial.mean\nbinomial.median\nbinomial.mode\nbinomial.skewness\nbinomial.stdev\nbinomial.variance\nbinomial.cdf( 2.9 )\nbinomial.logpmf( 3.0 )\nbinomial.mgf( 0.2 )\nbinomial.pmf( 3.0 )\nbinomial.quantile( 0.8 )\n"
base.dists.binomial.cdf,"var y = base.dists.binomial.cdf( 3.0, 20, 0.2 )\ny = base.dists.binomial.cdf( 21.0, 20, 0.2 )\ny = base.dists.binomial.cdf( 5.0, 10, 0.4 )\ny = base.dists.binomial.cdf( 0.0, 10, 0.4 )\ny = base.dists.binomial.cdf( NaN, 20, 0.5 )\ny = base.dists.binomial.cdf( 0.0, NaN, 0.5 )\ny = base.dists.binomial.cdf( 0.0, 20, NaN )\ny = base.dists.binomial.cdf( 2.0, 1.5, 0.5 )\ny = base.dists.binomial.cdf( 2.0, -2.0, 0.5 )\ny = base.dists.binomial.cdf( 2.0, 20, -1.0 )\ny = base.dists.binomial.cdf( 2.0, 20, 1.5 )\n"
base.dists.binomial.cdf.factory,"var mycdf = base.dists.binomial.cdf.factory( 10, 0.5 );\nvar y = mycdf( 3.0 )\ny = mycdf( 1.0 )\n"
base.dists.binomial.entropy,"var v = base.dists.binomial.entropy( 100, 0.1 )\nv = base.dists.binomial.entropy( 20, 0.5 )\nv = base.dists.binomial.entropy( 10.3, 0.5 )\nv = base.dists.binomial.entropy( 20, 1.1 )\nv = base.dists.binomial.entropy( 20, NaN )\n"
base.dists.binomial.kurtosis,"var v = base.dists.binomial.kurtosis( 100, 0.1 )\nv = base.dists.binomial.kurtosis( 20, 0.5 )\nv = base.dists.binomial.kurtosis( 10.3, 0.5 )\nv = base.dists.binomial.kurtosis( 20, 1.1 )\nv = base.dists.binomial.kurtosis( 20, NaN )\n"
base.dists.binomial.logpmf,"var y = base.dists.binomial.logpmf( 3.0, 20, 0.2 )\ny = base.dists.binomial.logpmf( 21.0, 20, 0.2 )\ny = base.dists.binomial.logpmf( 5.0, 10, 0.4 )\ny = base.dists.binomial.logpmf( 0.0, 10, 0.4 )\ny = base.dists.binomial.logpmf( NaN, 20, 0.5 )\ny = base.dists.binomial.logpmf( 0.0, NaN, 0.5 )\ny = base.dists.binomial.logpmf( 0.0, 20, NaN )\ny = base.dists.binomial.logpmf( 2.0, 1.5, 0.5 )\ny = base.dists.binomial.logpmf( 2.0, -2.0, 0.5 )\ny = base.dists.binomial.logpmf( 2.0, 20, -1.0 )\ny = base.dists.binomial.logpmf( 2.0, 20, 1.5 )\n"
base.dists.binomial.logpmf.factory,"var mylogpmf = base.dists.binomial.logpmf.factory( 10, 0.5 );\nvar y = mylogpmf( 3.0 )\ny = mylogpmf( 5.0 )\n"
base.dists.binomial.mean,"var v = base.dists.binomial.mean( 100, 0.1 )\nv = base.dists.binomial.mean( 20, 0.5 )\nv = base.dists.binomial.mean( 10.3, 0.5 )\nv = base.dists.binomial.mean( 20, 1.1 )\nv = base.dists.binomial.mean( 20, NaN )\n"
base.dists.binomial.median,"var v = base.dists.binomial.median( 100, 0.1 )\nv = base.dists.binomial.median( 20, 0.5 )\nv = base.dists.binomial.median( 10.3, 0.5 )\nv = base.dists.binomial.median( 20, 1.1 )\nv = base.dists.binomial.median( 20, NaN )\n"
base.dists.binomial.mgf,"var y = base.dists.binomial.mgf( 0.5, 20, 0.2 )\ny = base.dists.binomial.mgf( 5.0, 20, 0.2 )\ny = base.dists.binomial.mgf( 0.9, 10, 0.4 )\ny = base.dists.binomial.mgf( 0.0, 10, 0.4 )\ny = base.dists.binomial.mgf( NaN, 20, 0.5 )\ny = base.dists.binomial.mgf( 0.0, NaN, 0.5 )\ny = base.dists.binomial.mgf( 0.0, 20, NaN )\ny = base.dists.binomial.mgf( 2.0, 1.5, 0.5 )\ny = base.dists.binomial.mgf( 2.0, -2.0, 0.5 )\ny = base.dists.binomial.mgf( 2.0, 20, -1.0 )\ny = base.dists.binomial.mgf( 2.0, 20, 1.5 )\n"
base.dists.binomial.mgf.factory,"var myMGF = base.dists.binomial.mgf.factory( 10, 0.5 );\nvar y = myMGF( 0.3 )\n"
base.dists.binomial.mode,"var v = base.dists.binomial.mode( 100, 0.1 )\nv = base.dists.binomial.mode( 20, 0.5 )\nv = base.dists.binomial.mode( 10.3, 0.5 )\nv = base.dists.binomial.mode( 20, 1.1 )\nv = base.dists.binomial.mode( 20, NaN )\n"
base.dists.binomial.pmf,"var y = base.dists.binomial.pmf( 3.0, 20, 0.2 )\ny = base.dists.binomial.pmf( 21.0, 20, 0.2 )\ny = base.dists.binomial.pmf( 5.0, 10, 0.4 )\ny = base.dists.binomial.pmf( 0.0, 10, 0.4 )\ny = base.dists.binomial.pmf( NaN, 20, 0.5 )\ny = base.dists.binomial.pmf( 0.0, NaN, 0.5 )\ny = base.dists.binomial.pmf( 0.0, 20, NaN )\ny = base.dists.binomial.pmf( 2.0, 1.5, 0.5 )\ny = base.dists.binomial.pmf( 2.0, -2.0, 0.5 )\ny = base.dists.binomial.pmf( 2.0, 20, -1.0 )\ny = base.dists.binomial.pmf( 2.0, 20, 1.5 )\n"
base.dists.binomial.pmf.factory,"var mypmf = base.dists.binomial.pmf.factory( 10, 0.5 );\nvar y = mypmf( 3.0 )\ny = mypmf( 5.0 )\n"
base.dists.binomial.quantile,"var y = base.dists.binomial.quantile( 0.4, 20, 0.2 )\ny = base.dists.binomial.quantile( 0.8, 20, 0.2 )\ny = base.dists.binomial.quantile( 0.5, 10, 0.4 )\ny = base.dists.binomial.quantile( 0.0, 10, 0.4 )\ny = base.dists.binomial.quantile( 1.0, 10, 0.4 )\ny = base.dists.binomial.quantile( NaN, 20, 0.5 )\ny = base.dists.binomial.quantile( 0.2, NaN, 0.5 )\ny = base.dists.binomial.quantile( 0.2, 20, NaN )\ny = base.dists.binomial.quantile( 0.5, 1.5, 0.5 )\ny = base.dists.binomial.quantile( 0.5, -2.0, 0.5 )\ny = base.dists.binomial.quantile( 0.5, 20, -1.0 )\ny = base.dists.binomial.quantile( 0.5, 20, 1.5 )\n"
base.dists.binomial.quantile.factory,"var myquantile = base.dists.binomial.quantile.factory( 10, 0.5 );\nvar y = myquantile( 0.1 )\ny = myquantile( 0.9 )\n"
base.dists.binomial.skewness,"var v = base.dists.binomial.skewness( 100, 0.1 )\nv = base.dists.binomial.skewness( 20, 0.5 )\nv = base.dists.binomial.skewness( 10.3, 0.5 )\nv = base.dists.binomial.skewness( 20, 1.1 )\nv = base.dists.binomial.skewness( 20, NaN )\n"
base.dists.binomial.stdev,"var v = base.dists.binomial.stdev( 100, 0.1 )\nv = base.dists.binomial.stdev( 20, 0.5 )\nv = base.dists.binomial.stdev( 10.3, 0.5 )\nv = base.dists.binomial.stdev( 20, 1.1 )\nv = base.dists.binomial.stdev( 20, NaN )\n"
base.dists.binomial.variance,"var v = base.dists.binomial.variance( 100, 0.1 )\nv = base.dists.binomial.variance( 20, 0.5 )\nv = base.dists.binomial.variance( 10.3, 0.5 )\nv = base.dists.binomial.variance( 20, 1.1 )\nv = base.dists.binomial.variance( 20, NaN )\n"
base.dists.cauchy.Cauchy,"var cauchy = base.dists.cauchy.Cauchy( 0.0, 1.0 );\ncauchy.x0\ncauchy.gamma\ncauchy.entropy\ncauchy.median\ncauchy.mode\ncauchy.cdf( 0.8 )\ncauchy.logcdf( 1.0 )\ncauchy.logpdf( 1.0 )\ncauchy.pdf( 1.0 )\ncauchy.quantile( 0.8 )\n"
base.dists.cauchy.cdf,"var y = base.dists.cauchy.cdf( 4.0, 0.0, 2.0 )\ny = base.dists.cauchy.cdf( 1.0, 0.0, 2.0 )\ny = base.dists.cauchy.cdf( 1.0, 3.0, 2.0 )\ny = base.dists.cauchy.cdf( NaN, 0.0, 2.0 )\ny = base.dists.cauchy.cdf( 1.0, 2.0, NaN )\ny = base.dists.cauchy.cdf( 1.0, NaN, 3.0 )\n"
base.dists.cauchy.cdf.factory,"var myCDF = base.dists.cauchy.cdf.factory( 1.5, 3.0 );\nvar y = myCDF( 1.0 )\n"
base.dists.cauchy.entropy,"var v = base.dists.cauchy.entropy( 10.0, 7.0 )\nv = base.dists.cauchy.entropy( 22.0, 0.5 )\nv = base.dists.cauchy.entropy( 10.3, -0.5 )\n"
base.dists.cauchy.logcdf,"var y = base.dists.cauchy.logcdf( 4.0, 0.0, 2.0 )\ny = base.dists.cauchy.logcdf( 1.0, 0.0, 2.0 )\ny = base.dists.cauchy.logcdf( 1.0, 3.0, 2.0 )\ny = base.dists.cauchy.logcdf( NaN, 0.0, 2.0 )\ny = base.dists.cauchy.logcdf( 1.0, 2.0, NaN )\ny = base.dists.cauchy.logcdf( 1.0, NaN, 3.0 )\n"
base.dists.cauchy.logcdf.factory,"var mylogCDF = base.dists.cauchy.logcdf.factory( 1.5, 3.0 );\nvar y = mylogCDF( 1.0 )\n"
base.dists.cauchy.logpdf,"var y = base.dists.cauchy.logpdf( 2.0, 1.0, 1.0 )\ny = base.dists.cauchy.logpdf( 4.0, 3.0, 0.1 )\ny = base.dists.cauchy.logpdf( 4.0, 3.0, 3.0 )\ny = base.dists.cauchy.logpdf( NaN, 1.0, 1.0 )\ny = base.dists.cauchy.logpdf( 2.0, NaN, 1.0 )\ny = base.dists.cauchy.logpdf( 2.0, 1.0, NaN )\ny = base.dists.cauchy.logpdf( 2.0, 1.0, -2.0 )\n"
base.dists.cauchy.logpdf.factory,"var mylogPDF = base.dists.cauchy.logpdf.factory( 10.0, 2.0 );\nvar y = mylogPDF( 10.0 )\n"
base.dists.cauchy.median,"var v = base.dists.cauchy.median( 10.0, 5.0 )\nv = base.dists.cauchy.median( 7.0, 0.5 )\nv = base.dists.cauchy.median( 10.3, -0.5 )\n"
base.dists.cauchy.mode,"var v = base.dists.cauchy.mode( 10.0, 5.0 )\nv = base.dists.cauchy.mode( 7.0, 0.5 )\nv = base.dists.cauchy.mode( 10.3, -0.5 )\n"
base.dists.cauchy.pdf,"var y = base.dists.cauchy.pdf( 2.0, 1.0, 1.0 )\ny = base.dists.cauchy.pdf( 4.0, 3.0, 0.1 )\ny = base.dists.cauchy.pdf( 4.0, 3.0, 3.0 )\ny = base.dists.cauchy.pdf( NaN, 1.0, 1.0 )\ny = base.dists.cauchy.pdf( 2.0, NaN, 1.0 )\ny = base.dists.cauchy.pdf( 2.0, 1.0, NaN )\ny = base.dists.cauchy.pdf( 2.0, 1.0, -2.0 )\n"
base.dists.cauchy.pdf.factory,"var myPDF = base.dists.cauchy.pdf.factory( 10.0, 2.0 );\nvar y = myPDF( 10.0 )\n"
base.dists.cauchy.quantile,"var y = base.dists.cauchy.quantile( 0.3, 2.0, 2.0 )\ny = base.dists.cauchy.quantile( 0.8, 10, 2.0 )\ny = base.dists.cauchy.quantile( 0.1, 10.0, 2.0 )\ny = base.dists.cauchy.quantile( 1.1, 0.0, 1.0 )\ny = base.dists.cauchy.quantile( -0.2, 0.0, 1.0 )\ny = base.dists.cauchy.quantile( NaN, 0.0, 1.0 )\ny = base.dists.cauchy.quantile( 0.0, NaN, 1.0 )\ny = base.dists.cauchy.quantile( 0.0, 0.0, NaN )\ny = base.dists.cauchy.quantile( 0.5, 0.0, -1.0 )\n"
base.dists.cauchy.quantile.factory,"var myQuantile = base.dists.cauchy.quantile.factory( 10.0, 2.0 );\nvar y = myQuantile( 0.5 )\n"
base.dists.chi.cdf,"var y = base.dists.chi.cdf( 2.0, 3.0 )\ny = base.dists.chi.cdf( 1.0, 0.5 )\ny = base.dists.chi.cdf( -1.0, 4.0 )\ny = base.dists.chi.cdf( NaN, 1.0 )\ny = base.dists.chi.cdf( 0.0, NaN )\ny = base.dists.chi.cdf( 2.0, -1.0 )\ny = base.dists.chi.cdf( 2.0, 0.0 )\ny = base.dists.chi.cdf( -2.0, 0.0 )\ny = base.dists.chi.cdf( 0.0, 0.0 )\n"
base.dists.chi.cdf.factory,"var mycdf = base.dists.chi.cdf.factory( 1.0 );\nvar y = mycdf( 2.0 )\ny = mycdf( 1.2 )\n"
base.dists.chi.Chi,"var chi = base.dists.chi.Chi( 6.0 );\nchi.k\nchi.entropy\nchi.kurtosis\nchi.mean\nchi.mode\nchi.skewness\nchi.stdev\nchi.variance\nchi.cdf( 1.0 )\nchi.logpdf( 1.5 )\nchi.pdf( 1.5 )\nchi.quantile( 0.5 )\n"
base.dists.chi.entropy,"var v = base.dists.chi.entropy( 11.0 )\nv = base.dists.chi.entropy( 1.5 )\n"
base.dists.chi.kurtosis,"var v = base.dists.chi.kurtosis( 9.0 )\nv = base.dists.chi.kurtosis( 1.5 )\n"
base.dists.chi.logpdf,"var y = base.dists.chi.logpdf( 0.3, 4.0 )\ny = base.dists.chi.logpdf( 0.7, 0.7 )\ny = base.dists.chi.logpdf( -1.0, 0.5 )\ny = base.dists.chi.logpdf( 0.0, NaN )\ny = base.dists.chi.logpdf( NaN, 2.0 )\ny = base.dists.chi.logpdf( 2.0, -1.0 )\ny = base.dists.chi.logpdf( 2.0, 0.0, 2.0 )\ny = base.dists.chi.logpdf( 0.0, 0.0, 2.0 )\n"
base.dists.chi.logpdf.factory,"var mylogPDF = base.dists.chi.logpdf.factory( 6.0 );\nvar y = mylogPDF( 3.0 )\n"
base.dists.chi.mean,"var v = base.dists.chi.mean( 11.0 )\nv = base.dists.chi.mean( 4.5 )\n"
base.dists.chi.mode,"var v = base.dists.chi.mode( 11.0 )\nv = base.dists.chi.mode( 1.5 )\n"
base.dists.chi.pdf,"var y = base.dists.chi.pdf( 0.3, 4.0 )\ny = base.dists.chi.pdf( 0.7, 0.7 )\ny = base.dists.chi.pdf( -1.0, 0.5 )\ny = base.dists.chi.pdf( 0.0, NaN )\ny = base.dists.chi.pdf( NaN, 2.0 )\ny = base.dists.chi.pdf( 2.0, -1.0 )\ny = base.dists.chi.pdf( 2.0, 0.0, 2.0 )\ny = base.dists.chi.pdf( 0.0, 0.0, 2.0 )\n"
base.dists.chi.pdf.factory,"var myPDF = base.dists.chi.pdf.factory( 6.0 );\nvar y = myPDF( 3.0 )\n"
base.dists.chi.quantile,"var y = base.dists.chi.quantile( 0.8, 1.0 )\ny = base.dists.chi.quantile( 0.5, 4.0 )\ny = base.dists.chi.quantile( 0.8, 0.1 )\ny = base.dists.chi.quantile( -0.2, 0.5 )\ny = base.dists.chi.quantile( 1.1, 0.5 )\ny = base.dists.chi.quantile( NaN, 1.0 )\ny = base.dists.chi.quantile( 0.0, NaN )\ny = base.dists.chi.quantile( 0.5, -1.0 )\ny = base.dists.chi.quantile( 0.3, 0.0 )\ny = base.dists.chi.quantile( 0.9, 0.0 )\n"
base.dists.chi.quantile.factory,"var myquantile = base.dists.chi.quantile.factory( 2.0 );\nvar y = myquantile( 0.3 )\ny = myquantile( 0.7 )\n"
base.dists.chi.skewness,"var v = base.dists.chi.skewness( 11.0 )\nv = base.dists.chi.skewness( 1.5 )\n"
base.dists.chi.stdev,"var v = base.dists.chi.stdev( 11.0 )\nv = base.dists.chi.stdev( 1.5 )\n"
base.dists.chi.variance,"var v = base.dists.chi.variance( 11.0 )\nv = base.dists.chi.variance( 1.5 )\n"
base.dists.chisquare.cdf,"var y = base.dists.chisquare.cdf( 2.0, 3.0 )\ny = base.dists.chisquare.cdf( 1.0, 0.5 )\ny = base.dists.chisquare.cdf( -1.0, 4.0 )\ny = base.dists.chisquare.cdf( NaN, 1.0 )\ny = base.dists.chisquare.cdf( 0.0, NaN )\ny = base.dists.chisquare.cdf( 2.0, -1.0 )\ny = base.dists.chisquare.cdf( 2.0, 0.0 )\ny = base.dists.chisquare.cdf( -2.0, 0.0 )\ny = base.dists.chisquare.cdf( 0.0, 0.0 )\n"
base.dists.chisquare.cdf.factory,"var mycdf = base.dists.chisquare.cdf.factory( 1.0 );\nvar y = mycdf( 2.0 )\ny = mycdf( 1.2 )\n"
base.dists.chisquare.ChiSquare,"var chisquare = base.dists.chisquare.ChiSquare( 6.0 );\nchisquare.k\nchisquare.entropy\nchisquare.kurtosis\nchisquare.mean\nchisquare.mode\nchisquare.skewness\nchisquare.stdev\nchisquare.variance\nchisquare.cdf( 3.0 )\nchisquare.mgf( 0.2 )\nchisquare.pdf( 1.5 )\nchisquare.quantile( 0.5 )\n"
base.dists.chisquare.entropy,"var v = base.dists.chisquare.entropy( 11.0 )\nv = base.dists.chisquare.entropy( 1.5 )\n"
base.dists.chisquare.kurtosis,"var v = base.dists.chisquare.kurtosis( 9.0 )\nv = base.dists.chisquare.kurtosis( 1.5 )\n"
base.dists.chisquare.logpdf,"var y = base.dists.chisquare.logpdf( 0.3, 4.0 )\ny = base.dists.chisquare.logpdf( 0.7, 0.7 )\ny = base.dists.chisquare.logpdf( -1.0, 0.5 )\ny = base.dists.chisquare.logpdf( 0.0, NaN )\ny = base.dists.chisquare.logpdf( NaN, 2.0 )\ny = base.dists.chisquare.logpdf( 2.0, -1.0 )\ny = base.dists.chisquare.logpdf( 2.0, 0.0, 2.0 )\ny = base.dists.chisquare.logpdf( 0.0, 0.0, 2.0 )\n"
base.dists.chisquare.logpdf.factory,"var myLogPDF = base.dists.chisquare.logpdf.factory( 6.0 );\nvar y = myLogPDF( 3.0 )\n"
base.dists.chisquare.mean,"var v = base.dists.chisquare.mean( 11.0 )\nv = base.dists.chisquare.mean( 4.5 )\n"
base.dists.chisquare.mgf,"var y = base.dists.chisquare.mgf( 0.4, 2 )\ny = base.dists.chisquare.mgf( -1.0, 5.0 )\ny = base.dists.chisquare.mgf( 0.0, 10.0 )\n"
base.dists.chisquare.mgf.factory,"var mymgf = base.dists.chisquare.mgf.factory( 1.0 );\nvar y = mymgf( 0.2 )\ny = mymgf( 0.4 )\n"
base.dists.chisquare.mode,"var v = base.dists.chisquare.mode( 11.0 )\nv = base.dists.chisquare.mode( 1.5 )\n"
base.dists.chisquare.pdf,"var y = base.dists.chisquare.pdf( 0.3, 4.0 )\ny = base.dists.chisquare.pdf( 0.7, 0.7 )\ny = base.dists.chisquare.pdf( -1.0, 0.5 )\ny = base.dists.chisquare.pdf( 0.0, NaN )\ny = base.dists.chisquare.pdf( NaN, 2.0 )\ny = base.dists.chisquare.pdf( 2.0, -1.0 )\ny = base.dists.chisquare.pdf( 2.0, 0.0, 2.0 )\ny = base.dists.chisquare.pdf( 0.0, 0.0, 2.0 )\n"
base.dists.chisquare.pdf.factory,"var myPDF = base.dists.chisquare.pdf.factory( 6.0 );\nvar y = myPDF( 3.0 )\n"
base.dists.chisquare.quantile,"var y = base.dists.chisquare.quantile( 0.8, 1.0 )\ny = base.dists.chisquare.quantile( 0.5, 4.0 )\ny = base.dists.chisquare.quantile( 0.8, 0.1 )\ny = base.dists.chisquare.quantile( -0.2, 0.5 )\ny = base.dists.chisquare.quantile( 1.1, 0.5 )\ny = base.dists.chisquare.quantile( NaN, 1.0 )\ny = base.dists.chisquare.quantile( 0.0, NaN )\ny = base.dists.chisquare.quantile( 0.5, -1.0 )\ny = base.dists.chisquare.quantile( 0.3, 0.0 )\ny = base.dists.chisquare.quantile( 0.9, 0.0 )\n"
base.dists.chisquare.quantile.factory,"var myquantile = base.dists.chisquare.quantile.factory( 2.0 );\nvar y = myquantile( 0.3 )\ny = myquantile( 0.7 )\n"
base.dists.chisquare.skewness,"var v = base.dists.chisquare.skewness( 11.0 )\nv = base.dists.chisquare.skewness( 1.5 )\n"
base.dists.chisquare.stdev,"var v = base.dists.chisquare.stdev( 11.0 )\nv = base.dists.chisquare.stdev( 1.5 )\n"
base.dists.chisquare.variance,"var v = base.dists.chisquare.variance( 11.0 )\nv = base.dists.chisquare.variance( 1.5 )\n"
base.dists.cosine.cdf,"var y = base.dists.cosine.cdf( 2.0, 0.0, 3.0 )\ny = base.dists.cosine.cdf( 9.0, 10.0, 3.0 )\ny = base.dists.cosine.cdf( 2.0, 0.0, NaN )\ny = base.dists.cosine.cdf( 2.0, NaN, 1.0 )\ny = base.dists.cosine.cdf( NaN, 0.0, 1.0 )\ny = base.dists.cosine.cdf( 2.0, 8.0, 0.0 )\ny = base.dists.cosine.cdf( 8.0, 8.0, 0.0 )\ny = base.dists.cosine.cdf( 10.0, 8.0, 0.0 )\n"
base.dists.cosine.cdf.factory,"var mycdf = base.dists.cosine.cdf.factory( 3.0, 1.5 );\nvar y = mycdf( 1.9 )\n"
base.dists.cosine.Cosine,"var cosine = base.dists.cosine.Cosine( -2.0, 3.0 );\ncosine.mu\ncosine.s\ncosine.kurtosis\ncosine.mean\ncosine.median\ncosine.mode\ncosine.skewness\ncosine.stdev\ncosine.variance\ncosine.cdf( 0.5 )\ncosine.logcdf( 0.5 )\ncosine.logpdf( -1.0 )\ncosine.mgf( 0.2 )\ncosine.pdf( -2.0 )\ncosine.quantile( 0.9 )\n"
base.dists.cosine.kurtosis,"var y = base.dists.cosine.kurtosis( 0.0, 1.0 )\ny = base.dists.cosine.kurtosis( 4.0, 2.0 )\ny = base.dists.cosine.kurtosis( NaN, 1.0 )\ny = base.dists.cosine.kurtosis( 0.0, NaN )\ny = base.dists.cosine.kurtosis( 0.0, 0.0 )\n"
base.dists.cosine.logcdf,"var y = base.dists.cosine.logcdf( 2.0, 0.0, 3.0 )\ny = base.dists.cosine.logcdf( 9.0, 10.0, 3.0 )\ny = base.dists.cosine.logcdf( 2.0, 0.0, NaN )\ny = base.dists.cosine.logcdf( 2.0, NaN, 1.0 )\ny = base.dists.cosine.logcdf( NaN, 0.0, 1.0 )\ny = base.dists.cosine.logcdf( 2.0, 8.0, 0.0 )\ny = base.dists.cosine.logcdf( 8.0, 8.0, 0.0 )\ny = base.dists.cosine.logcdf( 10.0, 8.0, 0.0 )\n"
base.dists.cosine.logcdf.factory,"var mylogcdf = base.dists.cosine.logcdf.factory( 3.0, 1.5 );\nvar y = mylogcdf( 1.9 )\n"
base.dists.cosine.logpdf,"var y = base.dists.cosine.logpdf( 2.0, 0.0, 3.0 )\ny = base.dists.cosine.logpdf( -1.0, 2.0, 4.0 )\ny = base.dists.cosine.logpdf( NaN, 0.0, 1.0 )\ny = base.dists.cosine.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.cosine.logpdf( 0.0, 0.0, NaN )\ny = base.dists.cosine.logpdf( 2.0, 0.0, -1.0 )\ny = base.dists.cosine.logpdf( 2.0, 8.0, 0.0 )\ny = base.dists.cosine.logpdf( 8.0, 8.0, 0.0 )\n"
base.dists.cosine.logpdf.factory,"var mylogpdf = base.dists.cosine.logpdf.factory( 10.0, 2.0 );\nvar y = mylogpdf( 10.0 )\n"
base.dists.cosine.mean,"var y = base.dists.cosine.mean( 0.0, 1.0 )\ny = base.dists.cosine.mean( 4.0, 2.0 )\ny = base.dists.cosine.mean( NaN, 1.0 )\ny = base.dists.cosine.mean( 0.0, NaN )\ny = base.dists.cosine.mean( 0.0, 0.0 )\n"
base.dists.cosine.median,"var y = base.dists.cosine.median( 0.0, 1.0 )\ny = base.dists.cosine.median( 4.0, 2.0 )\ny = base.dists.cosine.median( NaN, 1.0 )\ny = base.dists.cosine.median( 0.0, NaN )\ny = base.dists.cosine.median( 0.0, 0.0 )\n"
base.dists.cosine.mgf,"var y = base.dists.cosine.mgf( 2.0, 0.0, 3.0 )\ny = base.dists.cosine.mgf( 9.0, 10.0, 3.0 )\ny = base.dists.cosine.mgf( 0.5, 0.0, NaN )\ny = base.dists.cosine.mgf( 0.5, NaN, 1.0 )\ny = base.dists.cosine.mgf( NaN, 0.0, 1.0 )\n"
base.dists.cosine.mgf.factory,"var mymgf = base.dists.cosine.mgf.factory( 3.0, 1.5 );\nvar y = mymgf( 1.9 )\n"
base.dists.cosine.mode,"var y = base.dists.cosine.mode( 0.0, 1.0 )\ny = base.dists.cosine.mode( 4.0, 2.0 )\ny = base.dists.cosine.mode( NaN, 1.0 )\ny = base.dists.cosine.mode( 0.0, NaN )\ny = base.dists.cosine.mode( 0.0, 0.0 )\n"
base.dists.cosine.pdf,"var y = base.dists.cosine.pdf( 2.0, 0.0, 3.0 )\ny = base.dists.cosine.pdf( 2.4, 4.0, 2.0 )\ny = base.dists.cosine.pdf( NaN, 0.0, 1.0 )\ny = base.dists.cosine.pdf( 0.0, NaN, 1.0 )\ny = base.dists.cosine.pdf( 0.0, 0.0, NaN )\ny = base.dists.cosine.pdf( 2.0, 0.0, -1.0 )\ny = base.dists.cosine.pdf( 2.0, 8.0, 0.0 )\ny = base.dists.cosine.pdf( 8.0, 8.0, 0.0 )\n"
base.dists.cosine.pdf.factory,"var myPDF = base.dists.cosine.pdf.factory( 0.0, 3.0 );\nvar y = myPDF( 2.0 )\n"
base.dists.cosine.quantile,"var y = base.dists.cosine.quantile( 0.8, 0.0, 1.0 )\ny = base.dists.cosine.quantile( 0.5, 4.0, 2.0 )\ny = base.dists.cosine.quantile( 1.1, 0.0, 1.0 )\ny = base.dists.cosine.quantile( -0.2, 0.0, 1.0 )\ny = base.dists.cosine.quantile( NaN, 0.0, 1.0 )\ny = base.dists.cosine.quantile( 0.0, NaN, 1.0 )\ny = base.dists.cosine.quantile( 0.0, 0.0, NaN )\ny = base.dists.cosine.quantile( 0.5, 0.0, -1.0 )\n"
base.dists.cosine.quantile.factory,"var myQuantile = base.dists.cosine.quantile.factory( 10.0, 2.0 );\nvar y = myQuantile( 0.3 )\n"
base.dists.cosine.skewness,"var y = base.dists.cosine.skewness( 0.0, 1.0 )\ny = base.dists.cosine.skewness( 4.0, 2.0 )\ny = base.dists.cosine.skewness( NaN, 1.0 )\ny = base.dists.cosine.skewness( 0.0, NaN )\ny = base.dists.cosine.skewness( 0.0, 0.0 )\n"
base.dists.cosine.stdev,"var y = base.dists.cosine.stdev( 0.0, 1.0 )\ny = base.dists.cosine.stdev( 4.0, 2.0 )\ny = base.dists.cosine.stdev( NaN, 1.0 )\ny = base.dists.cosine.stdev( 0.0, NaN )\ny = base.dists.cosine.stdev( 0.0, 0.0 )\n"
base.dists.cosine.variance,"var y = base.dists.cosine.variance( 0.0, 1.0 )\ny = base.dists.cosine.variance( 4.0, 2.0 )\ny = base.dists.cosine.variance( NaN, 1.0 )\ny = base.dists.cosine.variance( 0.0, NaN )\ny = base.dists.cosine.variance( 0.0, 0.0 )\n"
base.dists.degenerate.cdf,"var y = base.dists.degenerate.cdf( 2.0, 3.0 )\ny = base.dists.degenerate.cdf( 4.0, 3.0 )\ny = base.dists.degenerate.cdf( 3.0, 3.0 )\ny = base.dists.degenerate.cdf( NaN, 0.0 )\ny = base.dists.degenerate.cdf( 0.0, NaN )\n"
base.dists.degenerate.cdf.factory,"var myCDF = base.dists.degenerate.cdf.factory( 5.0 );\nvar y = myCDF( 3.0 )\ny = myCDF( 6.0 )\n"
base.dists.degenerate.Degenerate,"var degenerate = base.dists.degenerate.Degenerate( 2.0 );\ndegenerate.mu\ndegenerate.entropy\ndegenerate.mean\ndegenerate.mode\ndegenerate.median\ndegenerate.stdev\ndegenerate.variance\ndegenerate.cdf( 0.5 )\ndegenerate.logcdf( 2.5 )\ndegenerate.logpdf( 0.5 )\ndegenerate.logpmf( 2.5 )\ndegenerate.mgf( 0.2 )\ndegenerate.pdf( 2.0 )\ndegenerate.pmf( 2.0 )\ndegenerate.quantile( 0.7 )\n"
base.dists.degenerate.entropy,"var v = base.dists.degenerate.entropy( 20.0 )\nv = base.dists.degenerate.entropy( -10.0 )\n"
base.dists.degenerate.logcdf,"var y = base.dists.degenerate.logcdf( 2.0, 3.0 )\ny = base.dists.degenerate.logcdf( 4.0, 3.0 )\ny = base.dists.degenerate.logcdf( 3.0, 3.0 )\ny = base.dists.degenerate.logcdf( NaN, 0.0 )\ny = base.dists.degenerate.logcdf( 0.0, NaN )\n"
base.dists.degenerate.logcdf.factory,"var mylogcdf = base.dists.degenerate.logcdf.factory( 5.0 );\nvar y = mylogcdf( 3.0 )\ny = mylogcdf( 6.0 )\n"
base.dists.degenerate.logpdf,"var y = base.dists.degenerate.logpdf( 2.0, 3.0 )\ny = base.dists.degenerate.logpdf( 3.0, 3.0 )\ny = base.dists.degenerate.logpdf( NaN, 0.0 )\ny = base.dists.degenerate.logpdf( 0.0, NaN )\n"
base.dists.degenerate.logpdf.factory,"var mylogPDF = base.dists.degenerate.logpdf.factory( 10.0 );\nvar y = mylogPDF( 10.0 )\n"
base.dists.degenerate.logpmf,"var y = base.dists.degenerate.logpmf( 2.0, 3.0 )\ny = base.dists.degenerate.logpmf( 3.0, 3.0 )\ny = base.dists.degenerate.logpmf( NaN, 0.0 )\ny = base.dists.degenerate.logpmf( 0.0, NaN )\n"
base.dists.degenerate.logpmf.factory,"var mylogPMF = base.dists.degenerate.logpmf.factory( 10.0 );\nvar y = mylogPMF( 10.0 )\n"
base.dists.degenerate.mean,"var v = base.dists.degenerate.mean( 20.0 )\nv = base.dists.degenerate.mean( -10.0 )\n"
base.dists.degenerate.median,"var v = base.dists.degenerate.median( 20.0 )\nv = base.dists.degenerate.median( -10.0 )\n"
base.dists.degenerate.mgf,"var y = base.dists.degenerate.mgf( 1.0, 1.0 )\ny = base.dists.degenerate.mgf( 2.0, 3.0 )\ny = base.dists.degenerate.mgf( NaN, 0.0 )\ny = base.dists.degenerate.mgf( 0.0, NaN )\n"
base.dists.degenerate.mgf.factory,"var myMGF = base.dists.degenerate.mgf.factory( 10.0 );\nvar y = myMGF( 0.1 )\n"
base.dists.degenerate.mode,"var v = base.dists.degenerate.mode( 20.0 )\nv = base.dists.degenerate.mode( -10.0 )\n"
base.dists.degenerate.pdf,"var y = base.dists.degenerate.pdf( 2.0, 3.0 )\ny = base.dists.degenerate.pdf( 3.0, 3.0 )\ny = base.dists.degenerate.pdf( NaN, 0.0 )\ny = base.dists.degenerate.pdf( 0.0, NaN )\n"
base.dists.degenerate.pdf.factory,"var myPDF = base.dists.degenerate.pdf.factory( 10.0 );\nvar y = myPDF( 10.0 )\n"
base.dists.degenerate.pmf,"var y = base.dists.degenerate.pmf( 2.0, 3.0 )\ny = base.dists.degenerate.pmf( 3.0, 3.0 )\ny = base.dists.degenerate.pmf( NaN, 0.0 )\ny = base.dists.degenerate.pmf( 0.0, NaN )\n"
base.dists.degenerate.pmf.factory,"var myPMF = base.dists.degenerate.pmf.factory( 10.0 );\nvar y = myPMF( 10.0 )\n"
base.dists.degenerate.quantile,"var y = base.dists.degenerate.quantile( 0.5, 2.0 )\ny = base.dists.degenerate.quantile( 0.9, 4.0 )\ny = base.dists.degenerate.quantile( 1.1, 0.0 )\ny = base.dists.degenerate.quantile( -0.2, 0.0 )\ny = base.dists.degenerate.quantile( NaN, 0.0 )\ny = base.dists.degenerate.quantile( 0.0, NaN )\n"
base.dists.degenerate.quantile.factory,"var myQuantile = base.dists.degenerate.quantile.factory( 10.0, 2.0 );\nvar y = myQuantile( 0.5 )\n"
base.dists.degenerate.stdev,"var v = base.dists.degenerate.stdev( 20.0 )\nv = base.dists.degenerate.stdev( -10.0 )\n"
base.dists.degenerate.variance,"var v = base.dists.degenerate.variance( 20.0 )\nv = base.dists.degenerate.variance( -10.0 )\n"
base.dists.discreteUniform.cdf,"var y = base.dists.discreteUniform.cdf( 9.0, 0, 10 )\ny = base.dists.discreteUniform.cdf( 0.5, 0, 2 )\ny = base.dists.discreteUniform.cdf( PINF, 2, 4 )\ny = base.dists.discreteUniform.cdf( NINF, 2, 4 )\ny = base.dists.discreteUniform.cdf( NaN, 0, 1 )\ny = base.dists.discreteUniform.cdf( 0.0, NaN, 1 )\ny = base.dists.discreteUniform.cdf( 0.0, 0, NaN )\ny = base.dists.discreteUniform.cdf( 2.0, 1, 0 )\n"
base.dists.discreteUniform.cdf.factory,"var mycdf = base.dists.discreteUniform.cdf.factory( 0, 10 );\nvar y = mycdf( 0.5 )\ny = mycdf( 8.0 )\n"
base.dists.discreteUniform.DiscreteUniform,"var discreteUniform = base.dists.discreteUniform.DiscreteUniform( -2, 2 );\ndiscreteUniform.a\ndiscreteUniform.b\ndiscreteUniform.entropy\ndiscreteUniform.kurtosis\ndiscreteUniform.mean\ndiscreteUniform.median\ndiscreteUniform.skewness\ndiscreteUniform.stdev\ndiscreteUniform.variance\ndiscreteUniform.cdf( 0.8 )\ndiscreteUniform.logcdf( 0.5 )\ndiscreteUniform.logpmf( 1.0 )\ndiscreteUniform.mgf( 0.8 )\ndiscreteUniform.pmf( 0.0 )\ndiscreteUniform.quantile( 0.8 )\n"
base.dists.discreteUniform.kurtosis,"var v = base.dists.discreteUniform.kurtosis( 0, 1 )\nv = base.dists.discreteUniform.kurtosis( 4, 12 )\nv = base.dists.discreteUniform.kurtosis( -4, 8 )\n"
base.dists.discreteUniform.logcdf,"var y = base.dists.discreteUniform.logcdf( 9.0, 0, 10 )\ny = base.dists.discreteUniform.logcdf( 0.5, 0, 2 )\ny = base.dists.discreteUniform.logcdf( PINF, 2, 4 )\ny = base.dists.discreteUniform.logcdf( NINF, 2, 4 )\ny = base.dists.discreteUniform.logcdf( NaN, 0, 1 )\ny = base.dists.discreteUniform.logcdf( 0.0, NaN, 1 )\ny = base.dists.discreteUniform.logcdf( 0.0, 0, NaN )\ny = base.dists.discreteUniform.logcdf( 2.0, 1, 0 )\n"
base.dists.discreteUniform.logcdf.factory,"var myLogCDF = base.dists.discreteUniform.logcdf.factory( 0, 10 );\nvar y = myLogCDF( 0.5 )\ny = myLogCDF( 8.0 )\n"
base.dists.discreteUniform.logpmf,"var y = base.dists.discreteUniform.logpmf( 2.0, 0, 4 )\ny = base.dists.discreteUniform.logpmf( 5.0, 0, 4 )\ny = base.dists.discreteUniform.logpmf( 3.0, -4, 4 )\ny = base.dists.discreteUniform.logpmf( NaN, 0, 1 )\ny = base.dists.discreteUniform.logpmf( 0.0, NaN, 1 )\ny = base.dists.discreteUniform.logpmf( 0.0, 0, NaN )\ny = base.dists.discreteUniform.logpmf( 2.0, 3, 1 )\ny = base.dists.discreteUniform.logpmf( 2.0, 1, 2.4 )\n"
base.dists.discreteUniform.logpmf.factory,"var myLogPMF = base.dists.discreteUniform.logpmf.factory( 6, 7 );\nvar y = myLogPMF( 7.0 )\ny = myLogPMF( 5.0 )\n"
base.dists.discreteUniform.mean,"var v = base.dists.discreteUniform.mean( -2, 2 )\nv = base.dists.discreteUniform.mean( 4, 12 )\nv = base.dists.discreteUniform.mean( 2, 8 )\n"
base.dists.discreteUniform.median,"var v = base.dists.discreteUniform.median( -2, 2 )\nv = base.dists.discreteUniform.median( 4, 12 )\nv = base.dists.discreteUniform.median( 2, 8 )\n"
base.dists.discreteUniform.mgf,"var y = base.dists.discreteUniform.mgf( 2.0, 0, 4 )\ny = base.dists.discreteUniform.mgf( -0.2, 0, 4 )\ny = base.dists.discreteUniform.mgf( 2.0, 0, 1 )\ny = base.dists.discreteUniform.mgf( 0.5, 3, 2 )\ny = base.dists.discreteUniform.mgf( NaN, 0, 1  )\ny = base.dists.discreteUniform.mgf( 0.0, NaN, 1 )\ny = base.dists.discreteUniform.mgf( 0.0, 0, NaN )\n"
base.dists.discreteUniform.mgf.factory,"var mymgf = base.dists.discreteUniform.mgf.factory( 6, 7 );\nvar y = mymgf( 0.1 )\ny = mymgf( 1.1 )\n"
base.dists.discreteUniform.pmf,"var y = base.dists.discreteUniform.pmf( 2.0, 0, 4 )\ny = base.dists.discreteUniform.pmf( 5.0, 0, 4 )\ny = base.dists.discreteUniform.pmf( 3.0, -4, 4 )\ny = base.dists.discreteUniform.pmf( NaN, 0, 1 )\ny = base.dists.discreteUniform.pmf( 0.0, NaN, 1 )\ny = base.dists.discreteUniform.pmf( 0.0, 0, NaN )\ny = base.dists.discreteUniform.pmf( 2.0, 3, 1 )\ny = base.dists.discreteUniform.pmf( 2.0, 1, 2.4 )\n"
base.dists.discreteUniform.pmf.factory,"var myPMF = base.dists.discreteUniform.pmf.factory( 6, 7 );\nvar y = myPMF( 7.0 )\ny = myPMF( 5.0 )\n"
base.dists.discreteUniform.quantile,"var y = base.dists.discreteUniform.quantile( 0.8, 0, 1 )\ny = base.dists.discreteUniform.quantile( 0.5, 0.0, 10.0 )\ny = base.dists.discreteUniform.quantile( 1.1, 0, 4 )\ny = base.dists.discreteUniform.quantile( -0.2, 0, 4 )\ny = base.dists.discreteUniform.quantile( NaN, -2, 2 )\ny = base.dists.discreteUniform.quantile( 0.1, NaN, 2 )\ny = base.dists.discreteUniform.quantile( 0.1, -2, NaN )\ny = base.dists.discreteUniform.quantile( 0.5, 2, 1 )\n"
base.dists.discreteUniform.quantile.factory,"var myQuantile = base.dists.discreteUniform.quantile.factory( 0, 4 );\nvar y = myQuantile( 0.8 )\n"
base.dists.discreteUniform.skewness,"var v = base.dists.discreteUniform.skewness( -2, 2 )\nv = base.dists.discreteUniform.skewness( 4, 12 )\nv = base.dists.discreteUniform.skewness( 2, 8 )\n"
base.dists.discreteUniform.stdev,"var v = base.dists.discreteUniform.stdev( 0, 1 )\nv = base.dists.discreteUniform.stdev( 4, 12 )\nv = base.dists.discreteUniform.stdev( 2, 8 )\n"
base.dists.discreteUniform.variance,"var v = base.dists.discreteUniform.variance( 0, 1 )\nv = base.dists.discreteUniform.variance( 4, 12 )\nv = base.dists.discreteUniform.variance( 2, 8 )\n"
base.dists.erlang.cdf,"var y = base.dists.erlang.cdf( 2.0, 1, 1.0 )\ny = base.dists.erlang.cdf( 2.0, 3, 1.0 )\ny = base.dists.erlang.cdf( 2.0, 2.5, 1.0 )\ny = base.dists.erlang.cdf( -1.0, 2, 2.0 )\ny = base.dists.erlang.cdf( PINF, 4, 2.0 )\ny = base.dists.erlang.cdf( NINF, 4, 2.0 )\ny = base.dists.erlang.cdf( NaN, 0, 1.0 )\ny = base.dists.erlang.cdf( 0.0, NaN, 1.0 )\ny = base.dists.erlang.cdf( 0.0, 0, NaN )\ny = base.dists.erlang.cdf( 2.0, -1, 1.0 )\ny = base.dists.erlang.cdf( 2.0, 1, -1.0 )\n"
base.dists.erlang.cdf.factory,"var mycdf = base.dists.erlang.cdf.factory( 2, 0.5 );\nvar y = mycdf( 6.0 )\ny = mycdf( 2.0 )\n"
base.dists.erlang.entropy,"var v = base.dists.erlang.entropy( 1, 1.0 )\nv = base.dists.erlang.entropy( 4, 12.0 )\nv = base.dists.erlang.entropy( 8, 2.0 )\n"
base.dists.erlang.Erlang,"var erlang = base.dists.erlang.Erlang( 6, 5.0 );\nerlang.k\nerlang.lambda\nerlang.entropy\nerlang.kurtosis\nerlang.mean\nerlang.mode\nerlang.skewness\nerlang.stdev\nerlang.variance\nerlang.cdf( 3.0 )\nerlang.logpdf( 3.0 )\nerlang.mgf( -0.5 )\nerlang.pdf( 3.0 )\nerlang.quantile( 0.8 )\n"
base.dists.erlang.kurtosis,"var v = base.dists.erlang.kurtosis( 1, 1.0 )\nv = base.dists.erlang.kurtosis( 4, 12.0 )\nv = base.dists.erlang.kurtosis( 8, 2.0 )\n"
base.dists.erlang.logpdf,"var y = base.dists.erlang.logpdf( 0.1, 1, 1.0 )\ny = base.dists.erlang.logpdf( 0.5, 2, 2.5 )\ny = base.dists.erlang.logpdf( -1.0, 4, 2.0 )\ny = base.dists.erlang.logpdf( NaN, 1, 1.0 )\ny = base.dists.erlang.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.erlang.logpdf( 0.0, 1, NaN )\ny = base.dists.erlang.logpdf( 2.0, -2, 0.5 )\ny = base.dists.erlang.logpdf( 2.0, 0.5, 0.5 )\ny = base.dists.erlang.logpdf( 2.0, 0.0, 2.0 )\ny = base.dists.erlang.logpdf( 0.0, 0.0, 2.0 )\ny = base.dists.erlang.logpdf( 2.0, 1, 0.0 )\ny = base.dists.erlang.logpdf( 2.0, 1, -1.0 )\n"
base.dists.erlang.logpdf.factory,"var myLogPDF = base.dists.erlang.logpdf.factory( 6.0, 7.0 );\ny = myLogPDF( 7.0 )\n"
base.dists.erlang.mean,"var v = base.dists.erlang.mean( 1, 1.0 )\nv = base.dists.erlang.mean( 4, 12.0 )\nv = base.dists.erlang.mean( 8, 2.0 )\n"
base.dists.erlang.mgf,"var y = base.dists.erlang.mgf( 0.3, 1, 1.0 )\ny = base.dists.erlang.mgf( 2.0, 2, 3.0 )\ny = base.dists.erlang.mgf( -1.0, 2, 2.0 )\ny = base.dists.erlang.mgf( NaN, 1, 1.0 )\ny = base.dists.erlang.mgf( 0.0, NaN, 1.0 )\ny = base.dists.erlang.mgf( 0.0, 1, NaN )\ny = base.dists.erlang.mgf( 0.2, -2, 0.5 )\ny = base.dists.erlang.mgf( 0.2, 0.5, 0.5 )\ny = base.dists.erlang.mgf( 0.2, 1, 0.0 )\ny = base.dists.erlang.mgf( 0.2, 1, -5.0 )\n"
base.dists.erlang.mgf.factory,"var myMGF = base.dists.erlang.mgf.factory( 2, 0.5 );\nvar y = myMGF( 0.2 )\ny = myMGF( -0.5 )\n"
base.dists.erlang.mode,"var v = base.dists.erlang.mode( 1, 1.0 )\nv = base.dists.erlang.mode( 4, 12.0 )\nv = base.dists.erlang.mode( 8, 2.0 )\n"
base.dists.erlang.pdf,"var y = base.dists.erlang.pdf( 0.1, 1, 1.0 )\ny = base.dists.erlang.pdf( 0.5, 2, 2.5 )\ny = base.dists.erlang.pdf( -1.0, 4, 2.0 )\ny = base.dists.erlang.pdf( NaN, 1, 1.0 )\ny = base.dists.erlang.pdf( 0.0, NaN, 1.0 )\ny = base.dists.erlang.pdf( 0.0, 1, NaN )\ny = base.dists.erlang.pdf( 2.0, -2, 0.5 )\ny = base.dists.erlang.pdf( 2.0, 0.5, 0.5 )\ny = base.dists.erlang.pdf( 2.0, 0.0, 2.0 )\ny = base.dists.erlang.pdf( 0.0, 0.0, 2.0 )\ny = base.dists.erlang.pdf( 2.0, 1, 0.0 )\ny = base.dists.erlang.pdf( 2.0, 1, -1.0 )\n"
base.dists.erlang.pdf.factory,"var myPDF = base.dists.erlang.pdf.factory( 6.0, 7.0 );\ny = myPDF( 7.0 )\n"
base.dists.erlang.quantile,"var y = base.dists.erlang.quantile( 0.8, 2, 1.0 )\ny = base.dists.erlang.quantile( 0.5, 4, 2.0 )\ny = base.dists.erlang.quantile( 1.1, 1, 1.0 )\ny = base.dists.erlang.quantile( -0.2, 1, 1.0 )\ny = base.dists.erlang.quantile( NaN, 1, 1.0 )\ny = base.dists.erlang.quantile( 0.0, NaN, 1.0 )\ny = base.dists.erlang.quantile( 0.0, 1, NaN )\ny = base.dists.erlang.quantile( 0.5, 0.5, 1.0 )\ny = base.dists.erlang.quantile( 0.5, -1, 1.0 )\ny = base.dists.erlang.quantile( 0.5, 1, -1.0 )\n"
base.dists.erlang.quantile.factory,"var myQuantile = base.dists.erlang.quantile.factory( 10, 2.0 );\nvar y = myQuantile( 0.4 )\n"
base.dists.erlang.skewness,"var v = base.dists.erlang.skewness( 1, 1.0 )\nv = base.dists.erlang.skewness( 4, 12.0 )\nv = base.dists.erlang.skewness( 8, 2.0 )\n"
base.dists.erlang.stdev,"var v = base.dists.erlang.stdev( 1, 1.0 )\nv = base.dists.erlang.stdev( 4, 12.0 )\nv = base.dists.erlang.stdev( 8, 2.0 )\n"
base.dists.erlang.variance,"var v = base.dists.erlang.variance( 1, 1.0 )\nv = base.dists.erlang.variance( 4, 12.0 )\nv = base.dists.erlang.variance( 8, 2.0 )\n"
base.dists.exponential.cdf,"var y = base.dists.exponential.cdf( 2.0, 0.1 )\ny = base.dists.exponential.cdf( 1.0, 2.0 )\ny = base.dists.exponential.cdf( -1.0, 4.0 )\ny = base.dists.exponential.cdf( NaN, 1.0 )\ny = base.dists.exponential.cdf( 0.0, NaN )\ny = base.dists.exponential.cdf( 2.0, -1.0 )\n"
base.dists.exponential.cdf.factory,"var myCDF = base.dists.exponential.cdf.factory( 0.5 );\nvar y = myCDF( 3.0 )\n"
base.dists.exponential.entropy,"var v = base.dists.exponential.entropy( 11.0 )\nv = base.dists.exponential.entropy( 4.5 )\n"
base.dists.exponential.Exponential,"var exponential = base.dists.exponential.Exponential( 6.0 );\nexponential.lambda\nexponential.entropy\nexponential.kurtosis\nexponential.mean\nexponential.median\nexponential.mode\nexponential.skewness\nexponential.stdev\nexponential.variance\nexponential.cdf( 1.0 )\nexponential.logcdf( 1.0 )\nexponential.logpdf( 1.5 )\nexponential.mgf( -0.5 )\nexponential.pdf( 1.5 )\nexponential.quantile( 0.5 )\n"
base.dists.exponential.kurtosis,"var v = base.dists.exponential.kurtosis( 11.0 )\nv = base.dists.exponential.kurtosis( 4.5 )\n"
base.dists.exponential.logcdf,"var y = base.dists.exponential.logcdf( 2.0, 0.1 )\ny = base.dists.exponential.logcdf( 1.0, 2.0 )\ny = base.dists.exponential.logcdf( -1.0, 4.0 )\ny = base.dists.exponential.logcdf( NaN, 1.0 )\ny = base.dists.exponential.logcdf( 0.0, NaN )\ny = base.dists.exponential.logcdf( 2.0, -1.0 )\n"
base.dists.exponential.logcdf.factory,"var mylogCDF = base.dists.exponential.logcdf.factory( 0.5 );\nvar y = mylogCDF( 3.0 )\n"
base.dists.exponential.logpdf,"var y = base.dists.exponential.logpdf( 0.3, 4.0 )\ny = base.dists.exponential.logpdf( 2.0, 0.7 )\ny = base.dists.exponential.logpdf( -1.0, 0.5 )\ny = base.dists.exponential.logpdf( 0, NaN )\ny = base.dists.exponential.logpdf( NaN, 2.0 )\ny = base.dists.exponential.logpdf( 2.0, -1.0 )\n"
base.dists.exponential.logpdf.factory,"var mylogpdf = base.dists.exponential.logpdf.factory( 0.5 );\nvar y = mylogpdf( 3.0 )\n"
base.dists.exponential.mean,"var v = base.dists.exponential.mean( 11.0 )\nv = base.dists.exponential.mean( 4.5 )\n"
base.dists.exponential.median,"var v = base.dists.exponential.median( 11.0 )\nv = base.dists.exponential.median( 4.5 )\n"
base.dists.exponential.mgf,"var v = base.dists.exponential.mgf( 2.0, 3.0 )\nv = base.dists.exponential.mgf( 0.4, 1.2 )\nv = base.dists.exponential.mgf( 0.8, 1.6 )\nv = base.dists.exponential.mgf( 4.0, 3.0 )\nv = base.dists.exponential.mgf( NaN, 3.0 )\nv = base.dists.exponential.mgf( 2.0, NaN )\n"
base.dists.exponential.mgf.factory,"var myMGF = base.dists.exponential.mgf.factory( 4.0 );\nvar y = myMGF( 3.0 )\ny = myMGF( 0.5 )\n"
base.dists.exponential.mode,"var v = base.dists.exponential.mode( 11.0 )\nv = base.dists.exponential.mode( 4.5 )\n"
base.dists.exponential.pdf,"var y = base.dists.exponential.pdf( 0.3, 4.0 )\ny = base.dists.exponential.pdf( 2.0, 0.7 )\ny = base.dists.exponential.pdf( -1.0, 0.5 )\ny = base.dists.exponential.pdf( 0, NaN )\ny = base.dists.exponential.pdf( NaN, 2.0 )\ny = base.dists.exponential.pdf( 2.0, -1.0 )\n"
base.dists.exponential.pdf.factory,"var myPDF = base.dists.exponential.pdf.factory( 0.5 );\nvar y = myPDF( 3.0 )\n"
base.dists.exponential.quantile,"var y = base.dists.exponential.quantile( 0.8, 1.0 )\ny = base.dists.exponential.quantile( 0.5, 4.0 )\ny = base.dists.exponential.quantile( 0.5, 0.1 )\ny = base.dists.exponential.quantile( -0.2, 0.1 )\ny = base.dists.exponential.quantile( NaN, 1.0 )\ny = base.dists.exponential.quantile( 0.0, NaN )\ny = base.dists.exponential.quantile( 0.5, -1.0 )\n"
base.dists.exponential.quantile.factory,"var myQuantile = base.dists.exponential.quantile.factory( 0.4 );\nvar y = myQuantile( 0.4 )\ny = myQuantile( 1.0 )\n"
base.dists.exponential.skewness,"var v = base.dists.exponential.skewness( 11.0 )\nv = base.dists.exponential.skewness( 4.5 )\n"
base.dists.exponential.stdev,"var v = base.dists.exponential.stdev( 9.0 )\nv = base.dists.exponential.stdev( 1.0 )\n"
base.dists.exponential.variance,"var v = base.dists.exponential.variance( 9.0 )\nv = base.dists.exponential.variance( 1.0 )\n"
base.dists.f.cdf,"var y = base.dists.f.cdf( 2.0, 1.0, 1.0 )\nvar y = base.dists.f.cdf( 2.0, 8.0, 4.0 )\nvar y = base.dists.f.cdf( -1.0, 2.0, 2.0 )\nvar y = base.dists.f.cdf( PINF, 4.0, 2.0 )\nvar y = base.dists.f.cdf( NINF, 4.0, 2.0 )\nvar y = base.dists.f.cdf( NaN, 1.0, 1.0 )\nvar y = base.dists.f.cdf( 0.0, NaN, 1.0 )\nvar y = base.dists.f.cdf( 0.0, 1.0, NaN )\nvar y = base.dists.f.cdf( 2.0, 1.0, -1.0 )\nvar y = base.dists.f.cdf( 2.0, -1.0, 1.0 )\n"
base.dists.f.cdf.factory,"var myCDF = base.dists.f.cdf.factory( 10.0, 2.0 );\nvar y = myCDF( 10.0 )\ny = myCDF( 8.0 )\n"
base.dists.f.entropy,"var v = base.dists.f.entropy( 3.0, 7.0 )\nv = base.dists.f.entropy( 4.0, 12.0 )\nv = base.dists.f.entropy( 8.0, 2.0 )\n"
base.dists.f.F,"var f = base.dists.f.F( 6.0, 9.0 );\nf.d1\nf.d2\nf.entropy\nf.kurtosis\nf.mean\nf.mode\nf.skewness\nf.stdev\nf.variance\nf.cdf( 3.0 )\nf.pdf( 2.5 )\nf.quantile( 0.8 )\n"
base.dists.f.kurtosis,"var v = base.dists.f.kurtosis( 3.0, 9.0 )\nv = base.dists.f.kurtosis( 4.0, 12.0 )\nv = base.dists.f.kurtosis( 8.0, 9.0 )\n"
base.dists.f.mean,"var v = base.dists.f.mean( 3.0, 5.0 )\nv = base.dists.f.mean( 4.0, 12.0 )\nv = base.dists.f.mean( 8.0, 4.0 )\n"
base.dists.f.mode,"var v = base.dists.f.mode( 3.0, 5.0 )\nv = base.dists.f.mode( 4.0, 12.0 )\nv = base.dists.f.mode( 8.0, 4.0 )\n"
base.dists.f.pdf,"var y = base.dists.f.pdf( 2.0, 0.5, 1.0 )\ny = base.dists.f.pdf( 0.1, 1.0, 1.0 )\ny = base.dists.f.pdf( -1.0, 4.0, 2.0 )\ny = base.dists.f.pdf( NaN, 1.0, 1.0 )\ny = base.dists.f.pdf( 0.0, NaN, 1.0 )\ny = base.dists.f.pdf( 0.0, 1.0, NaN )\ny = base.dists.f.pdf( 2.0, 1.0, -1.0 )\ny = base.dists.f.pdf( 2.0, -1.0, 1.0 )\n"
base.dists.f.pdf.factory,"var myPDF = base.dists.f.pdf.factory( 6.0, 7.0 );\nvar y = myPDF( 7.0 )\ny = myPDF( 2.0 )\n"
base.dists.f.quantile,"var y = base.dists.f.quantile( 0.8, 1.0, 1.0 )\ny = base.dists.f.quantile( 0.5, 4.0, 2.0 )\ny = base.dists.f.quantile( 1.1, 1.0, 1.0 )\ny = base.dists.f.quantile( -0.2, 1.0, 1.0 )\ny = base.dists.f.quantile( NaN, 1.0, 1.0 )\ny = base.dists.f.quantile( 0.5, NaN, 1.0 )\ny = base.dists.f.quantile( 0.5, 1.0, NaN )\ny = base.dists.f.quantile( 0.5, -1.0, 1.0 )\ny = base.dists.f.quantile( 0.5, 1.0, -1.0 )\n"
base.dists.f.quantile.factory,"var myQuantile = base.dists.f.quantile.factory( 10.0, 2.0 );\nvar y = myQuantile( 0.2 )\ny = myQuantile( 0.8 )\n"
base.dists.f.skewness,"var v = base.dists.f.skewness( 3.0, 7.0 )\nv = base.dists.f.skewness( 4.0, 12.0 )\nv = base.dists.f.skewness( 8.0, 7.0 )\n"
base.dists.f.stdev,"var v = base.dists.f.stdev( 3.0, 5.0 )\nv = base.dists.f.stdev( 4.0, 12.0 )\nv = base.dists.f.stdev( 8.0, 5.0 )\n"
base.dists.f.variance,"var v = base.dists.f.variance( 3.0, 5.0 )\nv = base.dists.f.variance( 4.0, 12.0 )\nv = base.dists.f.variance( 8.0, 5.0 )\n"
base.dists.frechet.cdf,"var y = base.dists.frechet.cdf( 10.0, 2.0, 3.0, 0.0 )\ny = base.dists.frechet.cdf( -1.0, 2.0, 3.0, -3.0 )\ny = base.dists.frechet.cdf( 2.5, 2.0, 1.0, 2.0 )\ny = base.dists.frechet.cdf( NaN, 1.0, 1.0, 0.0 )\ny = base.dists.frechet.cdf( 0.0, NaN, 1.0, 0.0 )\ny = base.dists.frechet.cdf( 0.0, 1.0, NaN, 0.0 )\ny = base.dists.frechet.cdf( 0.0, 1.0, 1.0, NaN )\ny = base.dists.frechet.cdf( 0.0, -1.0, 1.0, 0.0 )\ny = base.dists.frechet.cdf( 0.0, 1.0, -1.0, 0.0 )\n"
base.dists.frechet.cdf.factory,"var myCDF = base.dists.frechet.cdf.factory( 3.0, 3.0, 5.0 );\nvar y = myCDF( 10.0 )\ny = myCDF( 7.0 )\n"
base.dists.frechet.entropy,"var y = base.dists.frechet.entropy( 1.0, 1.0, 1.0 )\ny = base.dists.frechet.entropy( 4.0, 2.0, 1.0 )\ny = base.dists.frechet.entropy( NaN, 1.0, 0.0 )\ny = base.dists.frechet.entropy( 1.0, NaN, 0.0 )\ny = base.dists.frechet.entropy( 1.0, 1.0, NaN )\n"
base.dists.frechet.Frechet,"var frechet = base.dists.frechet.Frechet( 1.0, 1.0, 0.0 );\nfrechet.alpha\nfrechet.s\nfrechet.m\nfrechet.entropy\nfrechet.kurtosis\nfrechet.mean\nfrechet.median\nfrechet.mode\nfrechet.skewness\nfrechet.stdev\nfrechet.variance\nfrechet.cdf( 0.8 )\nfrechet.logcdf( 0.8 )\nfrechet.logpdf( 0.8 )\nfrechet.pdf( 0.8 )\nfrechet.quantile( 0.8 )\n"
base.dists.frechet.kurtosis,"var y = base.dists.frechet.kurtosis( 5.0, 2.0, 1.0 )\nvar y = base.dists.frechet.kurtosis( 5.0, 10.0, -3.0 )\ny = base.dists.frechet.kurtosis( 3.5, 2.0, 1.0 )\ny = base.dists.frechet.kurtosis( NaN, 1.0, 0.0 )\ny = base.dists.frechet.kurtosis( 1.0, NaN, 0.0 )\ny = base.dists.frechet.kurtosis( 1.0, 1.0, NaN )\n"
base.dists.frechet.logcdf,"var y = base.dists.frechet.logcdf( 10.0, 2.0, 3.0, 0.0 )\ny = base.dists.frechet.logcdf( -1.0, 2.0, 3.0, -3.0 )\ny = base.dists.frechet.logcdf( 2.5, 2.0, 1.0, 2.0 )\ny = base.dists.frechet.logcdf( NaN, 1.0, 1.0, 0.0 )\ny = base.dists.frechet.logcdf( 0.0, NaN, 1.0, 0.0 )\ny = base.dists.frechet.logcdf( 0.0, 1.0, NaN, 0.0 )\ny = base.dists.frechet.logcdf( 0.0, 1.0, 1.0, NaN )\ny = base.dists.frechet.logcdf( 0.0, -1.0, 1.0, 0.0 )\ny = base.dists.frechet.logcdf( 0.0, 1.0, -1.0, 0.0 )\n"
base.dists.frechet.logcdf.factory,"var mylogcdf = base.dists.frechet.logcdf.factory( 3.0, 3.0, 5.0 );\nvar y = mylogcdf( 10.0 )\ny = mylogcdf( 7.0 )\n"
base.dists.frechet.logpdf,"var y = base.dists.frechet.logpdf( 10.0, 1.0, 3.0, 5.0 )\ny = base.dists.frechet.logpdf( -2.0, 1.0, 3.0, -3.0 )\ny = base.dists.frechet.logpdf( 0.0, 2.0, 1.0, -1.0 )\ny = base.dists.frechet.logpdf( NaN, 0.0, 1.0 )\ny = base.dists.frechet.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.frechet.logpdf( 0.0, 0.0, NaN )\ny = base.dists.frechet.logpdf( 0.0, 0.0, -1.0 )\n"
base.dists.frechet.logpdf.factory,"var mylogPDF = base.dists.frechet.logpdf.factory( 2.0, 3.0, 1.0 );\nvar y = mylogPDF( 10.0 )\ny = mylogPDF( 2.0 )\n"
base.dists.frechet.mean,"var y = base.dists.frechet.mean( 4.0, 2.0, 1.0 )\ny = base.dists.frechet.mean( 0.5, 2.0, 1.0 )\ny = base.dists.frechet.mean( NaN, 1.0, 0.0 )\ny = base.dists.frechet.mean( 1.0, NaN, 0.0 )\ny = base.dists.frechet.mean( 1.0, 1.0, NaN )\n"
base.dists.frechet.median,"var y = base.dists.frechet.median( 4.0, 2.0, 1.0 )\nvar y = base.dists.frechet.median( 4.0, 2.0, -3.0 )\ny = base.dists.frechet.median( 0.5, 2.0, 1.0 )\ny = base.dists.frechet.median( NaN, 1.0, 0.0 )\ny = base.dists.frechet.median( 1.0, NaN, 0.0 )\ny = base.dists.frechet.median( 1.0, 1.0, NaN )\n"
base.dists.frechet.mode,"var y = base.dists.frechet.mode( 4.0, 2.0, 1.0 )\nvar y = base.dists.frechet.mode( 4.0, 2.0, -3.0 )\ny = base.dists.frechet.mode( 0.5, 2.0, 1.0 )\ny = base.dists.frechet.mode( NaN, 1.0, 0.0 )\ny = base.dists.frechet.mode( 1.0, NaN, 0.0 )\ny = base.dists.frechet.mode( 1.0, 1.0, NaN )\n"
base.dists.frechet.pdf,"var y = base.dists.frechet.pdf( 10.0, 0.0, 3.0 )\ny = base.dists.frechet.pdf( -2.0, 0.0, 3.0 )\ny = base.dists.frechet.pdf( 0.0, 0.0, 1.0 )\ny = base.dists.frechet.pdf( NaN, 0.0, 1.0 )\ny = base.dists.frechet.pdf( 0.0, NaN, 1.0 )\ny = base.dists.frechet.pdf( 0.0, 0.0, NaN )\ny = base.dists.frechet.pdf( 0.0, 0.0, -1.0 )\n"
base.dists.frechet.pdf.factory,"var myPDF = base.dists.frechet.pdf.factory( 2.0, 3.0 );\nvar y = myPDF( 10.0 )\ny = myPDF( 2.0 )\n"
base.dists.frechet.quantile,"var y = base.dists.frechet.quantile( 0.3, 10.0, 2.0, 3.0 )\ny = base.dists.frechet.quantile( 0.2, 3.0, 3.0, 3.0 )\ny = base.dists.frechet.quantile( 0.9, 1.0, 1.0, -3.0 )\ny = base.dists.frechet.quantile( NaN, 1.0, 1.0, 0.0 )\ny = base.dists.frechet.quantile( 0.0, NaN, 1.0, 0.0)\ny = base.dists.frechet.quantile( 0.0, 1.0, NaN, 0.0 )\ny = base.dists.frechet.quantile( 0.0, 1.0, 1.0, NaN )\ny = base.dists.frechet.quantile( 0.0, -1.0, 1.0, 0.0 )\ny = base.dists.frechet.quantile( 0.0, 1.0, -1.0, 0.0 )\n"
base.dists.frechet.quantile.factory,"var myQuantile = base.dists.frechet.quantile.factory( 2.0, 2.0, 3.0 );\nvar y = myQuantile( 0.5 )\ny = myQuantile( 0.2 )\n"
base.dists.frechet.skewness,"var y = base.dists.frechet.skewness( 4.0, 2.0, 1.0 )\nvar y = base.dists.frechet.skewness( 4.0, 2.0, -3.0 )\ny = base.dists.frechet.skewness( 0.5, 2.0, 1.0 )\ny = base.dists.frechet.skewness( NaN, 1.0, 0.0 )\ny = base.dists.frechet.skewness( 1.0, NaN, 0.0 )\ny = base.dists.frechet.skewness( 1.0, 1.0, NaN )\n"
base.dists.frechet.stdev,"var y = base.dists.frechet.stdev( 4.0, 2.0, 1.0 )\nvar y = base.dists.frechet.stdev( 4.0, 2.0, -3.0 )\ny = base.dists.frechet.stdev( 0.5, 2.0, 1.0 )\ny = base.dists.frechet.stdev( NaN, 1.0, 0.0 )\ny = base.dists.frechet.stdev( 1.0, NaN, 0.0 )\ny = base.dists.frechet.stdev( 1.0, 1.0, NaN )\n"
base.dists.frechet.variance,"var y = base.dists.frechet.variance( 4.0, 2.0, 1.0 )\nvar y = base.dists.frechet.variance( 4.0, 2.0, -3.0 )\ny = base.dists.frechet.variance( 0.5, 2.0, 1.0 )\ny = base.dists.frechet.variance( NaN, 1.0, 0.0 )\ny = base.dists.frechet.variance( 1.0, NaN, 0.0 )\ny = base.dists.frechet.variance( 1.0, 1.0, NaN )\n"
base.dists.gamma.cdf,"var y = base.dists.gamma.cdf( 2.0, 1.0, 1.0 )\ny = base.dists.gamma.cdf( 2.0, 3.0, 1.0 )\ny = base.dists.gamma.cdf( -1.0, 2.0, 2.0 )\ny = base.dists.gamma.cdf( PINF, 4.0, 2.0 )\ny = base.dists.gamma.cdf( NINF, 4.0, 2.0 )\ny = base.dists.gamma.cdf( NaN, 0.0, 1.0 )\ny = base.dists.gamma.cdf( 0.0, NaN, 1.0 )\ny = base.dists.gamma.cdf( 0.0, 0.0, NaN )\ny = base.dists.gamma.cdf( 2.0, -1.0, 1.0 )\ny = base.dists.gamma.cdf( 2.0, 1.0, -1.0 )\ny = base.dists.gamma.cdf( 2.0, 0.0, 2.0 )\ny = base.dists.gamma.cdf( -2.0, 0.0, 2.0 )\ny = base.dists.gamma.cdf( 0.0, 0.0, 2.0 )\n"
base.dists.gamma.cdf.factory,"var myCDF = base.dists.gamma.cdf.factory( 2.0, 0.5 );\nvar y = myCDF( 6.0 )\ny = myCDF( 2.0 )\n"
base.dists.gamma.entropy,"var v = base.dists.gamma.entropy( 1.0, 1.0 )\nv = base.dists.gamma.entropy( 4.0, 12.0 )\nv = base.dists.gamma.entropy( 8.0, 2.0 )\n"
base.dists.gamma.Gamma,"var gamma = base.dists.gamma.Gamma( 6.0, 5.0 );\ngamma.alpha\ngamma.beta\ngamma.entropy\ngamma.kurtosis\ngamma.mean\ngamma.mode\ngamma.skewness\ngamma.stdev\ngamma.variance\ngamma.cdf( 0.8 )\ngamma.logpdf( 1.0 )\ngamma.mgf( -0.5 )\ngamma.pdf( 1.0 )\ngamma.quantile( 0.8 )\n"
base.dists.gamma.kurtosis,"var v = base.dists.gamma.kurtosis( 1.0, 1.0 )\nv = base.dists.gamma.kurtosis( 4.0, 12.0 )\nv = base.dists.gamma.kurtosis( 8.0, 2.0 )\n"
base.dists.gamma.logpdf,"var y = base.dists.gamma.logpdf( 2.0, 0.5, 1.0 )\ny = base.dists.gamma.logpdf( 0.1, 1.0, 1.0 )\ny = base.dists.gamma.logpdf( -1.0, 4.0, 2.0 )\ny = base.dists.gamma.logpdf( NaN, 0.6, 1.0 )\ny = base.dists.gamma.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.gamma.logpdf( 0.0, 1.0, NaN )\ny = base.dists.gamma.logpdf( 2.0, -1.0, 1.0 )\ny = base.dists.gamma.logpdf( 2.0, 1.0, -1.0 )\ny = base.dists.gamma.logpdf( 2.0, 0.0, 2.0 )\ny = base.dists.gamma.logpdf( 0.0, 0.0, 2.0 )\n"
base.dists.gamma.logpdf.factory,"var mylogPDF = base.dists.gamma.logpdf.factory( 6.0, 7.0 );\nvar y = mylogPDF( 2.0 )\n"
base.dists.gamma.mean,"var v = base.dists.gamma.mean( 1.0, 1.0 )\nv = base.dists.gamma.mean( 4.0, 12.0 )\nv = base.dists.gamma.mean( 8.0, 2.0 )\n"
base.dists.gamma.mgf,"var y = base.dists.gamma.mgf( 0.5, 0.5, 1.0 )\ny = base.dists.gamma.mgf( 0.1, 1.0, 1.0 )\ny = base.dists.gamma.mgf( -1.0, 4.0, 2.0 )\ny = base.dists.gamma.mgf( NaN, 1.0, 1.0 )\ny = base.dists.gamma.mgf( 0.0, NaN, 1.0 )\ny = base.dists.gamma.mgf( 0.0, 1.0, NaN )\ny = base.dists.gamma.mgf( 2.0, 4.0, 1.0 )\ny = base.dists.gamma.mgf( 2.0, -0.5, 1.0 )\ny = base.dists.gamma.mgf( 2.0, 1.0, 0.0 )\ny = base.dists.gamma.mgf( 2.0, 1.0, -1.0 )\n"
base.dists.gamma.mgf.factory,"var myMGF = base.dists.gamma.mgf.factory( 3.0, 1.5 );\nvar y = myMGF( 1.0 )\ny = myMGF( 0.5 )\n"
base.dists.gamma.mode,"var v = base.dists.gamma.mode( 1.0, 1.0 )\nv = base.dists.gamma.mode( 4.0, 12.0 )\nv = base.dists.gamma.mode( 8.0, 2.0 )\n"
base.dists.gamma.pdf,"var y = base.dists.gamma.pdf( 2.0, 0.5, 1.0 )\ny = base.dists.gamma.pdf( 0.1, 1.0, 1.0 )\ny = base.dists.gamma.pdf( -1.0, 4.0, 2.0 )\ny = base.dists.gamma.pdf( NaN, 0.6, 1.0 )\ny = base.dists.gamma.pdf( 0.0, NaN, 1.0 )\ny = base.dists.gamma.pdf( 0.0, 1.0, NaN )\ny = base.dists.gamma.pdf( 2.0, -1.0, 1.0 )\ny = base.dists.gamma.pdf( 2.0, 1.0, -1.0 )\ny = base.dists.gamma.pdf( 2.0, 0.0, 2.0 )\ny = base.dists.gamma.pdf( 0.0, 0.0, 2.0 )\n"
base.dists.gamma.pdf.factory,"var myPDF = base.dists.gamma.pdf.factory( 6.0, 7.0 );\nvar y = myPDF( 2.0 )\n"
base.dists.gamma.quantile,"var y = base.dists.gamma.quantile( 0.8, 2.0, 1.0 )\ny = base.dists.gamma.quantile( 0.5, 4.0, 2.0 )\ny = base.dists.gamma.quantile( 1.1, 1.0, 1.0 )\ny = base.dists.gamma.quantile( -0.2, 1.0, 1.0 )\ny = base.dists.gamma.quantile( NaN, 1.0, 1.0 )\ny = base.dists.gamma.quantile( 0.0, NaN, 1.0 )\ny = base.dists.gamma.quantile( 0.0, 1.0, NaN )\ny = base.dists.gamma.quantile( 0.5, -1.0, 1.0 )\ny = base.dists.gamma.quantile( 0.5, 1.0, -1.0 )\ny = base.dists.gamma.quantile( 0.3, 0.0, 2.0 )\ny = base.dists.gamma.quantile( 0.9, 0.0, 2.0 )\n"
base.dists.gamma.quantile.factory,"var myQuantile = base.dists.gamma.quantile.factory( 2.0, 2.0 );\nvar y = myQuantile( 0.8 )\ny = myQuantile( 0.4 )\n"
base.dists.gamma.skewness,"var v = base.dists.gamma.skewness( 1.0, 1.0 )\nv = base.dists.gamma.skewness( 4.0, 12.0 )\nv = base.dists.gamma.skewness( 8.0, 2.0 )\n"
base.dists.gamma.stdev,"var v = base.dists.gamma.stdev( 1.0, 1.0 )\nv = base.dists.gamma.stdev( 4.0, 12.0 )\nv = base.dists.gamma.stdev( 8.0, 2.0 )\n"
base.dists.gamma.variance,"var v = base.dists.gamma.variance( 1.0, 1.0 )\nv = base.dists.gamma.variance( 4.0, 12.0 )\nv = base.dists.gamma.variance( 8.0, 2.0 )\n"
base.dists.geometric.cdf,"var y = base.dists.geometric.cdf( 2.0, 0.5 )\ny = base.dists.geometric.cdf( 2.0, 0.1 )\ny = base.dists.geometric.cdf( -1.0, 4.0 )\ny = base.dists.geometric.cdf( NaN, 0.5 )\ny = base.dists.geometric.cdf( 0.0, NaN )\ny = base.dists.geometric.cdf( 2.0, 1.4 )\n"
base.dists.geometric.cdf.factory,"var mycdf = base.dists.geometric.cdf.factory( 0.5 );\nvar y = mycdf( 3.0 )\ny = mycdf( 1.0 )\n"
base.dists.geometric.entropy,"var v = base.dists.geometric.entropy( 0.1 )\nv = base.dists.geometric.entropy( 0.5 )\n"
base.dists.geometric.Geometric,"var geometric = base.dists.geometric.Geometric( 0.6 );\ngeometric.p\ngeometric.entropy\ngeometric.kurtosis\ngeometric.mean\ngeometric.median\ngeometric.mode\ngeometric.skewness\ngeometric.stdev\ngeometric.variance\ngeometric.cdf( 3.0 )\ngeometric.logcdf( 3.0 )\ngeometric.logpmf( 4.0 )\ngeometric.mgf( 0.5 )\ngeometric.pmf( 2.0 )\ngeometric.quantile( 0.7 )\n"
base.dists.geometric.kurtosis,"var v = base.dists.geometric.kurtosis( 0.1 )\nv = base.dists.geometric.kurtosis( 0.5 )\n"
base.dists.geometric.logcdf,"var y = base.dists.geometric.logcdf( 2.0, 0.5 )\ny = base.dists.geometric.logcdf( 2.0, 0.1 )\ny = base.dists.geometric.logcdf( -1.0, 4.0 )\ny = base.dists.geometric.logcdf( NaN, 0.5 )\ny = base.dists.geometric.logcdf( 0.0, NaN )\ny = base.dists.geometric.logcdf( 2.0, 1.4 )\n"
base.dists.geometric.logcdf.factory,"var mylogcdf = base.dists.geometric.logcdf.factory( 0.5 );\nvar y = mylogcdf( 3.0 )\ny = mylogcdf( 1.0 )\n"
base.dists.geometric.logpmf,"var y = base.dists.geometric.logpmf( 4.0, 0.3 )\ny = base.dists.geometric.logpmf( 2.0, 0.7 )\ny = base.dists.geometric.logpmf( -1.0, 0.5 )\ny = base.dists.geometric.logpmf( 0.0, NaN )\ny = base.dists.geometric.logpmf( NaN, 0.5 )\ny = base.dists.geometric.logpmf( 2.0, 1.5 )\n"
base.dists.geometric.logpmf.factory,"var mylogpmf = base.dists.geometric.logpmf.factory( 0.5 );\nvar y = mylogpmf( 3.0 )\ny = mylogpmf( 1.0 )\n"
base.dists.geometric.mean,"var v = base.dists.geometric.mean( 0.1 )\nv = base.dists.geometric.mean( 0.5 )\n"
base.dists.geometric.median,"var v = base.dists.geometric.median( 0.1 )\nv = base.dists.geometric.median( 0.5 )\n"
base.dists.geometric.mgf,"var y = base.dists.geometric.mgf( 0.2, 0.5 )\ny = base.dists.geometric.mgf( 0.4, 0.5 )\ny = base.dists.geometric.mgf( 0.8, 0.5 )\ny = base.dists.geometric.mgf( NaN, 0.0 )\ny = base.dists.geometric.mgf( 0.0, NaN )\ny = base.dists.geometric.mgf( -2.0, -1.0 )\ny = base.dists.geometric.mgf( 0.2, 2.0 )\n"
base.dists.geometric.mgf.factory,"var mymgf = base.dists.geometric.mgf.factory( 0.8 );\nvar y = mymgf( -0.2 )\n"
base.dists.geometric.mode,"var v = base.dists.geometric.mode( 0.1 )\nv = base.dists.geometric.mode( 0.5 )\n"
base.dists.geometric.pmf,"var y = base.dists.geometric.pmf( 4.0, 0.3 )\ny = base.dists.geometric.pmf( 2.0, 0.7 )\ny = base.dists.geometric.pmf( -1.0, 0.5 )\ny = base.dists.geometric.pmf( 0.0, NaN )\ny = base.dists.geometric.pmf( NaN, 0.5 )\ny = base.dists.geometric.pmf( 2.0, 1.5 )\n"
base.dists.geometric.pmf.factory,"var mypmf = base.dists.geometric.pmf.factory( 0.5 );\nvar y = mypmf( 3.0 )\ny = mypmf( 1.0 )\n"
base.dists.geometric.quantile,"var y = base.dists.geometric.quantile( 0.8, 0.4 )\ny = base.dists.geometric.quantile( 0.5, 0.4 )\ny = base.dists.geometric.quantile( 0.9, 0.1 )\ny = base.dists.geometric.quantile( -0.2, 0.1 )\ny = base.dists.geometric.quantile( NaN, 0.8 )\ny = base.dists.geometric.quantile( 0.4, NaN )\ny = base.dists.geometric.quantile( 0.5, -1.0 )\ny = base.dists.geometric.quantile( 0.5, 1.5 )\n"
base.dists.geometric.quantile.factory,"var myquantile = base.dists.geometric.quantile.factory( 0.4 );\nvar y = myquantile( 0.4 )\ny = myquantile( 0.8 )\ny = myquantile( 1.0 )\n"
base.dists.geometric.skewness,"var v = base.dists.geometric.skewness( 0.1 )\nv = base.dists.geometric.skewness( 0.5 )\n"
base.dists.geometric.stdev,"var v = base.dists.geometric.stdev( 0.1 )\nv = base.dists.geometric.stdev( 0.5 )\n"
base.dists.geometric.variance,"var v = base.dists.geometric.variance( 0.1 )\nv = base.dists.geometric.variance( 0.5 )\n"
base.dists.gumbel.cdf,"var y = base.dists.gumbel.cdf( 10.0, 0.0, 3.0 )\ny = base.dists.gumbel.cdf( -2.0, 0.0, 3.0 )\ny = base.dists.gumbel.cdf( 0.0, 0.0, 1.0 )\ny = base.dists.gumbel.cdf( NaN, 0.0, 1.0 )\ny = base.dists.gumbel.cdf( 0.0, NaN, 1.0 )\ny = base.dists.gumbel.cdf( 0.0, 0.0, NaN )\ny = base.dists.gumbel.cdf( 0.0, 0.0, -1.0 )\n"
base.dists.gumbel.cdf.factory,"var myCDF = base.dists.gumbel.cdf.factory( 2.0, 3.0 );\nvar y = myCDF( 10.0 )\ny = myCDF( 2.0 )\n"
base.dists.gumbel.entropy,"var y = base.dists.gumbel.entropy( 0.0, 1.0 )\ny = base.dists.gumbel.entropy( 4.0, 2.0 )\ny = base.dists.gumbel.entropy( NaN, 1.0 )\ny = base.dists.gumbel.entropy( 0.0, NaN )\ny = base.dists.gumbel.entropy( 0.0, 0.0 )\n"
base.dists.gumbel.Gumbel,"var gumbel = base.dists.gumbel.Gumbel( -2.0, 3.0 );\ngumbel.mu\ngumbel.beta\ngumbel.entropy\ngumbel.kurtosis\ngumbel.mean\ngumbel.median\ngumbel.mode\ngumbel.skewness\ngumbel.stdev\ngumbel.variance\ngumbel.cdf( 0.8 )\ngumbel.logcdf( 0.8 )\ngumbel.logpdf( 1.0 )\ngumbel.mgf( 0.2 )\ngumbel.pdf( 1.0 )\ngumbel.quantile( 0.8 )\n"
base.dists.gumbel.kurtosis,"var y = base.dists.gumbel.kurtosis( 0.0, 1.0 )\ny = base.dists.gumbel.kurtosis( 4.0, 2.0 )\ny = base.dists.gumbel.kurtosis( NaN, 1.0 )\ny = base.dists.gumbel.kurtosis( 0.0, NaN )\ny = base.dists.gumbel.kurtosis( 0.0, 0.0 )\n"
base.dists.gumbel.logcdf,"var y = base.dists.gumbel.logcdf( 10.0, 0.0, 3.0 )\ny = base.dists.gumbel.logcdf( -2.0, 0.0, 3.0 )\ny = base.dists.gumbel.logcdf( 0.0, 0.0, 1.0 )\ny = base.dists.gumbel.logcdf( NaN, 0.0, 1.0 )\ny = base.dists.gumbel.logcdf( 0.0, NaN, 1.0 )\ny = base.dists.gumbel.logcdf( 0.0, 0.0, NaN )\ny = base.dists.gumbel.logcdf( 0.0, 0.0, -1.0 )\n"
base.dists.gumbel.logcdf.factory,"var myLCDF = base.dists.gumbel.logcdf.factory( 2.0, 3.0 );\nvar y = myLCDF( 10.0 )\ny = myLCDF( 2.0 )\n"
base.dists.gumbel.logpdf,"var y = base.dists.gumbel.logpdf( 0.0, 0.0, 2.0 )\ny = base.dists.gumbel.logpdf( 0.0, 0.0, 1.0 )\ny = base.dists.gumbel.logpdf( 1.0, 3.0, 2.0 )\ny = base.dists.gumbel.logpdf( NaN, 0.0, 1.0 )\ny = base.dists.gumbel.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.gumbel.logpdf( 0.0, 0.0, NaN )\ny = base.dists.gumbel.logpdf( 2.0, 0.0, -1.0 )\n"
base.dists.gumbel.logpdf.factory,"var mylogpdf = base.dists.gumbel.logpdf.factory( 10.0, 2.0 );\nvar y = mylogpdf( 10.0 )\ny = mylogpdf( 12.0 )\n"
base.dists.gumbel.mean,"var y = base.dists.gumbel.mean( 0.0, 1.0 )\ny = base.dists.gumbel.mean( 4.0, 2.0 )\ny = base.dists.gumbel.mean( NaN, 1.0 )\ny = base.dists.gumbel.mean( 0.0, NaN )\ny = base.dists.gumbel.mean( 0.0, 0.0 )\n"
base.dists.gumbel.median,"var y = base.dists.gumbel.median( 0.0, 1.0 )\ny = base.dists.gumbel.median( 4.0, 2.0 )\ny = base.dists.gumbel.median( NaN, 1.0 )\ny = base.dists.gumbel.median( 0.0, NaN )\ny = base.dists.gumbel.median( 0.0, 0.0 )\n"
base.dists.gumbel.mgf,"var y = base.dists.gumbel.mgf( -1.0, 0.0, 3.0 )\ny = base.dists.gumbel.mgf( 0.0, 0.0, 1.0 )\ny = base.dists.gumbel.mgf( 0.1, 0.0, 3.0 )\ny = base.dists.gumbel.mgf( NaN, 0.0, 1.0 )\ny = base.dists.gumbel.mgf( 0.0, NaN, 1.0 )\ny = base.dists.gumbel.mgf( 0.0, 0.0, NaN )\ny = base.dists.gumbel.mgf( 0.8, 0.0, 2.0 )\ny = base.dists.gumbel.mgf( 0.0, 0.0, -1.0 )\n"
base.dists.gumbel.mgf.factory,"var myMGF = base.dists.gumbel.mgf.factory( 0.0, 3.0 );\nvar y = myMGF( -1.5 )\ny = myMGF( -1.0 )\n"
base.dists.gumbel.mode,"var y = base.dists.gumbel.mode( 0.0, 1.0 )\ny = base.dists.gumbel.mode( 4.0, 2.0 )\ny = base.dists.gumbel.mode( NaN, 1.0 )\ny = base.dists.gumbel.mode( 0.0, NaN )\ny = base.dists.gumbel.mode( 0.0, 0.0 )\n"
base.dists.gumbel.pdf,"var y = base.dists.gumbel.pdf( 0.0, 0.0, 2.0 )\ny = base.dists.gumbel.pdf( 0.0, 0.0, 1.0 )\ny = base.dists.gumbel.pdf( 1.0, 3.0, 2.0 )\ny = base.dists.gumbel.pdf( NaN, 0.0, 1.0 )\ny = base.dists.gumbel.pdf( 0.0, NaN, 1.0 )\ny = base.dists.gumbel.pdf( 0.0, 0.0, NaN )\ny = base.dists.gumbel.pdf( 2.0, 0.0, -1.0 )\n"
base.dists.gumbel.pdf.factory,"var myPDF = base.dists.gumbel.pdf.factory( 10.0, 2.0 );\nvar y = myPDF( 10.0 )\ny = myPDF( 12.0 )\n"
base.dists.gumbel.quantile,"var y = base.dists.gumbel.quantile( 0.8, 0.0, 1.0 )\ny = base.dists.gumbel.quantile( 0.5, 4.0, 2.0 )\ny = base.dists.gumbel.quantile( 0.5, 4.0, 4.0 )\ny = base.dists.gumbel.quantile( 1.1, 0.0, 1.0 )\ny = base.dists.gumbel.quantile( -0.2, 0.0, 1.0 )\ny = base.dists.gumbel.quantile( NaN, 0.0, 1.0 )\ny = base.dists.gumbel.quantile( 0.0, NaN, 1.0 )\ny = base.dists.gumbel.quantile( 0.0, 0.0, NaN )\ny = base.dists.gumbel.quantile( 0.5, 0.0, -1.0 )\n"
base.dists.gumbel.quantile.factory,"var myQuantile = base.dists.gumbel.quantile.factory( 8.0, 2.0 );\nvar y = myQuantile( 0.5 )\ny = myQuantile( 0.7 )\n"
base.dists.gumbel.skewness,"var y = base.dists.gumbel.skewness( 0.0, 1.0 )\ny = base.dists.gumbel.skewness( 4.0, 2.0 )\ny = base.dists.gumbel.skewness( NaN, 1.0 )\ny = base.dists.gumbel.skewness( 0.0, NaN )\ny = base.dists.gumbel.skewness( 0.0, 0.0 )\n"
base.dists.gumbel.stdev,"var y = base.dists.gumbel.stdev( 0.0, 1.0 )\ny = base.dists.gumbel.stdev( 4.0, 2.0 )\ny = base.dists.gumbel.stdev( NaN, 1.0 )\ny = base.dists.gumbel.stdev( 0.0, NaN )\ny = base.dists.gumbel.stdev( 0.0, 0.0 )\n"
base.dists.gumbel.variance,"var y = base.dists.gumbel.variance( 0.0, 1.0 )\ny = base.dists.gumbel.variance( 4.0, 2.0 )\ny = base.dists.gumbel.variance( NaN, 1.0 )\ny = base.dists.gumbel.variance( 0.0, NaN )\ny = base.dists.gumbel.variance( 0.0, 0.0 )\n"
base.dists.hypergeometric.cdf,"var y = base.dists.hypergeometric.cdf( 1.0, 8, 4, 2 )\ny = base.dists.hypergeometric.cdf( 1.5, 8, 4, 2 )\ny = base.dists.hypergeometric.cdf( 2.0, 8, 4, 2 )\ny = base.dists.hypergeometric.cdf( 0, 8, 4, 2)\ny = base.dists.hypergeometric.cdf( NaN, 10, 5, 2 )\ny = base.dists.hypergeometric.cdf( 0.0, NaN, 5, 2 )\ny = base.dists.hypergeometric.cdf( 0.0, 10, NaN, 2 )\ny = base.dists.hypergeometric.cdf( 0.0, 10, 5, NaN )\ny = base.dists.hypergeometric.cdf( 2.0, 10.5, 5, 2 )\ny = base.dists.hypergeometric.cdf( 2.0, 10, 1.5, 2 )\ny = base.dists.hypergeometric.cdf( 2.0, 10, 5, -2.0 )\ny = base.dists.hypergeometric.cdf( 2.0, 10, 5, 12 )\ny = base.dists.hypergeometric.cdf( 2.0, 8, 3, 9 )\n"
base.dists.hypergeometric.cdf.factory,"var myCDF = base.dists.hypergeometric.cdf.factory( 30, 20, 5 );\nvar y = myCDF( 4.0 )\ny = myCDF( 1.0 )\n"
base.dists.hypergeometric.Hypergeometric,"var hypergeometric = base.dists.hypergeometric.Hypergeometric( 100, 70, 20 );\nhypergeometric.N\nhypergeometric.K\nhypergeometric.n\nhypergeometric.kurtosis\nhypergeometric.mean\nhypergeometric.mode\nhypergeometric.skewness\nhypergeometric.stdev\nhypergeometric.variance\nhypergeometric.cdf( 2.9 )\nhypergeometric.logpmf( 10 )\nhypergeometric.pmf( 10 )\nhypergeometric.quantile( 0.8 )\n"
base.dists.hypergeometric.kurtosis,"var v = base.dists.hypergeometric.kurtosis( 16, 11, 4 )\nv = base.dists.hypergeometric.kurtosis( 4, 2, 2 )\nv = base.dists.hypergeometric.kurtosis( 10, 5, 12 )\nv = base.dists.hypergeometric.kurtosis( 10.3, 10, 4 )\nv = base.dists.hypergeometric.kurtosis( 10, 5.5, 4 )\nv = base.dists.hypergeometric.kurtosis( 10, 5, 4.5 )\nv = base.dists.hypergeometric.kurtosis( NaN, 10, 4 )\nv = base.dists.hypergeometric.kurtosis( 20, NaN, 4 )\nv = base.dists.hypergeometric.kurtosis( 20, 10, NaN )\n"
base.dists.hypergeometric.logpmf,"var y = base.dists.hypergeometric.logpmf( 1.0, 8, 4, 2 )\ny = base.dists.hypergeometric.logpmf( 2.0, 8, 4, 2 )\ny = base.dists.hypergeometric.logpmf( 0.0, 8, 4, 2 )\ny = base.dists.hypergeometric.logpmf( 1.5, 8, 4, 2 )\ny = base.dists.hypergeometric.logpmf( NaN, 10, 5, 2 )\ny = base.dists.hypergeometric.logpmf( 0.0, NaN, 5, 2 )\ny = base.dists.hypergeometric.logpmf( 0.0, 10, NaN, 2 )\ny = base.dists.hypergeometric.logpmf( 0.0, 10, 5, NaN )\ny = base.dists.hypergeometric.logpmf( 2.0, 10.5, 5, 2 )\ny = base.dists.hypergeometric.logpmf( 2.0, 5, 1.5, 2 )\ny = base.dists.hypergeometric.logpmf( 2.0, 10, 5, -2.0 )\ny = base.dists.hypergeometric.logpmf( 2.0, 10, 5, 12 )\ny = base.dists.hypergeometric.logpmf( 2.0, 8, 3, 9 )\n"
base.dists.hypergeometric.logpmf.factory,"var mylogPMF = base.dists.hypergeometric.logpmf.factory( 30, 20, 5 );\nvar y = mylogPMF( 4.0 )\ny = mylogPMF( 1.0 )\n"
base.dists.hypergeometric.mean,"var v = base.dists.hypergeometric.mean( 16, 11, 4 )\nv = base.dists.hypergeometric.mean( 2, 1, 1 )\nv = base.dists.hypergeometric.mean( 10, 5, 12 )\nv = base.dists.hypergeometric.mean( 10.3, 10, 4 )\nv = base.dists.hypergeometric.mean( 10, 5.5, 4 )\nv = base.dists.hypergeometric.mean( 10, 5, 4.5 )\nv = base.dists.hypergeometric.mean( NaN, 10, 4 )\nv = base.dists.hypergeometric.mean( 20, NaN, 4 )\nv = base.dists.hypergeometric.mean( 20, 10, NaN )\n"
base.dists.hypergeometric.mode,"var v = base.dists.hypergeometric.mode( 16, 11, 4 )\nv = base.dists.hypergeometric.mode( 2, 1, 1 )\nv = base.dists.hypergeometric.mode( 10, 5, 12 )\nv = base.dists.hypergeometric.mode( 10.3, 10, 4 )\nv = base.dists.hypergeometric.mode( 10, 5.5, 4 )\nv = base.dists.hypergeometric.mode( 10, 5, 4.5 )\nv = base.dists.hypergeometric.mode( NaN, 10, 4 )\nv = base.dists.hypergeometric.mode( 20, NaN, 4 )\nv = base.dists.hypergeometric.mode( 20, 10, NaN )\n"
base.dists.hypergeometric.pmf,"var y = base.dists.hypergeometric.pmf( 1.0, 8, 4, 2 )\ny = base.dists.hypergeometric.pmf( 2.0, 8, 4, 2 )\ny = base.dists.hypergeometric.pmf( 0.0, 8, 4, 2 )\ny = base.dists.hypergeometric.pmf( 1.5, 8, 4, 2 )\ny = base.dists.hypergeometric.pmf( NaN, 10, 5, 2 )\ny = base.dists.hypergeometric.pmf( 0.0, NaN, 5, 2 )\ny = base.dists.hypergeometric.pmf( 0.0, 10, NaN, 2 )\ny = base.dists.hypergeometric.pmf( 0.0, 10, 5, NaN )\ny = base.dists.hypergeometric.pmf( 2.0, 10.5, 5, 2 )\ny = base.dists.hypergeometric.pmf( 2.0, 5, 1.5, 2 )\ny = base.dists.hypergeometric.pmf( 2.0, 10, 5, -2.0 )\ny = base.dists.hypergeometric.pmf( 2.0, 10, 5, 12 )\ny = base.dists.hypergeometric.pmf( 2.0, 8, 3, 9 )\n"
base.dists.hypergeometric.pmf.factory,"var myPMF = base.dists.hypergeometric.pmf.factory( 30, 20, 5 );\nvar y = myPMF( 4.0 )\ny = myPMF( 1.0 )\n"
base.dists.hypergeometric.quantile,"var y = base.dists.hypergeometric.quantile( 0.4, 40, 20, 10 )\ny = base.dists.hypergeometric.quantile( 0.8, 60, 40, 20 )\ny = base.dists.hypergeometric.quantile( 0.5, 100, 10, 10 )\ny = base.dists.hypergeometric.quantile( 0.0, 100, 40, 20 )\ny = base.dists.hypergeometric.quantile( 1.0, 100, 40, 20 )\ny = base.dists.hypergeometric.quantile( NaN, 40, 20, 10 )\ny = base.dists.hypergeometric.quantile( 0.2, NaN, 20, 10 )\ny = base.dists.hypergeometric.quantile( 0.2, 40, NaN, 10 )\ny = base.dists.hypergeometric.quantile( 0.2, 40, 20, NaN )\n"
base.dists.hypergeometric.quantile.factory,"var myQuantile = base.dists.hypergeometric.quantile.factory( 100, 20, 10 );\nvar y = myQuantile( 0.2 )\ny = myQuantile( 0.9 )\n"
base.dists.hypergeometric.skewness,"var v = base.dists.hypergeometric.skewness( 16, 11, 4 )\nv = base.dists.hypergeometric.skewness( 4, 2, 2 )\nv = base.dists.hypergeometric.skewness( 10, 5, 12 )\nv = base.dists.hypergeometric.skewness( 10.3, 10, 4 )\nv = base.dists.hypergeometric.skewness( 10, 5.5, 4 )\nv = base.dists.hypergeometric.skewness( 10, 5, 4.5 )\nv = base.dists.hypergeometric.skewness( NaN, 10, 4 )\nv = base.dists.hypergeometric.skewness( 20, NaN, 4 )\nv = base.dists.hypergeometric.skewness( 20, 10, NaN )\n"
base.dists.hypergeometric.stdev,"var v = base.dists.hypergeometric.stdev( 16, 11, 4 )\nv = base.dists.hypergeometric.stdev( 2, 1, 1 )\nv = base.dists.hypergeometric.stdev( 10, 5, 12 )\nv = base.dists.hypergeometric.stdev( 10.3, 10, 4 )\nv = base.dists.hypergeometric.stdev( 10, 5.5, 4 )\nv = base.dists.hypergeometric.stdev( 10, 5, 4.5 )\nv = base.dists.hypergeometric.stdev( NaN, 10, 4 )\nv = base.dists.hypergeometric.stdev( 20, NaN, 4 )\nv = base.dists.hypergeometric.stdev( 20, 10, NaN )\n"
base.dists.hypergeometric.variance,"var v = base.dists.hypergeometric.variance( 16, 11, 4 )\nv = base.dists.hypergeometric.variance( 2, 1, 1 )\nv = base.dists.hypergeometric.variance( 10, 5, 12 )\nv = base.dists.hypergeometric.variance( 10.3, 10, 4 )\nv = base.dists.hypergeometric.variance( 10, 5.5, 4 )\nv = base.dists.hypergeometric.variance( 10, 5, 4.5 )\nv = base.dists.hypergeometric.variance( NaN, 10, 4 )\nv = base.dists.hypergeometric.variance( 20, NaN, 4 )\nv = base.dists.hypergeometric.variance( 20, 10, NaN )\n"
base.dists.invgamma.cdf,"var y = base.dists.invgamma.cdf( 2.0, 1.0, 1.0 )\ny = base.dists.invgamma.cdf( 2.0, 3.0, 1.0 )\ny = base.dists.invgamma.cdf( -1.0, 2.0, 2.0 )\ny = base.dists.invgamma.cdf( PINF, 4.0, 2.0 )\ny = base.dists.invgamma.cdf( NINF, 4.0, 2.0 )\ny = base.dists.invgamma.cdf( NaN, 0.0, 1.0 )\ny = base.dists.invgamma.cdf( 0.0, NaN, 1.0 )\ny = base.dists.invgamma.cdf( 0.0, 0.0, NaN )\ny = base.dists.invgamma.cdf( 2.0, -1.0, 1.0 )\ny = base.dists.invgamma.cdf( 2.0, 1.0, -1.0 )\n"
base.dists.invgamma.cdf.factory,"var myCDF = base.dists.invgamma.cdf.factory( 2.0, 0.5 );\nvar y = myCDF( 0.5 )\ny = myCDF( 2.0 )\n"
base.dists.invgamma.entropy,"var v = base.dists.invgamma.entropy( 1.0, 1.0 )\nv = base.dists.invgamma.entropy( 4.0, 12.0 )\nv = base.dists.invgamma.entropy( 8.0, 2.0 )\n"
base.dists.invgamma.InvGamma,"var invgamma = base.dists.invgamma.InvGamma( 6.0, 5.0 );\ninvgamma.alpha\ninvgamma.beta\ninvgamma.entropy\ninvgamma.kurtosis\ninvgamma.mean\ninvgamma.mode\ninvgamma.skewness\ninvgamma.stdev\ninvgamma.variance\ninvgamma.cdf( 0.8 )\ninvgamma.pdf( 1.0 )\ninvgamma.logpdf( 1.0 )\ninvgamma.quantile( 0.8 )\n"
base.dists.invgamma.kurtosis,"var v = base.dists.invgamma.kurtosis( 7.0, 5.0 )\nv = base.dists.invgamma.kurtosis( 6.0, 12.0 )\nv = base.dists.invgamma.kurtosis( 8.0, 2.0 )\n"
base.dists.invgamma.logpdf,"var y = base.dists.invgamma.logpdf( 2.0, 0.5, 1.0 )\ny = base.dists.invgamma.logpdf( 0.2, 1.0, 1.0 )\ny = base.dists.invgamma.logpdf( -1.0, 4.0, 2.0 )\ny = base.dists.invgamma.logpdf( NaN, 1.0, 1.0 )\ny = base.dists.invgamma.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.invgamma.logpdf( 0.0, 1.0, NaN )\ny = base.dists.invgamma.logpdf( 2.0, -1.0, 1.0 )\ny = base.dists.invgamma.logpdf( 2.0, 1.0, -1.0 )\n"
base.dists.invgamma.logpdf.factory,"var mylogPDF = base.dists.invgamma.logpdf.factory( 6.0, 7.0 );\nvar y = mylogPDF( 2.0 )\n"
base.dists.invgamma.mean,"var v = base.dists.invgamma.mean( 4.0, 12.0 )\nv = base.dists.invgamma.mean( 8.0, 2.0 )\n"
base.dists.invgamma.mode,"var v = base.dists.invgamma.mode( 1.0, 1.0 )\nv = base.dists.invgamma.mode( 4.0, 12.0 )\nv = base.dists.invgamma.mode( 8.0, 2.0 )\n"
base.dists.invgamma.pdf,"var y = base.dists.invgamma.pdf( 2.0, 0.5, 1.0 )\ny = base.dists.invgamma.pdf( 0.2, 1.0, 1.0 )\ny = base.dists.invgamma.pdf( -1.0, 4.0, 2.0 )\ny = base.dists.invgamma.pdf( NaN, 1.0, 1.0 )\ny = base.dists.invgamma.pdf( 0.0, NaN, 1.0 )\ny = base.dists.invgamma.pdf( 0.0, 1.0, NaN )\ny = base.dists.invgamma.pdf( 2.0, -1.0, 1.0 )\ny = base.dists.invgamma.pdf( 2.0, 1.0, -1.0 )\n"
base.dists.invgamma.pdf.factory,"var myPDF = base.dists.invgamma.pdf.factory( 6.0, 7.0 );\nvar y = myPDF( 2.0 )\n"
base.dists.invgamma.quantile,"var y = base.dists.invgamma.quantile( 0.8, 2.0, 1.0 )\ny = base.dists.invgamma.quantile( 0.5, 4.0, 2.0 )\ny = base.dists.invgamma.quantile( 1.1, 1.0, 1.0 )\ny = base.dists.invgamma.quantile( -0.2, 1.0, 1.0 )\ny = base.dists.invgamma.quantile( NaN, 1.0, 1.0 )\ny = base.dists.invgamma.quantile( 0.0, NaN, 1.0 )\ny = base.dists.invgamma.quantile( 0.0, 1.0, NaN )\ny = base.dists.invgamma.quantile( 0.5, -1.0, 1.0 )\ny = base.dists.invgamma.quantile( 0.5, 1.0, -1.0 )\n"
base.dists.invgamma.quantile.factory,"var myQuantile = base.dists.invgamma.quantile.factory( 2.0, 2.0 );\nvar y = myQuantile( 0.8 )\ny = myQuantile( 0.4 )\n"
base.dists.invgamma.skewness,"var v = base.dists.invgamma.skewness( 4.0, 12.0 )\nv = base.dists.invgamma.skewness( 8.0, 2.0 )\n"
base.dists.invgamma.stdev,"var v = base.dists.invgamma.stdev( 5.0, 7.0 )\nv = base.dists.invgamma.stdev( 4.0, 12.0 )\nv = base.dists.invgamma.stdev( 8.0, 2.0 )\n"
base.dists.invgamma.variance,"var v = base.dists.invgamma.variance( 5.0, 7.0 )\nv = base.dists.invgamma.variance( 4.0, 12.0 )\nv = base.dists.invgamma.variance( 8.0, 2.0 )\n"
base.dists.kumaraswamy.cdf,"var y = base.dists.kumaraswamy.cdf( 0.5, 1.0, 1.0 )\ny = base.dists.kumaraswamy.cdf( 0.5, 2.0, 4.0 )\ny = base.dists.kumaraswamy.cdf( 0.2, 2.0, 2.0 )\ny = base.dists.kumaraswamy.cdf( 0.8, 4.0, 4.0 )\ny = base.dists.kumaraswamy.cdf( -0.5, 4.0, 2.0 )\ny = base.dists.kumaraswamy.cdf( 1.5, 4.0, 2.0 )\ny = base.dists.kumaraswamy.cdf( 2.0, -1.0, 0.5 )\ny = base.dists.kumaraswamy.cdf( 2.0, 0.5, -1.0 )\ny = base.dists.kumaraswamy.cdf( NaN, 1.0, 1.0 )\ny = base.dists.kumaraswamy.cdf( 0.0, NaN, 1.0 )\ny = base.dists.kumaraswamy.cdf( 0.0, 1.0, NaN )\n"
base.dists.kumaraswamy.cdf.factory,"var mycdf = base.dists.kumaraswamy.cdf.factory( 0.5, 1.0 );\nvar y = mycdf( 0.8 )\ny = mycdf( 0.3 )\n"
base.dists.kumaraswamy.Kumaraswamy,"var kumaraswamy = base.dists.kumaraswamy.Kumaraswamy( 6.0, 5.0 );\nkumaraswamy.a\nkumaraswamy.b\nkumaraswamy.kurtosis\nkumaraswamy.mean\nkumaraswamy.mode\nkumaraswamy.skewness\nkumaraswamy.stdev\nkumaraswamy.variance\nkumaraswamy.cdf( 0.8 )\nkumaraswamy.pdf( 1.0 )\nkumaraswamy.quantile( 0.8 )\n"
base.dists.kumaraswamy.kurtosis,"var v = base.dists.kumaraswamy.kurtosis( 1.0, 1.0 )\nv = base.dists.kumaraswamy.kurtosis( 4.0, 12.0 )\nv = base.dists.kumaraswamy.kurtosis( 16.0, 8.0 )\n"
base.dists.kumaraswamy.logcdf,"var y = base.dists.kumaraswamy.logcdf( 0.5, 1.0, 1.0 )\ny = base.dists.kumaraswamy.logcdf( 0.5, 2.0, 4.0 )\ny = base.dists.kumaraswamy.logcdf( 0.2, 2.0, 2.0 )\ny = base.dists.kumaraswamy.logcdf( 0.8, 4.0, 4.0 )\ny = base.dists.kumaraswamy.logcdf( -0.5, 4.0, 2.0 )\ny = base.dists.kumaraswamy.logcdf( 1.5, 4.0, 2.0 )\ny = base.dists.kumaraswamy.logcdf( 2.0, -1.0, 0.5 )\ny = base.dists.kumaraswamy.logcdf( 2.0, 0.5, -1.0 )\ny = base.dists.kumaraswamy.logcdf( NaN, 1.0, 1.0 )\ny = base.dists.kumaraswamy.logcdf( 0.0, NaN, 1.0 )\ny = base.dists.kumaraswamy.logcdf( 0.0, 1.0, NaN )\n"
base.dists.kumaraswamy.logcdf.factory,"var mylogcdf = base.dists.kumaraswamy.logcdf.factory( 0.5, 1.0 );\nvar y = mylogcdf( 0.8 )\ny = mylogcdf( 0.3 )\n"
base.dists.kumaraswamy.logpdf,"var y = base.dists.kumaraswamy.logpdf( 0.5, 1.0, 1.0 )\ny = base.dists.kumaraswamy.logpdf( 0.5, 2.0, 4.0 )\ny = base.dists.kumaraswamy.logpdf( 0.2, 2.0, 2.0 )\ny = base.dists.kumaraswamy.logpdf( 0.8, 4.0, 4.0 )\ny = base.dists.kumaraswamy.logpdf( -0.5, 4.0, 2.0 )\ny = base.dists.kumaraswamy.logpdf( 1.5, 4.0, 2.0 )\ny = base.dists.kumaraswamy.logpdf( 2.0, -1.0, 0.5 )\ny = base.dists.kumaraswamy.logpdf( 2.0, 0.5, -1.0 )\ny = base.dists.kumaraswamy.logpdf( NaN, 1.0, 1.0 )\ny = base.dists.kumaraswamy.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.kumaraswamy.logpdf( 0.0, 1.0, NaN )\n"
base.dists.kumaraswamy.logpdf.factory,"var mylogpdf = base.dists.kumaraswamy.logpdf.factory( 0.5, 1.0 );\nvar y = mylogpdf( 0.8 )\ny = mylogpdf( 0.3 )\n"
base.dists.kumaraswamy.mean,"var v = base.dists.kumaraswamy.mean( 1.5, 1.5 )\nv = base.dists.kumaraswamy.mean( 4.0, 12.0 )\nv = base.dists.kumaraswamy.mean( 16.0, 8.0 )\n"
base.dists.kumaraswamy.median,"var v = base.dists.kumaraswamy.median( 1.0, 1.0 )\nv = base.dists.kumaraswamy.median( 4.0, 12.0 )\nv = base.dists.kumaraswamy.median( 16.0, 8.0 )\n"
base.dists.kumaraswamy.mode,"var v = base.dists.kumaraswamy.mode( 1.5, 1.5 )\nv = base.dists.kumaraswamy.mode( 4.0, 12.0 )\nv = base.dists.kumaraswamy.mode( 16.0, 8.0 )\n"
base.dists.kumaraswamy.pdf,"var y = base.dists.kumaraswamy.pdf( 0.5, 1.0, 1.0 )\ny = base.dists.kumaraswamy.pdf( 0.5, 2.0, 4.0 )\ny = base.dists.kumaraswamy.pdf( 0.2, 2.0, 2.0 )\ny = base.dists.kumaraswamy.pdf( 0.8, 4.0, 4.0 )\ny = base.dists.kumaraswamy.pdf( -0.5, 4.0, 2.0 )\ny = base.dists.kumaraswamy.pdf( 1.5, 4.0, 2.0 )\ny = base.dists.kumaraswamy.pdf( 2.0, -1.0, 0.5 )\ny = base.dists.kumaraswamy.pdf( 2.0, 0.5, -1.0 )\ny = base.dists.kumaraswamy.pdf( NaN, 1.0, 1.0 )\ny = base.dists.kumaraswamy.pdf( 0.0, NaN, 1.0 )\ny = base.dists.kumaraswamy.pdf( 0.0, 1.0, NaN )\n"
base.dists.kumaraswamy.pdf.factory,"var mypdf = base.dists.kumaraswamy.pdf.factory( 0.5, 1.0 );\nvar y = mypdf( 0.8 )\ny = mypdf( 0.3 )\n"
base.dists.kumaraswamy.quantile,"var y = base.dists.kumaraswamy.quantile( 0.5, 1.0, 1.0 )\ny = base.dists.kumaraswamy.quantile( 0.5, 2.0, 4.0 )\ny = base.dists.kumaraswamy.quantile( 0.2, 2.0, 2.0 )\ny = base.dists.kumaraswamy.quantile( 0.8, 4.0, 4.0 )\ny = base.dists.kumaraswamy.quantile( -0.5, 4.0, 2.0 )\ny = base.dists.kumaraswamy.quantile( 1.5, 4.0, 2.0 )\ny = base.dists.kumaraswamy.quantile( 2.0, -1.0, 0.5 )\ny = base.dists.kumaraswamy.quantile( 2.0, 0.5, -1.0 )\ny = base.dists.kumaraswamy.quantile( NaN, 1.0, 1.0 )\ny = base.dists.kumaraswamy.quantile( 0.0, NaN, 1.0 )\ny = base.dists.kumaraswamy.quantile( 0.0, 1.0, NaN )\n"
base.dists.kumaraswamy.quantile.factory,"var myQuantile = base.dists.kumaraswamy.quantile.factory( 0.5, 1.0 );\nvar y = myQuantile( 0.8 )\ny = myQuantile( 0.3 )\n"
base.dists.kumaraswamy.skewness,"var v = base.dists.kumaraswamy.skewness( 1.0, 1.0 )\nv = base.dists.kumaraswamy.skewness( 4.0, 12.0 )\nv = base.dists.kumaraswamy.skewness( 16.0, 8.0 )\n"
base.dists.kumaraswamy.stdev,"var v = base.dists.kumaraswamy.stdev( 1.0, 1.0 )\nv = base.dists.kumaraswamy.stdev( 4.0, 12.0 )\nv = base.dists.kumaraswamy.stdev( 16.0, 8.0 )\n"
base.dists.kumaraswamy.variance,"var v = base.dists.kumaraswamy.variance( 1.0, 1.0 )\nv = base.dists.kumaraswamy.variance( 4.0, 12.0 )\nv = base.dists.kumaraswamy.variance( 16.0, 8.0 )\n"
base.dists.laplace.cdf,"var y = base.dists.laplace.cdf( 2.0, 0.0, 1.0 )\ny = base.dists.laplace.cdf( 5.0, 10.0, 3.0 )\ny = base.dists.laplace.cdf( NaN, 0.0, 1.0 )\ny = base.dists.laplace.cdf( 2, NaN, 1.0 )\ny = base.dists.laplace.cdf( 2.0, 0.0, NaN )\ny = base.dists.laplace.cdf( 2.0, 0.0, -1.0 )\n"
base.dists.laplace.cdf.factory,"var myCDF = base.dists.laplace.cdf.factory( 2.0, 3.0 );\nvar y = myCDF( 10.0 )\ny = myCDF( 2.0 )\n"
base.dists.laplace.entropy,"var y = base.dists.laplace.entropy( 0.0, 1.0 )\ny = base.dists.laplace.entropy( 4.0, 2.0 )\ny = base.dists.laplace.entropy( NaN, 1.0 )\ny = base.dists.laplace.entropy( 0.0, NaN )\ny = base.dists.laplace.entropy( 0.0, 0.0 )\n"
base.dists.laplace.kurtosis,"var y = base.dists.laplace.kurtosis( 0.0, 1.0 )\ny = base.dists.laplace.kurtosis( 4.0, 2.0 )\ny = base.dists.laplace.kurtosis( NaN, 1.0 )\ny = base.dists.laplace.kurtosis( 0.0, NaN )\ny = base.dists.laplace.kurtosis( 0.0, 0.0 )\n"
base.dists.laplace.Laplace,"var laplace = base.dists.laplace.Laplace( -2.0, 3.0 );\nlaplace.mu\nlaplace.b\nlaplace.entropy\nlaplace.kurtosis\nlaplace.mean\nlaplace.median\nlaplace.mode\nlaplace.skewness\nlaplace.stdev\nlaplace.variance\nlaplace.cdf( 0.8 )\nlaplace.logcdf( 0.8 )\nlaplace.logpdf( 1.0 )\nlaplace.mgf( 0.2 )\nlaplace.pdf( 2.0 )\nlaplace.quantile( 0.9 )\n"
base.dists.laplace.logcdf,"var y = base.dists.laplace.logcdf( 2.0, 0.0, 1.0 )\ny = base.dists.laplace.logcdf( 5.0, 10.0, 3.0 )\ny = base.dists.laplace.logcdf( NaN, 0.0, 1.0 )\ny = base.dists.laplace.logcdf( 2, NaN, 1.0 )\ny = base.dists.laplace.logcdf( 2.0, 0.0, NaN )\ny = base.dists.laplace.logcdf( 2.0, 0.0, -1.0 )\n"
base.dists.laplace.logcdf.factory,"var mylogcdf = base.dists.laplace.logcdf.factory( 2.0, 3.0 );\nvar y = mylogcdf( 10.0 )\ny = mylogcdf( 2.0 )\n"
base.dists.laplace.logpdf,"var y = base.dists.laplace.logpdf( 2.0, 0.0, 1.0 )\ny = base.dists.laplace.logpdf( -1.0, 2.0, 3.0 )\ny = base.dists.laplace.logpdf( 2.5, 2.0, 3.0 )\ny = base.dists.laplace.logpdf( NaN, 0.0, 1.0 )\ny = base.dists.laplace.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.laplace.logpdf( 0.0, 0.0, NaN )\ny = base.dists.laplace.logpdf( 2.0, 0.0, -1.0 )\n"
base.dists.laplace.logpdf.factory,"var mylogPDF = base.dists.laplace.logpdf.factory( 10.0, 2.0 );\nvar y = mylogPDF( 10.0 )\n"
base.dists.laplace.mean,"var y = base.dists.laplace.mean( 0.0, 1.0 )\ny = base.dists.laplace.mean( 4.0, 2.0 )\ny = base.dists.laplace.mean( NaN, 1.0 )\ny = base.dists.laplace.mean( 0.0, NaN )\ny = base.dists.laplace.mean( 0.0, 0.0 )\n"
base.dists.laplace.median,"var y = base.dists.laplace.median( 0.0, 1.0 )\ny = base.dists.laplace.median( 4.0, 2.0 )\ny = base.dists.laplace.median( NaN, 1.0 )\ny = base.dists.laplace.median( 0.0, NaN )\ny = base.dists.laplace.median( 0.0, 0.0 )\n"
base.dists.laplace.mgf,"var y = base.dists.laplace.mgf( 0.5, 0.0, 1.0 )\ny = base.dists.laplace.mgf( 0.0, 0.0, 1.0 )\ny = base.dists.laplace.mgf( -1.0, 4.0, 0.2 )\ny = base.dists.laplace.mgf( NaN, 0.0, 1.0 )\ny = base.dists.laplace.mgf( 0.0, NaN, 1.0 )\ny = base.dists.laplace.mgf( 0.0, 0.0, NaN )\ny = base.dists.laplace.mgf( 1.0, 0.0, 2.0 )\ny = base.dists.laplace.mgf( -0.5, 0.0, 4.0 )\ny = base.dists.laplace.mgf( 2.0, 0.0, 0.0 )\ny = base.dists.laplace.mgf( 2.0, 0.0, -1.0 )\n"
base.dists.laplace.mgf.factory,"var mymgf = base.dists.laplace.mgf.factory( 4.0, 2.0 );\nvar y = mymgf( 0.2 )\ny = mymgf( 0.4 )\n"
base.dists.laplace.mode,"var y = base.dists.laplace.mode( 0.0, 1.0 )\ny = base.dists.laplace.mode( 4.0, 2.0 )\ny = base.dists.laplace.mode( NaN, 1.0 )\ny = base.dists.laplace.mode( 0.0, NaN )\ny = base.dists.laplace.mode( 0.0, 0.0 )\n"
base.dists.laplace.pdf,"var y = base.dists.laplace.pdf( 2.0, 0.0, 1.0 )\ny = base.dists.laplace.pdf( -1.0, 2.0, 3.0 )\ny = base.dists.laplace.pdf( 2.5, 2.0, 3.0 )\ny = base.dists.laplace.pdf( NaN, 0.0, 1.0 )\ny = base.dists.laplace.pdf( 0.0, NaN, 1.0 )\ny = base.dists.laplace.pdf( 0.0, 0.0, NaN )\ny = base.dists.laplace.pdf( 2.0, 0.0, -1.0 )\n"
base.dists.laplace.pdf.factory,"var myPDF = base.dists.laplace.pdf.factory( 10.0, 2.0 );\nvar y = myPDF( 10.0 )\n"
base.dists.laplace.quantile,"var y = base.dists.laplace.quantile( 0.8, 0.0, 1.0 )\ny = base.dists.laplace.quantile( 0.5, 4.0, 2.0 )\ny = base.dists.laplace.quantile( 1.1, 0.0, 1.0 )\ny = base.dists.laplace.quantile( -0.2, 0.0, 1.0 )\ny = base.dists.laplace.quantile( NaN, 0.0, 1.0 )\ny = base.dists.laplace.quantile( 0.0, NaN, 1.0 )\ny = base.dists.laplace.quantile( 0.0, 0.0, NaN )\ny = base.dists.laplace.quantile( 0.5, 0.0, -1.0 )\n"
base.dists.laplace.quantile.factory,"var myQuantile = base.dists.laplace.quantile.factory( 10.0, 2.0 );\nvar y = myQuantile( 0.5 )\ny = myQuantile( 0.8 )\n"
base.dists.laplace.skewness,"var y = base.dists.laplace.skewness( 0.0, 1.0 )\ny = base.dists.laplace.skewness( 4.0, 2.0 )\ny = base.dists.laplace.skewness( NaN, 1.0 )\ny = base.dists.laplace.skewness( 0.0, NaN )\ny = base.dists.laplace.skewness( 0.0, 0.0 )\n"
base.dists.laplace.stdev,"var y = base.dists.laplace.stdev( 0.0, 1.0 )\ny = base.dists.laplace.stdev( 4.0, 2.0 )\ny = base.dists.laplace.stdev( NaN, 1.0 )\ny = base.dists.laplace.stdev( 0.0, NaN )\ny = base.dists.laplace.stdev( 0.0, 0.0 )\n"
base.dists.laplace.variance,"var y = base.dists.laplace.variance( 0.0, 1.0 )\ny = base.dists.laplace.variance( 4.0, 2.0 )\ny = base.dists.laplace.variance( NaN, 1.0 )\ny = base.dists.laplace.variance( 0.0, NaN )\ny = base.dists.laplace.variance( 0.0, 0.0 )\n"
base.dists.levy.cdf,"var y = base.dists.levy.cdf( 2.0, 0.0, 1.0 )\ny = base.dists.levy.cdf( 12.0, 10.0, 3.0 )\ny = base.dists.levy.cdf( 9.0, 10.0, 3.0 )\ny = base.dists.levy.cdf( NaN, 0.0, 1.0 )\ny = base.dists.levy.cdf( 2, NaN, 1.0 )\ny = base.dists.levy.cdf( 2.0, 0.0, NaN )\ny = base.dists.levy.cdf( 2.0, 0.0, -1.0 )\n"
base.dists.levy.cdf.factory,"var myCDF = base.dists.levy.cdf.factory( 2.0, 3.0 );\nvar y = myCDF( 10.0 )\ny = myCDF( 2.0 )\n"
base.dists.levy.entropy,"var y = base.dists.levy.entropy( 0.0, 1.0 )\ny = base.dists.levy.entropy( 4.0, 2.0 )\ny = base.dists.levy.entropy( NaN, 1.0 )\ny = base.dists.levy.entropy( 0.0, NaN )\ny = base.dists.levy.entropy( 0.0, 0.0 )\n"
base.dists.levy.Levy,"var levy = base.dists.levy.Levy( -2.0, 3.0 );\nlevy.mu\nlevy.c\nlevy.entropy\nlevy.mean\nlevy.median\nlevy.mode\nlevy.stdev\nlevy.variance\nlevy.cdf( 0.8 )\nlevy.logcdf( 0.8 )\nlevy.logpdf( 1.0 )\nlevy.pdf( 1.0 )\nlevy.quantile( 0.8 )\n"
base.dists.levy.logcdf,"var y = base.dists.levy.logcdf( 2.0, 0.0, 1.0 )\ny = base.dists.levy.logcdf( 12.0, 10.0, 3.0 )\ny = base.dists.levy.logcdf( 9.0, 10.0, 3.0 )\ny = base.dists.levy.logcdf( NaN, 0.0, 1.0 )\ny = base.dists.levy.logcdf( 2, NaN, 1.0 )\ny = base.dists.levy.logcdf( 2.0, 0.0, NaN )\ny = base.dists.levy.logcdf( 2.0, 0.0, -1.0 )\n"
base.dists.levy.logcdf.factory,"var mylogcdf = base.dists.levy.logcdf.factory( 2.0, 3.0 );\nvar y = mylogcdf( 10.0 )\ny = mylogcdf( 2.0 )\n"
base.dists.levy.logpdf,"var y = base.dists.levy.logpdf( 2.0, 0.0, 1.0 )\ny = base.dists.levy.logpdf( -1.0, 4.0, 2.0 )\ny = base.dists.levy.logpdf( NaN, 0.0, 1.0 )\ny = base.dists.levy.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.levy.logpdf( 0.0, 0.0, NaN )\ny = base.dists.levy.logpdf( 2.0, 0.0, -1.0 )\n"
base.dists.levy.logpdf.factory,"var mylogPDF = base.dists.levy.logpdf.factory( 10.0, 2.0 );\nvar y = mylogPDF( 11.0 )\n"
base.dists.levy.mean,"var y = base.dists.levy.mean( 0.0, 1.0 )\ny = base.dists.levy.mean( 4.0, 3.0 )\ny = base.dists.levy.mean( NaN, 1.0 )\ny = base.dists.levy.mean( 0.0, NaN )\ny = base.dists.levy.mean( 0.0, 0.0 )\n"
base.dists.levy.median,"var y = base.dists.levy.median( 0.0, 1.0 )\ny = base.dists.levy.median( 4.0, 3.0 )\ny = base.dists.levy.median( NaN, 1.0 )\ny = base.dists.levy.median( 0.0, NaN )\ny = base.dists.levy.median( 0.0, 0.0 )\n"
base.dists.levy.mode,"var y = base.dists.levy.mode( 0.0, 1.0 )\ny = base.dists.levy.mode( 4.0, 3.0 )\ny = base.dists.levy.mode( NaN, 1.0 )\ny = base.dists.levy.mode( 0.0, NaN )\ny = base.dists.levy.mode( 0.0, 0.0 )\n"
base.dists.levy.pdf,"var y = base.dists.levy.pdf( 2.0, 0.0, 1.0 )\ny = base.dists.levy.pdf( -1.0, 4.0, 2.0 )\ny = base.dists.levy.pdf( NaN, 0.0, 1.0 )\ny = base.dists.levy.pdf( 0.0, NaN, 1.0 )\ny = base.dists.levy.pdf( 0.0, 0.0, NaN )\ny = base.dists.levy.pdf( 2.0, 0.0, -1.0 )\n"
base.dists.levy.pdf.factory,"var myPDF = base.dists.levy.pdf.factory( 10.0, 2.0 );\nvar y = myPDF( 11.0 )\n"
base.dists.levy.quantile,"var y = base.dists.levy.quantile( 0.8, 0.0, 1.0 )\ny = base.dists.levy.quantile( 0.5, 4.0, 2.0 )\ny = base.dists.levy.quantile( 1.1, 0.0, 1.0 )\ny = base.dists.levy.quantile( -0.2, 0.0, 1.0 )\ny = base.dists.levy.quantile( NaN, 0.0, 1.0 )\ny = base.dists.levy.quantile( 0.0, NaN, 1.0 )\ny = base.dists.levy.quantile( 0.0, 0.0, NaN )\ny = base.dists.levy.quantile( 0.5, 0.0, -1.0 )\n"
base.dists.levy.quantile.factory,"var myQuantile = base.dists.levy.quantile.factory( 10.0, 2.0 );\nvar y = myQuantile( 0.5 )\n"
base.dists.levy.stdev,"var y = base.dists.levy.stdev( 0.0, 1.0 )\ny = base.dists.levy.stdev( 4.0, 3.0 )\ny = base.dists.levy.stdev( NaN, 1.0 )\ny = base.dists.levy.stdev( 0.0, NaN )\ny = base.dists.levy.stdev( 0.0, 0.0 )\n"
base.dists.levy.variance,"var y = base.dists.levy.variance( 0.0, 1.0 )\ny = base.dists.levy.variance( 4.0, 3.0 )\ny = base.dists.levy.variance( NaN, 1.0 )\ny = base.dists.levy.variance( 0.0, NaN )\ny = base.dists.levy.variance( 0.0, 0.0 )\n"
base.dists.logistic.cdf,"var y = base.dists.logistic.cdf( 2.0, 0.0, 1.0 )\ny = base.dists.logistic.cdf( 5.0, 10.0, 3.0 )\ny = base.dists.logistic.cdf( 2.0, 0.0, NaN )\ny = base.dists.logistic.cdf( 2.0, NaN, 1.0 )\ny = base.dists.logistic.cdf( NaN, 0.0, 1.0 )\ny = base.dists.logistic.cdf( 2.0, 8.0, 0.0 )\ny = base.dists.logistic.cdf( 8.0, 8.0, 0.0 )\ny = base.dists.logistic.cdf( 10.0, 8.0, 0.0 )\n"
base.dists.logistic.cdf.factory,"var mycdf = base.dists.logistic.cdf.factory( 3.0, 1.5 );\nvar y = mycdf( 1.0 )\n"
base.dists.logistic.entropy,"var y = base.dists.logistic.entropy( 0.0, 1.0 )\ny = base.dists.logistic.entropy( 4.0, 2.0 )\ny = base.dists.logistic.entropy( NaN, 1.0 )\ny = base.dists.logistic.entropy( 0.0, NaN )\ny = base.dists.logistic.entropy( 0.0, 0.0 )\n"
base.dists.logistic.kurtosis,"var y = base.dists.logistic.kurtosis( 0.0, 1.0 )\ny = base.dists.logistic.kurtosis( 4.0, 2.0 )\ny = base.dists.logistic.kurtosis( NaN, 1.0 )\ny = base.dists.logistic.kurtosis( 0.0, NaN )\ny = base.dists.logistic.kurtosis( 0.0, 0.0 )\n"
base.dists.logistic.logcdf,"var y = base.dists.logistic.logcdf( 2.0, 0.0, 1.0 )\ny = base.dists.logistic.logcdf( 5.0, 10.0, 3.0 )\ny = base.dists.logistic.logcdf( 2.0, 0.0, NaN )\ny = base.dists.logistic.logcdf( 2, NaN, 1.0 )\ny = base.dists.logistic.logcdf( NaN, 0.0, 1.0 )\n"
base.dists.logistic.logcdf.factory,"var mylogcdf = base.dists.logistic.logcdf.factory( 3.0, 1.5 );\nvar y = mylogcdf( 1.0 )\n"
base.dists.logistic.Logistic,"var logistic = base.dists.logistic.Logistic( -2.0, 3.0 );\nlogistic.mu\nlogistic.s\nlogistic.entropy\nlogistic.kurtosis\nlogistic.mean\nlogistic.median\nlogistic.mode\nlogistic.skewness\nlogistic.stdev\nlogistic.variance\nlogistic.cdf( 0.8 )\nlogistic.logcdf( 0.8 )\nlogistic.logpdf( 2.0 )\nlogistic.mgf( 0.2 )\nlogistic.pdf( 2.0 )\nlogistic.quantile( 0.9 )\n"
base.dists.logistic.logpdf,"var y = base.dists.logistic.logpdf( 2.0, 0.0, 1.0 )\ny = base.dists.logistic.logpdf( -1.0, 4.0, 2.0 )\ny = base.dists.logistic.logpdf( NaN, 0.0, 1.0 )\ny = base.dists.logistic.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.logistic.logpdf( 0.0, 0.0, NaN )\ny = base.dists.logistic.logpdf( 2.0, 0.0, -1.0 )\ny = base.dists.logistic.logpdf( 2.0, 8.0, 0.0 )\ny = base.dists.logistic.logpdf( 8.0, 8.0, 0.0 )\n"
base.dists.logistic.logpdf.factory,"var mylogpdf = base.dists.logistic.logpdf.factory( 10.0, 2.0 );\nvar y = mylogpdf( 10.0 )\n"
base.dists.logistic.mean,"var y = base.dists.logistic.mean( 0.0, 1.0 )\ny = base.dists.logistic.mean( 4.0, 2.0 )\ny = base.dists.logistic.mean( NaN, 1.0 )\ny = base.dists.logistic.mean( 0.0, NaN )\ny = base.dists.logistic.mean( 0.0, 0.0 )\n"
base.dists.logistic.median,"var y = base.dists.logistic.median( 0.0, 1.0 )\ny = base.dists.logistic.median( 4.0, 2.0 )\ny = base.dists.logistic.median( NaN, 1.0 )\ny = base.dists.logistic.median( 0.0, NaN )\ny = base.dists.logistic.median( 0.0, 0.0 )\n"
base.dists.logistic.mgf,"var y = base.dists.logistic.mgf( 0.9, 0.0, 1.0 )\ny = base.dists.logistic.mgf( 0.1, 4.0, 4.0 )\ny = base.dists.logistic.mgf( -0.2, 4.0, 4.0 )\ny = base.dists.logistic.mgf( 0.5, 0.0, -1.0 )\ny = base.dists.logistic.mgf( 0.5, 0.0, 4.0 )\ny = base.dists.logistic.mgf( NaN, 0.0, 1.0 )\ny = base.dists.logistic.mgf( 0.0, NaN, 1.0 )\ny = base.dists.logistic.mgf( 0.0, 0.0, NaN )\n"
base.dists.logistic.mgf.factory,"var mymgf = base.dists.logistic.mgf.factory( 10.0, 0.5 );\nvar y = mymgf( 0.5 )\ny = mymgf( 2.0 )\n"
base.dists.logistic.mode,"var y = base.dists.logistic.mode( 0.0, 1.0 )\ny = base.dists.logistic.mode( 4.0, 2.0 )\ny = base.dists.logistic.mode( NaN, 1.0 )\ny = base.dists.logistic.mode( 0.0, NaN )\ny = base.dists.logistic.mode( 0.0, 0.0 )\n"
base.dists.logistic.pdf,"var y = base.dists.logistic.pdf( 2.0, 0.0, 1.0 )\ny = base.dists.logistic.pdf( -1.0, 4.0, 2.0 )\ny = base.dists.logistic.pdf( NaN, 0.0, 1.0 )\ny = base.dists.logistic.pdf( 0.0, NaN, 1.0 )\ny = base.dists.logistic.pdf( 0.0, 0.0, NaN )\ny = base.dists.logistic.pdf( 2.0, 0.0, -1.0 )\ny = base.dists.logistic.pdf( 2.0, 8.0, 0.0 )\ny = base.dists.logistic.pdf( 8.0, 8.0, 0.0 )\n"
base.dists.logistic.pdf.factory,"var myPDF = base.dists.logistic.pdf.factory( 10.0, 2.0 );\nvar y = myPDF( 10.0 )\n"
base.dists.logistic.quantile,"var y = base.dists.logistic.quantile( 0.8, 0.0, 1.0 )\ny = base.dists.logistic.quantile( 0.5, 4.0, 2.0 )\ny = base.dists.logistic.quantile( 1.1, 0.0, 1.0 )\ny = base.dists.logistic.quantile( -0.2, 0.0, 1.0 )\ny = base.dists.logistic.quantile( NaN, 0.0, 1.0 )\ny = base.dists.logistic.quantile( 0.0, NaN, 1.0 )\ny = base.dists.logistic.quantile( 0.0, 0.0, NaN )\ny = base.dists.logistic.quantile( 0.5, 0.0, -1.0 )\n"
base.dists.logistic.quantile.factory,"var myQuantile = base.dists.logistic.quantile.factory( 10.0, 2.0 );\nvar y = myQuantile( 0.5 )\n"
base.dists.logistic.skewness,"var y = base.dists.logistic.skewness( 0.0, 1.0 )\ny = base.dists.logistic.skewness( 4.0, 2.0 )\ny = base.dists.logistic.skewness( NaN, 1.0 )\ny = base.dists.logistic.skewness( 0.0, NaN )\ny = base.dists.logistic.skewness( 0.0, 0.0 )\n"
base.dists.logistic.stdev,"var y = base.dists.logistic.stdev( 0.0, 1.0 )\ny = base.dists.logistic.stdev( 4.0, 2.0 )\ny = base.dists.logistic.stdev( NaN, 1.0 )\ny = base.dists.logistic.stdev( 0.0, NaN )\ny = base.dists.logistic.stdev( 0.0, 0.0 )\n"
base.dists.logistic.variance,"var y = base.dists.logistic.variance( 0.0, 1.0 )\ny = base.dists.logistic.variance( 4.0, 2.0 )\ny = base.dists.logistic.variance( NaN, 1.0 )\ny = base.dists.logistic.variance( 0.0, NaN )\ny = base.dists.logistic.variance( 0.0, 0.0 )\n"
base.dists.lognormal.cdf,"var y = base.dists.lognormal.cdf( 2.0, 0.0, 1.0 )\ny = base.dists.lognormal.cdf( 5.0, 10.0, 3.0 )\ny = base.dists.lognormal.cdf( 2.0, 0.0, NaN )\ny = base.dists.lognormal.cdf( 2.0, NaN, 1.0 )\ny = base.dists.lognormal.cdf( NaN, 0.0, 1.0 )\ny = base.dists.lognormal.cdf( 2.0, 0.0, -1.0 )\ny = base.dists.lognormal.cdf( 2.0, 0.0, 0.0 )\n"
base.dists.lognormal.cdf.factory,"var myCDF = base.dists.lognormal.cdf.factory( 3.0, 1.5 );\nvar y = myCDF( 1.0 )\ny = myCDF( 4.0 )\n"
base.dists.lognormal.entropy,"var y = base.dists.lognormal.entropy( 0.0, 1.0 )\ny = base.dists.lognormal.entropy( 5.0, 2.0 )\ny = base.dists.lognormal.entropy( NaN, 1.0 )\ny = base.dists.lognormal.entropy( 0.0, NaN )\ny = base.dists.lognormal.entropy( 0.0, 0.0 )\n"
base.dists.lognormal.kurtosis,"var y = base.dists.lognormal.kurtosis( 0.0, 1.0 )\ny = base.dists.lognormal.kurtosis( 5.0, 2.0 )\ny = base.dists.lognormal.kurtosis( NaN, 1.0 )\ny = base.dists.lognormal.kurtosis( 0.0, NaN )\ny = base.dists.lognormal.kurtosis( 0.0, 0.0 )\n"
base.dists.lognormal.LogNormal,"var lognormal = base.dists.lognormal.LogNormal( -2.0, 3.0 );\nlognormal.mu\nlognormal.sigma\nlognormal.entropy\nlognormal.kurtosis\nlognormal.mean\nlognormal.median\nlognormal.mode\nlognormal.skewness\nlognormal.stdev\nlognormal.variance\nlognormal.cdf( 0.8 )\nlognormal.logpdf( 2.0 )\nlognormal.pdf( 2.0 )\nlognormal.quantile( 0.9 )\n"
base.dists.lognormal.logpdf,"var y = base.dists.lognormal.logpdf( 2.0, 0.0, 1.0 )\ny = base.dists.lognormal.logpdf( 1.0, 0.0, 1.0 )\ny = base.dists.lognormal.logpdf( 1.0, 3.0, 1.0 )\ny = base.dists.lognormal.logpdf( -1.0, 4.0, 2.0 )\ny = base.dists.lognormal.logpdf( NaN, 0.0, 1.0 )\ny = base.dists.lognormal.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.lognormal.logpdf( 0.0, 0.0, NaN )\ny = base.dists.lognormal.logpdf( 2.0, 0.0, -1.0 )\ny = base.dists.lognormal.logpdf( 2.0, 0.0, 0.0 )\n"
base.dists.lognormal.logpdf.factory,"var mylogPDF = base.dists.lognormal.logpdf.factory( 4.0, 2.0 );\nvar y = mylogPDF( 10.0 )\ny = mylogPDF( 2.0 )\n"
base.dists.lognormal.mean,"var y = base.dists.lognormal.mean( 0.0, 1.0 )\ny = base.dists.lognormal.mean( 4.0, 2.0 )\ny = base.dists.lognormal.mean( NaN, 1.0 )\ny = base.dists.lognormal.mean( 0.0, NaN )\ny = base.dists.lognormal.mean( 0.0, 0.0 )\n"
base.dists.lognormal.median,"var y = base.dists.lognormal.median( 0.0, 1.0 )\ny = base.dists.lognormal.median( 5.0, 2.0 )\ny = base.dists.lognormal.median( NaN, 1.0 )\ny = base.dists.lognormal.median( 0.0, NaN )\ny = base.dists.lognormal.median( 0.0, 0.0 )\n"
base.dists.lognormal.mode,"var y = base.dists.lognormal.mode( 0.0, 1.0 )\ny = base.dists.lognormal.mode( 5.0, 2.0 )\ny = base.dists.lognormal.mode( NaN, 1.0 )\ny = base.dists.lognormal.mode( 0.0, NaN )\ny = base.dists.lognormal.mode( 0.0, 0.0 )\n"
base.dists.lognormal.pdf,"var y = base.dists.lognormal.pdf( 2.0, 0.0, 1.0 )\ny = base.dists.lognormal.pdf( 1.0, 0.0, 1.0 )\ny = base.dists.lognormal.pdf( 1.0, 3.0, 1.0 )\ny = base.dists.lognormal.pdf( -1.0, 4.0, 2.0 )\ny = base.dists.lognormal.pdf( NaN, 0.0, 1.0 )\ny = base.dists.lognormal.pdf( 0.0, NaN, 1.0 )\ny = base.dists.lognormal.pdf( 0.0, 0.0, NaN )\ny = base.dists.lognormal.pdf( 2.0, 0.0, -1.0 )\ny = base.dists.lognormal.pdf( 2.0, 0.0, 0.0 )\n"
base.dists.lognormal.pdf.factory,"var myPDF = base.dists.lognormal.pdf.factory( 4.0, 2.0 );\nvar y = myPDF( 10.0 )\ny = myPDF( 2.0 )\n"
base.dists.lognormal.quantile,"var y = base.dists.lognormal.quantile( 0.8, 0.0, 1.0 )\ny = base.dists.lognormal.quantile( 0.5, 4.0, 2.0 )\ny = base.dists.lognormal.quantile( 1.1, 0.0, 1.0 )\ny = base.dists.lognormal.quantile( -0.2, 0.0, 1.0 )\ny = base.dists.lognormal.quantile( NaN, 0.0, 1.0 )\ny = base.dists.lognormal.quantile( 0.0, NaN, 1.0 )\ny = base.dists.lognormal.quantile( 0.0, 0.0, NaN )\ny = base.dists.lognormal.quantile( 0.5, 0.0, -1.0 )\ny = base.dists.lognormal.quantile( 0.5, 0.0, 0.0 )\n"
base.dists.lognormal.quantile.factory,"var myQuantile = base.dists.lognormal.quantile.factory( 4.0, 2.0 );\nvar y = myQuantile( 0.2 )\ny = myQuantile( 0.8 )\n"
base.dists.lognormal.skewness,"var y = base.dists.lognormal.skewness( 0.0, 1.0 )\ny = base.dists.lognormal.skewness( 5.0, 2.0 )\ny = base.dists.lognormal.skewness( NaN, 1.0 )\ny = base.dists.lognormal.skewness( 0.0, NaN )\ny = base.dists.lognormal.skewness( 0.0, 0.0 )\n"
base.dists.lognormal.stdev,"var y = base.dists.lognormal.stdev( 0.0, 1.0 )\ny = base.dists.lognormal.stdev( 4.0, 2.0 )\ny = base.dists.lognormal.stdev( NaN, 1.0 )\ny = base.dists.lognormal.stdev( 0.0, NaN )\ny = base.dists.lognormal.stdev( 0.0, 0.0 )\n"
base.dists.lognormal.variance,"var y = base.dists.lognormal.variance( 0.0, 1.0 )\ny = base.dists.lognormal.variance( 4.0, 2.0 )\ny = base.dists.lognormal.variance( NaN, 1.0 )\ny = base.dists.lognormal.variance( 0.0, NaN )\ny = base.dists.lognormal.variance( 0.0, 0.0 )\n"
base.dists.negativeBinomial.cdf,"var y = base.dists.negativeBinomial.cdf( 5.0, 20.0, 0.8 )\ny = base.dists.negativeBinomial.cdf( 21.0, 20.0, 0.5 )\ny = base.dists.negativeBinomial.cdf( 5.0, 10.0, 0.4 )\ny = base.dists.negativeBinomial.cdf( 0.0, 10.0, 0.9 )\ny = base.dists.negativeBinomial.cdf( 21.0, 15.5, 0.5 )\ny = base.dists.negativeBinomial.cdf( 5.0, 7.4, 0.4 )\ny = base.dists.negativeBinomial.cdf( 2.0, 0.0, 0.5 )\ny = base.dists.negativeBinomial.cdf( 2.0, -2.0, 0.5 )\ny = base.dists.negativeBinomial.cdf( NaN, 20.0, 0.5 )\ny = base.dists.negativeBinomial.cdf( 0.0, NaN, 0.5 )\ny = base.dists.negativeBinomial.cdf( 0.0, 20.0, NaN )\ny = base.dists.negativeBinomial.cdf( 2.0, 20, -1.0 )\ny = base.dists.negativeBinomial.cdf( 2.0, 20, 1.5 )\n"
base.dists.negativeBinomial.cdf.factory,"var myCDF = base.dists.negativeBinomial.cdf.factory( 10, 0.5 );\nvar y = myCDF( 3.0 )\ny = myCDF( 11.0 )\n"
base.dists.negativeBinomial.kurtosis,"var v = base.dists.negativeBinomial.kurtosis( 100, 0.2 )\nv = base.dists.negativeBinomial.kurtosis( 20, 0.5 )\n"
base.dists.negativeBinomial.logpmf,"var y = base.dists.negativeBinomial.logpmf( 5.0, 20.0, 0.8 )\ny = base.dists.negativeBinomial.logpmf( 21.0, 20.0, 0.5 )\ny = base.dists.negativeBinomial.logpmf( 5.0, 10.0, 0.4 )\ny = base.dists.negativeBinomial.logpmf( 0.0, 10.0, 0.9 )\ny = base.dists.negativeBinomial.logpmf( 21.0, 15.5, 0.5 )\ny = base.dists.negativeBinomial.logpmf( 5.0, 7.4, 0.4 )\ny = base.dists.negativeBinomial.logpmf( 2.0, 0.0, 0.5 )\ny = base.dists.negativeBinomial.logpmf( 2.0, -2.0, 0.5 )\ny = base.dists.negativeBinomial.logpmf( 2.0, 20, -1.0 )\ny = base.dists.negativeBinomial.logpmf( 2.0, 20, 1.5 )\ny = base.dists.negativeBinomial.logpmf( NaN, 20.0, 0.5 )\ny = base.dists.negativeBinomial.logpmf( 0.0, NaN, 0.5 )\ny = base.dists.negativeBinomial.logpmf( 0.0, 20.0, NaN )\n"
base.dists.negativeBinomial.logpmf.factory,"var mylogPMF = base.dists.negativeBinomial.logpmf.factory( 10, 0.5 );\nvar y = mylogPMF( 3.0 )\ny = mylogPMF( 5.0 )\n"
base.dists.negativeBinomial.mean,"var v = base.dists.negativeBinomial.mean( 100, 0.2 )\nv = base.dists.negativeBinomial.mean( 20, 0.5 )\n"
base.dists.negativeBinomial.mgf,"var y = base.dists.negativeBinomial.mgf( 0.05, 20.0, 0.8 )\ny = base.dists.negativeBinomial.mgf( 0.1, 20.0, 0.1 )\ny = base.dists.negativeBinomial.mgf( 0.5, 10.0, 0.4 )\ny = base.dists.negativeBinomial.mgf( 0.1, 0.0, 0.5 )\ny = base.dists.negativeBinomial.mgf( 0.1, -2.0, 0.5 )\ny = base.dists.negativeBinomial.mgf( NaN, 20.0, 0.5 )\ny = base.dists.negativeBinomial.mgf( 0.0, NaN, 0.5 )\ny = base.dists.negativeBinomial.mgf( 0.0, 20.0, NaN )\ny = base.dists.negativeBinomial.mgf( 0.2, 20, -1.0 )\ny = base.dists.negativeBinomial.mgf( 0.2, 20, 1.5 )\n"
base.dists.negativeBinomial.mgf.factory,"var myMGF = base.dists.negativeBinomial.mgf.factory( 4.3, 0.4 );\nvar y = myMGF( 0.2 )\ny = myMGF( 0.4 )\n"
base.dists.negativeBinomial.mode,"var v = base.dists.negativeBinomial.mode( 100, 0.2 )\nv = base.dists.negativeBinomial.mode( 20, 0.5 )\n"
base.dists.negativeBinomial.NegativeBinomial,"var nbinomial = base.dists.negativeBinomial.NegativeBinomial( 8.0, 0.5 );\nnbinomial.r\nnbinomial.p\nnbinomial.kurtosis\nnbinomial.mean\nnbinomial.mode\nnbinomial.skewness\nnbinomial.stdev\nnbinomial.variance\nnbinomial.cdf( 2.9 )\nnbinomial.logpmf( 3.0 )\nnbinomial.mgf( 0.2 )\nnbinomial.pmf( 3.0 )\nnbinomial.quantile( 0.8 )\n"
base.dists.negativeBinomial.pmf,"var y = base.dists.negativeBinomial.pmf( 5.0, 20.0, 0.8 )\ny = base.dists.negativeBinomial.pmf( 21.0, 20.0, 0.5 )\ny = base.dists.negativeBinomial.pmf( 5.0, 10.0, 0.4 )\ny = base.dists.negativeBinomial.pmf( 0.0, 10.0, 0.9 )\ny = base.dists.negativeBinomial.pmf( 21.0, 15.5, 0.5 )\ny = base.dists.negativeBinomial.pmf( 5.0, 7.4, 0.4 )\ny = base.dists.negativeBinomial.pmf( 2.0, 0.0, 0.5 )\ny = base.dists.negativeBinomial.pmf( 2.0, -2.0, 0.5 )\ny = base.dists.negativeBinomial.pmf( 2.0, 20, -1.0 )\ny = base.dists.negativeBinomial.pmf( 2.0, 20, 1.5 )\ny = base.dists.negativeBinomial.pmf( NaN, 20.0, 0.5 )\ny = base.dists.negativeBinomial.pmf( 0.0, NaN, 0.5 )\ny = base.dists.negativeBinomial.pmf( 0.0, 20.0, NaN )\n"
base.dists.negativeBinomial.pmf.factory,"var myPMF = base.dists.negativeBinomial.pmf.factory( 10, 0.5 );\nvar y = myPMF( 3.0 )\ny = myPMF( 5.0 )\n"
base.dists.negativeBinomial.quantile,"var y = base.dists.negativeBinomial.quantile( 0.9, 20.0, 0.2 )\ny = base.dists.negativeBinomial.quantile( 0.9, 20.0, 0.8 )\ny = base.dists.negativeBinomial.quantile( 0.5, 10.0, 0.4 )\ny = base.dists.negativeBinomial.quantile( 0.0, 10.0, 0.9 )\ny = base.dists.negativeBinomial.quantile( 1.1, 20.0, 0.5 )\ny = base.dists.negativeBinomial.quantile( -0.1, 20.0, 0.5 )\ny = base.dists.negativeBinomial.quantile( 21.0, 15.5, 0.5 )\ny = base.dists.negativeBinomial.quantile( 5.0, 7.4, 0.4 )\ny = base.dists.negativeBinomial.quantile( 0.5, 0.0, 0.5 )\ny = base.dists.negativeBinomial.quantile( 0.5, -2.0, 0.5 )\ny = base.dists.negativeBinomial.quantile( 0.3, 20.0, -1.0 )\ny = base.dists.negativeBinomial.quantile( 0.3, 20.0, 1.5 )\ny = base.dists.negativeBinomial.quantile( NaN, 20.0, 0.5 )\ny = base.dists.negativeBinomial.quantile( 0.3, NaN, 0.5 )\ny = base.dists.negativeBinomial.quantile( 0.3, 20.0, NaN )\n"
base.dists.negativeBinomial.quantile.factory,"var myQuantile = base.dists.negativeBinomial.quantile.factory( 10.0, 0.5 );\nvar y = myQuantile( 0.1 )\ny = myQuantile( 0.9 )\n"
base.dists.negativeBinomial.skewness,"var v = base.dists.negativeBinomial.skewness( 100, 0.2 )\nv = base.dists.negativeBinomial.skewness( 20, 0.5 )\n"
base.dists.negativeBinomial.stdev,"var v = base.dists.negativeBinomial.stdev( 100, 0.2 )\nv = base.dists.negativeBinomial.stdev( 20, 0.5 )\n"
base.dists.negativeBinomial.variance,"var v = base.dists.negativeBinomial.variance( 100, 0.2 )\nv = base.dists.negativeBinomial.variance( 20, 0.5 )\n"
base.dists.normal.cdf,"var y = base.dists.normal.cdf( 2.0, 0.0, 1.0 )\ny = base.dists.normal.cdf( -1.0, -1.0, 2.0 )\ny = base.dists.normal.cdf( -1.0, 4.0, 2.0 )\ny = base.dists.normal.cdf( NaN, 0.0, 1.0 )\ny = base.dists.normal.cdf( 0.0, NaN, 1.0 )\ny = base.dists.normal.cdf( 0.0, 0.0, NaN )\ny = base.dists.normal.cdf( 2.0, 0.0, -1.0 )\ny = base.dists.normal.cdf( 2.0, 8.0, 0.0 )\ny = base.dists.normal.cdf( 8.0, 8.0, 0.0 )\ny = base.dists.normal.cdf( 10.0, 8.0, 0.0 )\n"
base.dists.normal.cdf.factory,"var myCDF = base.dists.normal.cdf.factory( 10.0, 2.0 );\nvar y = myCDF( 10.0 )\n"
base.dists.normal.entropy,"var y = base.dists.normal.entropy( 0.0, 1.0 )\ny = base.dists.normal.entropy( 4.0, 3.0 )\ny = base.dists.normal.entropy( NaN, 1.0 )\ny = base.dists.normal.entropy( 0.0, NaN )\ny = base.dists.normal.entropy( 0.0, 0.0 )\n"
base.dists.normal.kurtosis,"var y = base.dists.normal.kurtosis( 0.0, 1.0 )\ny = base.dists.normal.kurtosis( 4.0, 3.0 )\ny = base.dists.normal.kurtosis( NaN, 1.0 )\ny = base.dists.normal.kurtosis( 0.0, NaN )\ny = base.dists.normal.kurtosis( 0.0, 0.0 )\n"
base.dists.normal.logpdf,"var y = base.dists.normal.logpdf( 2.0, 0.0, 1.0 )\ny = base.dists.normal.logpdf( -1.0, 4.0, 2.0 )\ny = base.dists.normal.logpdf( NaN, 0.0, 1.0 )\ny = base.dists.normal.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.normal.logpdf( 0.0, 0.0, NaN )\ny = base.dists.normal.logpdf( 2.0, 0.0, -1.0 )\ny = base.dists.normal.logpdf( 2.0, 8.0, 0.0 )\ny = base.dists.normal.logpdf( 8.0, 8.0, 0.0 )\n"
base.dists.normal.logpdf.factory,"var myLogPDF = base.dists.normal.logpdf.factory( 10.0, 2.0 );\nvar y = myLogPDF( 10.0 )\n"
base.dists.normal.mean,"var y = base.dists.normal.mean( 0.0, 1.0 )\ny = base.dists.normal.mean( 4.0, 2.0 )\ny = base.dists.normal.mean( NaN, 1.0 )\ny = base.dists.normal.mean( 0.0, NaN )\ny = base.dists.normal.mean( 0.0, 0.0 )\n"
base.dists.normal.median,"var y = base.dists.normal.median( 0.0, 1.0 )\ny = base.dists.normal.median( 4.0, 2.0 )\ny = base.dists.normal.median( NaN, 1.0 )\ny = base.dists.normal.median( 0.0, NaN )\ny = base.dists.normal.median( 0.0, 0.0 )\n"
base.dists.normal.mgf,"var y = base.dists.normal.mgf( 2.0, 0.0, 1.0 )\ny = base.dists.normal.mgf( 0.0, 0.0, 1.0 )\ny = base.dists.normal.mgf( -1.0, 4.0, 2.0 )\ny = base.dists.normal.mgf( NaN, 0.0, 1.0 )\ny = base.dists.normal.mgf( 0.0, NaN, 1.0 )\ny = base.dists.normal.mgf( 0.0, 0.0, NaN )\ny = base.dists.normal.mgf( 2.0, 0.0, 0.0 )\n"
base.dists.normal.mgf.factory,"var myMGF = base.dists.normal.mgf.factory( 4.0, 2.0 );\nvar y = myMGF( 1.0 )\ny = myMGF( 0.5 )\n"
base.dists.normal.mode,"var y = base.dists.normal.mode( 0.0, 1.0 )\ny = base.dists.normal.mode( 4.0, 2.0 )\ny = base.dists.normal.mode( NaN, 1.0 )\ny = base.dists.normal.mode( 0.0, NaN )\ny = base.dists.normal.mode( 0.0, 0.0 )\n"
base.dists.normal.Normal,"var normal = base.dists.normal.Normal( -2.0, 3.0 );\nnormal.mu\nnormal.sigma\nnormal.entropy\nnormal.kurtosis\nnormal.mean\nnormal.median\nnormal.mode\nnormal.skewness\nnormal.stdev\nnormal.variance\nnormal.cdf( 0.8 )\nnormal.logpdf( 2.0 )\nnormal.mgf( 0.2 )\nnormal.pdf( 2.0 )\nnormal.quantile( 0.9 )\n"
base.dists.normal.pdf,"var y = base.dists.normal.pdf( 2.0, 0.0, 1.0 )\ny = base.dists.normal.pdf( -1.0, 4.0, 2.0 )\ny = base.dists.normal.pdf( NaN, 0.0, 1.0 )\ny = base.dists.normal.pdf( 0.0, NaN, 1.0 )\ny = base.dists.normal.pdf( 0.0, 0.0, NaN )\ny = base.dists.normal.pdf( 2.0, 0.0, -1.0 )\ny = base.dists.normal.pdf( 2.0, 8.0, 0.0 )\ny = base.dists.normal.pdf( 8.0, 8.0, 0.0 )\n"
base.dists.normal.pdf.factory,"var myPDF = base.dists.normal.pdf.factory( 10.0, 2.0 );\nvar y = myPDF( 10.0 )\n"
base.dists.normal.quantile,"var y = base.dists.normal.quantile( 0.8, 0.0, 1.0 )\ny = base.dists.normal.quantile( 0.5, 4.0, 2.0 )\ny = base.dists.normal.quantile( 1.1, 0.0, 1.0 )\ny = base.dists.normal.quantile( -0.2, 0.0, 1.0 )\ny = base.dists.normal.quantile( NaN, 0.0, 1.0 )\ny = base.dists.normal.quantile( 0.0, NaN, 1.0 )\ny = base.dists.normal.quantile( 0.0, 0.0, NaN )\ny = base.dists.normal.quantile( 0.5, 0.0, -1.0 )\ny = base.dists.normal.quantile( 0.3, 8.0, 0.0 )\ny = base.dists.normal.quantile( 0.9, 8.0, 0.0 )\n"
base.dists.normal.quantile.factory,"var myQuantile = base.dists.normal.quantile.factory( 10.0, 2.0 );\nvar y = myQuantile( 0.5 )\n"
base.dists.normal.skewness,"var y = base.dists.normal.skewness( 0.0, 1.0 )\ny = base.dists.normal.skewness( 4.0, 3.0 )\ny = base.dists.normal.skewness( NaN, 1.0 )\ny = base.dists.normal.skewness( 0.0, NaN )\ny = base.dists.normal.skewness( 0.0, 0.0 )\n"
base.dists.normal.stdev,"var y = base.dists.normal.stdev( 0.0, 1.0 )\ny = base.dists.normal.stdev( 4.0, 3.0 )\ny = base.dists.normal.stdev( NaN, 1.0 )\ny = base.dists.normal.stdev( 0.0, NaN )\ny = base.dists.normal.stdev( 0.0, 0.0 )\n"
base.dists.normal.variance,"var y = base.dists.normal.variance( 0.0, 1.0 )\ny = base.dists.normal.variance( 4.0, 3.0 )\ny = base.dists.normal.variance( NaN, 1.0 )\ny = base.dists.normal.variance( 0.0, NaN )\ny = base.dists.normal.variance( 0.0, 0.0 )\n"
base.dists.pareto1.cdf,"var y = base.dists.pareto1.cdf( 2.0, 1.0, 1.0 )\ny = base.dists.pareto1.cdf( 5.0, 2.0, 4.0 )\ny = base.dists.pareto1.cdf( 4.0, 2.0, 2.0 )\ny = base.dists.pareto1.cdf( 1.9, 2.0, 2.0 )\ny = base.dists.pareto1.cdf( PINF, 4.0, 2.0 )\ny = base.dists.pareto1.cdf( 2.0, -1.0, 0.5 )\ny = base.dists.pareto1.cdf( 2.0, 0.5, -1.0 )\ny = base.dists.pareto1.cdf( NaN, 1.0, 1.0 )\ny = base.dists.pareto1.cdf( 0.0, NaN, 1.0 )\ny = base.dists.pareto1.cdf( 0.0, 1.0, NaN )\n"
base.dists.pareto1.cdf.factory,"var myCDF = base.dists.pareto1.cdf.factory( 10.0, 2.0 );\nvar y = myCDF( 3.0 )\ny = myCDF( 2.5 )\n"
base.dists.pareto1.entropy,"var v = base.dists.pareto1.entropy( 0.8, 1.0 )\nv = base.dists.pareto1.entropy( 4.0, 12.0 )\nv = base.dists.pareto1.entropy( 8.0, 2.0 )\n"
base.dists.pareto1.kurtosis,"var v = base.dists.pareto1.kurtosis( 5.0, 1.0 )\nv = base.dists.pareto1.kurtosis( 4.5, 12.0 )\nv = base.dists.pareto1.kurtosis( 8.0, 2.0 )\n"
base.dists.pareto1.logcdf,"var y = base.dists.pareto1.logcdf( 2.0, 1.0, 1.0 )\ny = base.dists.pareto1.logcdf( 5.0, 2.0, 4.0 )\ny = base.dists.pareto1.logcdf( 4.0, 2.0, 2.0 )\ny = base.dists.pareto1.logcdf( 1.9, 2.0, 2.0 )\ny = base.dists.pareto1.logcdf( PINF, 4.0, 2.0 )\ny = base.dists.pareto1.logcdf( 2.0, -1.0, 0.5 )\ny = base.dists.pareto1.logcdf( 2.0, 0.5, -1.0 )\ny = base.dists.pareto1.logcdf( NaN, 1.0, 1.0 )\ny = base.dists.pareto1.logcdf( 0.0, NaN, 1.0 )\ny = base.dists.pareto1.logcdf( 0.0, 1.0, NaN )\n"
base.dists.pareto1.logcdf.factory,"var mylogCDF = base.dists.pareto1.logcdf.factory( 10.0, 2.0 );\nvar y = mylogCDF( 3.0 )\ny = mylogCDF( 2.5 )\n"
base.dists.pareto1.logpdf,"var y = base.dists.pareto1.logpdf( 4.0, 1.0, 1.0 )\ny = base.dists.pareto1.logpdf( 20.0, 1.0, 10.0 )\ny = base.dists.pareto1.logpdf( 7.0, 2.0, 6.0 )\ny = base.dists.pareto1.logpdf( 7.0, 6.0, 3.0 )\ny = base.dists.pareto1.logpdf( 1.0, 4.0, 2.0 )\ny = base.dists.pareto1.logpdf( 1.5, 4.0, 2.0 )\ny = base.dists.pareto1.logpdf( 0.5, -1.0, 0.5 )\ny = base.dists.pareto1.logpdf( 0.5, 0.5, -1.0 )\ny = base.dists.pareto1.logpdf( NaN, 1.0, 1.0 )\ny = base.dists.pareto1.logpdf( 0.5, NaN, 1.0 )\ny = base.dists.pareto1.logpdf( 0.5, 1.0, NaN )\n"
base.dists.pareto1.logpdf.factory,"var mylogPDF = base.dists.pareto1.logpdf.factory( 0.5, 0.5 );\nvar y = mylogPDF( 0.8 )\ny = mylogPDF( 2.0 )\n"
base.dists.pareto1.mean,"var v = base.dists.pareto1.mean( 0.8, 1.0 )\nv = base.dists.pareto1.mean( 4.0, 12.0 )\nv = base.dists.pareto1.mean( 8.0, 2.0 )\n"
base.dists.pareto1.median,"var v = base.dists.pareto1.median( 0.8, 1.0 )\nv = base.dists.pareto1.median( 4.0, 12.0 )\nv = base.dists.pareto1.median( 8.0, 2.0 )\n"
base.dists.pareto1.mode,"var v = base.dists.pareto1.mode( 0.8, 1.0 )\nv = base.dists.pareto1.mode( 4.0, 12.0 )\nv = base.dists.pareto1.mode( 8.0, 2.0 )\n"
base.dists.pareto1.Pareto1,"var pareto1 = base.dists.pareto1.Pareto1( 6.0, 5.0 );\npareto1.alpha\npareto1.beta\npareto1.entropy\npareto1.kurtosis\npareto1.mean\npareto1.median\npareto1.mode\npareto1.skewness\npareto1.variance\npareto1.cdf( 7.0 )\npareto1.logcdf( 7.0 )\npareto1.logpdf( 5.0 )\npareto1.pdf( 5.0 )\npareto1.quantile( 0.8 )\n"
base.dists.pareto1.pdf,"var y = base.dists.pareto1.pdf( 4.0, 1.0, 1.0 )\ny = base.dists.pareto1.pdf( 20.0, 1.0, 10.0 )\ny = base.dists.pareto1.pdf( 7.0, 2.0, 6.0 )\ny = base.dists.pareto1.pdf( 7.0, 6.0, 3.0 )\ny = base.dists.pareto1.pdf( 1.0, 4.0, 2.0 )\ny = base.dists.pareto1.pdf( 1.5, 4.0, 2.0 )\ny = base.dists.pareto1.pdf( 0.5, -1.0, 0.5 )\ny = base.dists.pareto1.pdf( 0.5, 0.5, -1.0 )\ny = base.dists.pareto1.pdf( NaN, 1.0, 1.0 )\ny = base.dists.pareto1.pdf( 0.5, NaN, 1.0 )\ny = base.dists.pareto1.pdf( 0.5, 1.0, NaN )\n"
base.dists.pareto1.pdf.factory,"var myPDF = base.dists.pareto1.pdf.factory( 0.5, 0.5 );\nvar y = myPDF( 0.8 )\ny = myPDF( 2.0 )\n"
base.dists.pareto1.quantile,"var y = base.dists.pareto1.quantile( 0.8, 2.0, 1.0 )\ny = base.dists.pareto1.quantile( 0.8, 1.0, 10.0 )\ny = base.dists.pareto1.quantile( 0.1, 1.0, 10.0 )\ny = base.dists.pareto1.quantile( 1.1, 1.0, 1.0 )\ny = base.dists.pareto1.quantile( -0.2, 1.0, 1.0 )\ny = base.dists.pareto1.quantile( NaN, 1.0, 1.0 )\ny = base.dists.pareto1.quantile( 0.5, NaN, 1.0 )\ny = base.dists.pareto1.quantile( 0.5, 1.0, NaN )\ny = base.dists.pareto1.quantile( 0.5, -1.0, 1.0 )\ny = base.dists.pareto1.quantile( 0.5, 1.0, -1.0 )\n"
base.dists.pareto1.quantile.factory,"var myQuantile = base.dists.pareto1.quantile.factory( 2.5, 0.5 );\nvar y = myQuantile( 0.5 )\ny = myQuantile( 0.8 )\n"
base.dists.pareto1.skewness,"var v = base.dists.pareto1.skewness( 3.5, 1.0 )\nv = base.dists.pareto1.skewness( 4.0, 12.0 )\nv = base.dists.pareto1.skewness( 8.0, 2.0 )\n"
base.dists.pareto1.stdev,"var v = base.dists.pareto1.stdev( 0.8, 1.0 )\nv = base.dists.pareto1.stdev( 4.0, 12.0 )\nv = base.dists.pareto1.stdev( 8.0, 2.0 )\n"
base.dists.pareto1.variance,"var v = base.dists.pareto1.variance( 0.8, 1.0 )\nv = base.dists.pareto1.variance( 4.0, 12.0 )\nv = base.dists.pareto1.variance( 8.0, 2.0 )\n"
base.dists.poisson.cdf,"var y = base.dists.poisson.cdf( 2.0, 0.5 )\ny = base.dists.poisson.cdf( 2.0, 10.0 )\ny = base.dists.poisson.cdf( -1.0, 4.0 )\ny = base.dists.poisson.cdf( NaN, 1.0 )\ny = base.dists.poisson.cdf( 0.0, NaN )\ny = base.dists.poisson.cdf( 2.0, -1.0 )\ny = base.dists.poisson.cdf( -2.0, 0.0 )\ny = base.dists.poisson.cdf( 0.0, 0.0 )\ny = base.dists.poisson.cdf( 10.0, 0.0 )\n"
base.dists.poisson.cdf.factory,"var mycdf = base.dists.poisson.cdf.factory( 5.0 );\nvar y = mycdf( 3.0 )\ny = mycdf( 8.0 )\n"
base.dists.poisson.entropy,"var v = base.dists.poisson.entropy( 11.0 )\nv = base.dists.poisson.entropy( 4.5 )\n"
base.dists.poisson.kurtosis,"var v = base.dists.poisson.kurtosis( 11.0 )\nv = base.dists.poisson.kurtosis( 4.5 )\n"
base.dists.poisson.logpmf,"var y = base.dists.poisson.logpmf( 4.0, 3.0 )\ny = base.dists.poisson.logpmf( 1.0, 3.0 )\ny = base.dists.poisson.logpmf( -1.0, 2.0 )\ny = base.dists.poisson.logpmf( 0.0, NaN )\ny = base.dists.poisson.logpmf( NaN, 0.5 )\ny = base.dists.poisson.logpmf( 2.0, -0.5 )\ny = base.dists.poisson.logpmf( 2.0, 0.0 )\ny = base.dists.poisson.logpmf( 0.0, 0.0 )\n"
base.dists.poisson.logpmf.factory,"var mylogpmf = base.dists.poisson.logpmf.factory( 1.0 );\nvar y = mylogpmf( 3.0 )\ny = mylogpmf( 1.0 )\n"
base.dists.poisson.mean,"var v = base.dists.poisson.mean( 11.0 )\nv = base.dists.poisson.mean( 4.5 )\n"
base.dists.poisson.median,"var v = base.dists.poisson.median( 11.0 )\nv = base.dists.poisson.median( 4.5 )\n"
base.dists.poisson.mgf,"var y = base.dists.poisson.mgf( 1.0, 1.5 )\ny = base.dists.poisson.mgf( 0.5, 0.5 )\ny = base.dists.poisson.mgf( NaN, 0.5 )\ny = base.dists.poisson.mgf( 0.0, NaN )\ny = base.dists.poisson.mgf( -2.0, -1.0 )\n"
base.dists.poisson.mgf.factory,"var myMGF = base.dists.poisson.mgf.factory( 2.0 );\nvar y = myMGF( 0.1 )\n"
base.dists.poisson.mode,"var v = base.dists.poisson.mode( 11.0 )\nv = base.dists.poisson.mode( 4.5 )\n"
base.dists.poisson.pmf,"var y = base.dists.poisson.pmf( 4.0, 3.0 )\ny = base.dists.poisson.pmf( 1.0, 3.0 )\ny = base.dists.poisson.pmf( -1.0, 2.0 )\ny = base.dists.poisson.pmf( 0.0, NaN )\ny = base.dists.poisson.pmf( NaN, 0.5 )\ny = base.dists.poisson.pmf( 2.0, -0.5 )\ny = base.dists.poisson.pmf( 2.0, 0.0 )\ny = base.dists.poisson.pmf( 0.0, 0.0 )\n"
base.dists.poisson.pmf.factory,"var mypmf = base.dists.poisson.pmf.factory( 1.0 );\nvar y = mypmf( 3.0 )\ny = mypmf( 1.0 )\n"
base.dists.poisson.Poisson,"var poisson = base.dists.poisson.Poisson( 6.0 );\npoisson.lambda\npoisson.entropy\npoisson.kurtosis\npoisson.mean\npoisson.median\npoisson.mode\npoisson.skewness\npoisson.stdev\npoisson.variance\npoisson.cdf( 4.0 )\npoisson.logpmf( 2.0 )\npoisson.mgf( 0.5 )\npoisson.pmf( 2.0 )\npoisson.quantile( 0.5 )\n"
base.dists.poisson.quantile,"var y = base.dists.poisson.quantile( 0.5, 2.0 )\ny = base.dists.poisson.quantile( 0.9, 4.0 )\ny = base.dists.poisson.quantile( 0.1, 200.0 )\ny = base.dists.poisson.quantile( 1.1, 0.0 )\ny = base.dists.poisson.quantile( -0.2, 0.0 )\ny = base.dists.poisson.quantile( NaN, 0.5 )\ny = base.dists.poisson.quantile( 0.0, NaN )\ny = base.dists.poisson.quantile( 2.0, -1.0 )\ny = base.dists.poisson.quantile( 0.1, 0.0 )\ny = base.dists.poisson.quantile( 0.9, 0.0 )\n"
base.dists.poisson.quantile.factory,"var myQuantile = base.dists.poisson.quantile.factory( 0.4 );\nvar y = myQuantile( 0.4 )\ny = myQuantile( 1.0 )\n"
base.dists.poisson.skewness,"var v = base.dists.poisson.skewness( 11.0 )\nv = base.dists.poisson.skewness( 4.5 )\n"
base.dists.poisson.stdev,"var v = base.dists.poisson.stdev( 11.0 )\nv = base.dists.poisson.stdev( 4.5 )\n"
base.dists.poisson.variance,"var v = base.dists.poisson.variance( 11.0 )\nv = base.dists.poisson.variance( 4.5 )\n"
base.dists.rayleigh.cdf,"var y = base.dists.rayleigh.cdf( 2.0, 3.0 )\ny = base.dists.rayleigh.cdf( 1.0, 2.0 )\ny = base.dists.rayleigh.cdf( -1.0, 4.0 )\ny = base.dists.rayleigh.cdf( NaN, 1.0 )\ny = base.dists.rayleigh.cdf( 0.0, NaN )\ny = base.dists.rayleigh.cdf( 2.0, -1.0 )\ny = base.dists.rayleigh.cdf( -2.0, 0.0 )\ny = base.dists.rayleigh.cdf( 0.0, 0.0 )\ny = base.dists.rayleigh.cdf( 2.0, 0.0 )\n"
base.dists.rayleigh.cdf.factory,"var myCDF = base.dists.rayleigh.cdf.factory( 0.5 );\nvar y = myCDF( 1.0 )\ny = myCDF( 0.5 )\n"
base.dists.rayleigh.entropy,"var v = base.dists.rayleigh.entropy( 11.0 )\nv = base.dists.rayleigh.entropy( 4.5 )\n"
base.dists.rayleigh.kurtosis,"var v = base.dists.rayleigh.kurtosis( 11.0 )\nv = base.dists.rayleigh.kurtosis( 4.5 )\n"
base.dists.rayleigh.logcdf,"var y = base.dists.rayleigh.logcdf( 2.0, 3.0 )\ny = base.dists.rayleigh.logcdf( 1.0, 2.0 )\ny = base.dists.rayleigh.logcdf( -1.0, 4.0 )\ny = base.dists.rayleigh.logcdf( NaN, 1.0 )\ny = base.dists.rayleigh.logcdf( 0.0, NaN )\ny = base.dists.rayleigh.logcdf( 2.0, -1.0 )\n"
base.dists.rayleigh.logcdf.factory,"var mylogcdf = base.dists.rayleigh.logcdf.factory( 0.5 );\nvar y = mylogcdf( 1.0 )\ny = mylogcdf( 0.5 )\n"
base.dists.rayleigh.logpdf,"var y = base.dists.rayleigh.logpdf( 0.3, 1.0 )\ny = base.dists.rayleigh.logpdf( 2.0, 0.8 )\ny = base.dists.rayleigh.logpdf( -1.0, 0.5 )\ny = base.dists.rayleigh.logpdf( 0.0, NaN )\ny = base.dists.rayleigh.logpdf( NaN, 2.0 )\ny = base.dists.rayleigh.logpdf( 2.0, -1.0 )\n"
base.dists.rayleigh.logpdf.factory,"var mylogpdf = base.dists.rayleigh.logpdf.factory( 4.0 );\nvar y = mylogpdf( 6.0 )\ny = mylogpdf( 4.0 )\n"
base.dists.rayleigh.mean,"var v = base.dists.rayleigh.mean( 11.0 )\nv = base.dists.rayleigh.mean( 4.5 )\n"
base.dists.rayleigh.median,"var v = base.dists.rayleigh.median( 11.0 )\nv = base.dists.rayleigh.median( 4.5 )\n"
base.dists.rayleigh.mgf,"var y = base.dists.rayleigh.mgf( 1.0, 3.0 )\ny = base.dists.rayleigh.mgf( 1.0, 2.0 )\ny = base.dists.rayleigh.mgf( -1.0, 4.0 )\ny = base.dists.rayleigh.mgf( NaN, 1.0 )\ny = base.dists.rayleigh.mgf( 0.0, NaN )\ny = base.dists.rayleigh.mgf( 0.5, -1.0 )\n"
base.dists.rayleigh.mgf.factory,"var myMGF = base.dists.rayleigh.mgf.factory( 0.5 );\nvar y = myMGF( 1.0 )\ny = myMGF( 0.5 )\n"
base.dists.rayleigh.mode,"var v = base.dists.rayleigh.mode( 11.0 )\nv = base.dists.rayleigh.mode( 4.5 )\n"
base.dists.rayleigh.pdf,"var y = base.dists.rayleigh.pdf( 0.3, 1.0 )\ny = base.dists.rayleigh.pdf( 2.0, 0.8 )\ny = base.dists.rayleigh.pdf( -1.0, 0.5 )\ny = base.dists.rayleigh.pdf( 0.0, NaN )\ny = base.dists.rayleigh.pdf( NaN, 2.0 )\ny = base.dists.rayleigh.pdf( 2.0, -1.0 )\ny = base.dists.rayleigh.pdf( -2.0, 0.0 )\ny = base.dists.rayleigh.pdf( 0.0, 0.0 )\ny = base.dists.rayleigh.pdf( 2.0, 0.0 )\n"
base.dists.rayleigh.pdf.factory,"var myPDF = base.dists.rayleigh.pdf.factory( 4.0 );\nvar y = myPDF( 6.0 )\ny = myPDF( 4.0 )\n"
base.dists.rayleigh.quantile,"var y = base.dists.rayleigh.quantile( 0.8, 1.0 )\ny = base.dists.rayleigh.quantile( 0.5, 4.0 )\ny = base.dists.rayleigh.quantile( 1.1, 1.0 )\ny = base.dists.rayleigh.quantile( -0.2, 1.0 )\ny = base.dists.rayleigh.quantile( NaN, 1.0 )\ny = base.dists.rayleigh.quantile( 0.0, NaN )\ny = base.dists.rayleigh.quantile( 0.5, -1.0 )\n"
base.dists.rayleigh.quantile.factory,"var myQuantile = base.dists.rayleigh.quantile.factory( 0.4 );\nvar y = myQuantile( 0.4 )\ny = myQuantile( 1.0 )\n"
base.dists.rayleigh.Rayleigh,"var rayleigh = base.dists.rayleigh.Rayleigh( 6.0 );\nrayleigh.sigma\nrayleigh.entropy\nrayleigh.kurtosis\nrayleigh.mean\nrayleigh.median\nrayleigh.mode\nrayleigh.skewness\nrayleigh.stdev\nrayleigh.variance\nrayleigh.cdf( 1.0 )\nrayleigh.logcdf( 1.0 )\nrayleigh.logpdf( 1.5 )\nrayleigh.mgf( -0.5 )\nrayleigh.pdf( 1.5 )\nrayleigh.quantile( 0.5 )\n"
base.dists.rayleigh.skewness,"var v = base.dists.rayleigh.skewness( 11.0 )\nv = base.dists.rayleigh.skewness( 4.5 )\n"
base.dists.rayleigh.stdev,"var v = base.dists.rayleigh.stdev( 9.0 )\nv = base.dists.rayleigh.stdev( 4.5 )\n"
base.dists.rayleigh.variance,"var v = base.dists.rayleigh.variance( 9.0 )\nv = base.dists.rayleigh.variance( 4.5 )\n"
base.dists.t.cdf,"var y = base.dists.t.cdf( 2.0, 0.1 )\ny = base.dists.t.cdf( 1.0, 2.0 )\ny = base.dists.t.cdf( -1.0, 4.0 )\ny = base.dists.t.cdf( NaN, 1.0 )\ny = base.dists.t.cdf( 0.0, NaN )\ny = base.dists.t.cdf( 2.0, -1.0 )\n"
base.dists.t.cdf.factory,"var mycdf = base.dists.t.cdf.factory( 0.5 );\nvar y = mycdf( 3.0 )\ny = mycdf( 1.0 )\n"
base.dists.t.entropy,"var v = base.dists.t.entropy( 11.0 )\nv = base.dists.t.entropy( 4.5 )\n"
base.dists.t.kurtosis,"var v = base.dists.t.kurtosis( 11.0 )\nv = base.dists.t.kurtosis( 4.5 )\n"
base.dists.t.mean,"var v = base.dists.t.mean( 11.0 )\nv = base.dists.t.mean( 4.5 )\n"
base.dists.t.median,"var v = base.dists.t.median( 11.0 )\nv = base.dists.t.median( 4.5 )\n"
base.dists.t.mode,"var v = base.dists.t.mode( 11.0 )\nv = base.dists.t.mode( 4.5 )\n"
base.dists.t.pdf,"var y = base.dists.t.pdf( 0.3, 4.0 )\ny = base.dists.t.pdf( 2.0, 0.7 )\ny = base.dists.t.pdf( -1.0, 0.5 )\ny = base.dists.t.pdf( 0.0, NaN )\ny = base.dists.t.pdf( NaN, 2.0 )\ny = base.dists.t.pdf( 2.0, -1.0 )\n"
base.dists.t.pdf.factory,"var myPDF = base.dists.t.pdf.factory( 3.0 );\nvar y = myPDF( 1.0 )\n"
base.dists.t.quantile,"var y = base.dists.t.quantile( 0.8, 1.0 )\ny = base.dists.t.quantile( 0.1, 1.0 )\ny = base.dists.t.quantile( 0.5, 0.1 )\ny = base.dists.t.quantile( -0.2, 0.1 )\ny = base.dists.t.quantile( NaN, 1.0 )\ny = base.dists.t.quantile( 0.0, NaN )\ny = base.dists.t.quantile( 0.5, -1.0 )\n"
base.dists.t.quantile.factory,"var myQuantile = base.dists.t.quantile.factory( 4.0 );\nvar y = myQuantile( 0.2 )\ny = myQuantile( 0.9 )\n"
base.dists.t.skewness,"var v = base.dists.t.skewness( 11.0 )\nv = base.dists.t.skewness( 4.5 )\n"
base.dists.t.stdev,"var v = base.dists.t.stdev( 9.0 )\nv = base.dists.t.stdev( 4.5 )\n"
base.dists.t.T,"var t = base.dists.t.T( 6.0 );\nt.v\nt.entropy\nt.kurtosis\nt.mean\nt.median\nt.mode\nt.skewness\nt.stdev\nt.variance\nt.cdf( 1.0 )\nt.logcdf( 1.0 )\nt.logpdf( 1.5 )\nt.pdf( 1.5 )\nt.quantile( 0.8 )\n"
base.dists.t.variance,"var v = base.dists.t.variance( 9.0 )\nv = base.dists.t.variance( 4.5 )\n"
base.dists.triangular.cdf,"var y = base.dists.triangular.cdf( 0.5, -1.0, 1.0, 0.0 )\ny = base.dists.triangular.cdf( 0.5, -1.0, 1.0, 0.5 )\ny = base.dists.triangular.cdf( -10.0, -20.0, 0.0, -2.0 )\ny = base.dists.triangular.cdf( -2.0, -1.0, 1.0, 0.0 )\ny = base.dists.triangular.cdf( NaN, 0.0, 1.0, 0.5 )\ny = base.dists.triangular.cdf( 0.0, NaN, 1.0, 0.5 )\ny = base.dists.triangular.cdf( 0.0, 0.0, NaN, 0.5 )\ny = base.dists.triangular.cdf( 2.0, 1.0, 0.0, NaN )\ny = base.dists.triangular.cdf( 2.0, 1.0, 0.0, 1.5 )\n"
base.dists.triangular.cdf.factory,"var mycdf = base.dists.triangular.cdf.factory( 0.0, 10.0, 2.0 );\nvar y = mycdf( 0.5 )\ny = mycdf( 8.0 )\n"
base.dists.triangular.entropy,"var v = base.dists.triangular.entropy( 0.0, 1.0, 0.8 )\nv = base.dists.triangular.entropy( 4.0, 12.0, 5.0 )\nv = base.dists.triangular.entropy( 2.0, 8.0, 5.0 )\n"
base.dists.triangular.kurtosis,"var v = base.dists.triangular.kurtosis( 0.0, 1.0, 0.8 )\nv = base.dists.triangular.kurtosis( 4.0, 12.0, 5.0 )\nv = base.dists.triangular.kurtosis( 2.0, 8.0, 5.0 )\n"
base.dists.triangular.logcdf,"var y = base.dists.triangular.logcdf( 0.5, -1.0, 1.0, 0.0 )\ny = base.dists.triangular.logcdf( 0.5, -1.0, 1.0, 0.5 )\ny = base.dists.triangular.logcdf( -10.0, -20.0, 0.0, -2.0 )\ny = base.dists.triangular.logcdf( -2.0, -1.0, 1.0, 0.0 )\ny = base.dists.triangular.logcdf( NaN, 0.0, 1.0, 0.5 )\ny = base.dists.triangular.logcdf( 0.0, NaN, 1.0, 0.5 )\ny = base.dists.triangular.logcdf( 0.0, 0.0, NaN, 0.5 )\ny = base.dists.triangular.logcdf( 2.0, 1.0, 0.0, NaN )\ny = base.dists.triangular.logcdf( 2.0, 1.0, 0.0, 1.5 )\n"
base.dists.triangular.logcdf.factory,"var mylogcdf = base.dists.triangular.logcdf.factory( 0.0, 10.0, 2.0 );\nvar y = mylogcdf( 0.5 )\ny = mylogcdf( 8.0 )\n"
base.dists.triangular.logpdf,"var y = base.dists.triangular.logpdf( 0.5, -1.0, 1.0, 0.0 )\ny = base.dists.triangular.logpdf( 0.5, -1.0, 1.0, 0.5 )\ny = base.dists.triangular.logpdf( -10.0, -20.0, 0.0, -2.0 )\ny = base.dists.triangular.logpdf( -2.0, -1.0, 1.0, 0.0 )\ny = base.dists.triangular.logpdf( NaN, 0.0, 1.0, 0.5 )\ny = base.dists.triangular.logpdf( 0.0, NaN, 1.0, 0.5 )\ny = base.dists.triangular.logpdf( 0.0, 0.0, NaN, 0.5 )\ny = base.dists.triangular.logpdf( 2.0, 1.0, 0.0, NaN )\ny = base.dists.triangular.logpdf( 2.0, 1.0, 0.0, 1.5 )\n"
base.dists.triangular.logpdf.factory,"var mylogpdf = base.dists.triangular.logpdf.factory( 0.0, 10.0, 5.0 );\nvar y = mylogpdf( 2.0 )\ny = mylogpdf( 12.0 )\n"
base.dists.triangular.mean,"var v = base.dists.triangular.mean( 0.0, 1.0, 0.8 )\nv = base.dists.triangular.mean( 4.0, 12.0, 5.0 )\nv = base.dists.triangular.mean( 2.0, 8.0, 5.0 )\n"
base.dists.triangular.median,"var v = base.dists.triangular.median( 0.0, 1.0, 0.8 )\nv = base.dists.triangular.median( 4.0, 12.0, 5.0 )\nv = base.dists.triangular.median( 2.0, 8.0, 5.0 )\n"
base.dists.triangular.mgf,"var y = base.dists.triangular.mgf( 0.5, -1.0, 1.0, 0.0 )\ny = base.dists.triangular.mgf( 0.5, -1.0, 1.0, 0.5 )\ny = base.dists.triangular.mgf( -0.3, -20.0, 0.0, -2.0 )\ny = base.dists.triangular.mgf( -2.0, -1.0, 1.0, 0.0 )\ny = base.dists.triangular.mgf( NaN, 0.0, 1.0, 0.5 )\ny = base.dists.triangular.mgf( 0.0, NaN, 1.0, 0.5 )\ny = base.dists.triangular.mgf( 0.0, 0.0, NaN, 0.5 )\ny = base.dists.triangular.mgf( 0.5, 1.0, 0.0, NaN )\ny = base.dists.triangular.mgf( 0.5, 1.0, 0.0, 1.5 )\n"
base.dists.triangular.mgf.factory,"var mymgf = base.dists.triangular.mgf.factory( 0.0, 2.0, 1.0 );\nvar y = mymgf( -1.0 )\ny = mymgf( 2.0 )\n"
base.dists.triangular.mode,"var v = base.dists.triangular.mode( 0.0, 1.0, 0.8 )\nv = base.dists.triangular.mode( 4.0, 12.0, 5.0 )\nv = base.dists.triangular.mode( 2.0, 8.0, 5.0 )\n"
base.dists.triangular.pdf,"var y = base.dists.triangular.pdf( 0.5, -1.0, 1.0, 0.0 )\ny = base.dists.triangular.pdf( 0.5, -1.0, 1.0, 0.5 )\ny = base.dists.triangular.pdf( -10.0, -20.0, 0.0, -2.0 )\ny = base.dists.triangular.pdf( -2.0, -1.0, 1.0, 0.0 )\ny = base.dists.triangular.pdf( NaN, 0.0, 1.0, 0.5 )\ny = base.dists.triangular.pdf( 0.0, NaN, 1.0, 0.5 )\ny = base.dists.triangular.pdf( 0.0, 0.0, NaN, 0.5 )\ny = base.dists.triangular.pdf( 2.0, 1.0, 0.0, NaN )\ny = base.dists.triangular.pdf( 2.0, 1.0, 0.0, 1.5 )\n"
base.dists.triangular.pdf.factory,"var mypdf = base.dists.triangular.pdf.factory( 0.0, 10.0, 5.0 );\nvar y = mypdf( 2.0 )\ny = mypdf( 12.0 )\n"
base.dists.triangular.quantile,"var y = base.dists.triangular.quantile( 0.9, -1.0, 1.0, 0.0 )\ny = base.dists.triangular.quantile( 0.1, -1.0, 1.0, 0.5 )\ny = base.dists.triangular.quantile( 0.1, -20.0, 0.0, -2.0 )\ny = base.dists.triangular.quantile( 0.8, 0.0, 20.0, 0.0 )\ny = base.dists.triangular.quantile( 1.1, -1.0, 1.0, 0.0 )\ny = base.dists.triangular.quantile( -0.1, -1.0, 1.0, 0.0 )\ny = base.dists.triangular.quantile( NaN, 0.0, 1.0, 0.5 )\ny = base.dists.triangular.quantile( 0.3, NaN, 1.0, 0.5 )\ny = base.dists.triangular.quantile( 0.3, 0.0, NaN, 0.5 )\ny = base.dists.triangular.quantile( 0.3, 1.0, 0.0, NaN )\ny = base.dists.triangular.quantile( 0.3, 1.0, 0.0, 1.5 )\n"
base.dists.triangular.quantile.factory,"var myquantile = base.dists.triangular.quantile.factory( 2.0, 4.0, 2.5 );\nvar y = myquantile( 0.4 )\ny = myquantile( 0.8 )\n"
base.dists.triangular.skewness,"var v = base.dists.triangular.skewness( 0.0, 1.0, 0.8 )\nv = base.dists.triangular.skewness( 4.0, 12.0, 5.0 )\nv = base.dists.triangular.skewness( 2.0, 8.0, 5.0 )\n"
base.dists.triangular.stdev,"var v = base.dists.triangular.stdev( 0.0, 1.0, 0.8 )\nv = base.dists.triangular.stdev( 4.0, 12.0, 5.0 )\nv = base.dists.triangular.stdev( 2.0, 8.0, 5.0 )\n"
base.dists.triangular.Triangular,"var triangular = base.dists.triangular.Triangular( 0.0, 1.0, 0.5 );\ntriangular.a\ntriangular.b\ntriangular.c\ntriangular.entropy\ntriangular.kurtosis\ntriangular.mean\ntriangular.median\ntriangular.mode\ntriangular.skewness\ntriangular.stdev\ntriangular.variance\ntriangular.cdf( 0.8 )\ntriangular.logcdf( 0.8 )\ntriangular.logpdf( 0.8 )\ntriangular.mgf( 0.8 )\ntriangular.pdf( 0.8 )\ntriangular.quantile( 0.8 )\n"
base.dists.triangular.variance,"var v = base.dists.triangular.variance( 0.0, 1.0, 0.8 )\nv = base.dists.triangular.variance( 4.0, 12.0, 5.0 )\nv = base.dists.triangular.variance( 2.0, 8.0, 5.0 )\n"
base.dists.uniform.cdf,"var y = base.dists.uniform.cdf( 9.0, 0.0, 10.0 )\ny = base.dists.uniform.cdf( 0.5, 0.0, 2.0 )\ny = base.dists.uniform.cdf( PINF, 2.0, 4.0 )\ny = base.dists.uniform.cdf( NINF, 2.0, 4.0 )\ny = base.dists.uniform.cdf( NaN, 0.0, 1.0 )\ny = base.dists.uniform.cdf( 0.0, NaN, 1.0 )\ny = base.dists.uniform.cdf( 0.0, 0.0, NaN )\ny = base.dists.uniform.cdf( 2.0, 1.0, 0.0 )\n"
base.dists.uniform.cdf.factory,"var mycdf = base.dists.uniform.cdf.factory( 0.0, 10.0 );\nvar y = mycdf( 0.5 )\ny = mycdf( 8.0 )\n"
base.dists.uniform.entropy,"var v = base.dists.uniform.entropy( 0.0, 1.0 )\nv = base.dists.uniform.entropy( 4.0, 12.0 )\nv = base.dists.uniform.entropy( 2.0, 8.0 )\n"
base.dists.uniform.kurtosis,"var v = base.dists.uniform.kurtosis( 0.0, 1.0 )\nv = base.dists.uniform.kurtosis( 4.0, 12.0 )\nv = base.dists.uniform.kurtosis( 2.0, 8.0 )\n"
base.dists.uniform.logcdf,"var y = base.dists.uniform.logcdf( 9.0, 0.0, 10.0 )\ny = base.dists.uniform.logcdf( 0.5, 0.0, 2.0 )\ny = base.dists.uniform.logcdf( PINF, 2.0, 4.0 )\ny = base.dists.uniform.logcdf( NINF, 2.0, 4.0 )\ny = base.dists.uniform.logcdf( NaN, 0.0, 1.0 )\ny = base.dists.uniform.logcdf( 0.0, NaN, 1.0 )\ny = base.dists.uniform.logcdf( 0.0, 0.0, NaN )\ny = base.dists.uniform.logcdf( 2.0, 1.0, 0.0 )\n"
base.dists.uniform.logcdf.factory,"var mylogcdf = base.dists.uniform.logcdf.factory( 0.0, 10.0 );\nvar y = mylogcdf( 0.5 )\ny = mylogcdf( 8.0 )\n"
base.dists.uniform.logpdf,"var y = base.dists.uniform.logpdf( 2.0, 0.0, 4.0 )\ny = base.dists.uniform.logpdf( 5.0, 0.0, 4.0 )\ny = base.dists.uniform.logpdf( 0.25, 0.0, 1.0 )\ny = base.dists.uniform.logpdf( NaN, 0.0, 1.0 )\ny = base.dists.uniform.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.uniform.logpdf( 0.0, 0.0, NaN )\ny = base.dists.uniform.logpdf( 2.0, 3.0, 1.0 )\n"
base.dists.uniform.logpdf.factory,"var mylogPDF = base.dists.uniform.logpdf.factory( 6.0, 7.0 );\nvar y = mylogPDF( 7.0 )\ny = mylogPDF( 5.0 )\n"
base.dists.uniform.mean,"var v = base.dists.uniform.mean( 0.0, 1.0 )\nv = base.dists.uniform.mean( 4.0, 12.0 )\nv = base.dists.uniform.mean( 2.0, 8.0 )\n"
base.dists.uniform.median,"var v = base.dists.uniform.median( 0.0, 1.0 )\nv = base.dists.uniform.median( 4.0, 12.0 )\nv = base.dists.uniform.median( 2.0, 8.0 )\n"
base.dists.uniform.mgf,"var y = base.dists.uniform.mgf( 2.0, 0.0, 4.0 )\ny = base.dists.uniform.mgf( -0.2, 0.0, 4.0 )\ny = base.dists.uniform.mgf( 2.0, 0.0, 1.0 )\ny = base.dists.uniform.mgf( 0.5, 3.0, 2.0 )\ny = base.dists.uniform.mgf( 0.5, 3.0, 3.0 )\ny = base.dists.uniform.mgf( NaN, 0.0, 1.0 )\ny = base.dists.uniform.mgf( 0.0, NaN, 1.0 )\ny = base.dists.uniform.mgf( 0.0, 0.0, NaN )\n"
base.dists.uniform.mgf.factory,"var mymgf = base.dists.uniform.mgf.factory( 6.0, 7.0 );\nvar y = mymgf( 0.1 )\ny = mymgf( 1.1 )\n"
base.dists.uniform.pdf,"var y = base.dists.uniform.pdf( 2.0, 0.0, 4.0 )\ny = base.dists.uniform.pdf( 5.0, 0.0, 4.0 )\ny = base.dists.uniform.pdf( 0.25, 0.0, 1.0 )\ny = base.dists.uniform.pdf( NaN, 0.0, 1.0 )\ny = base.dists.uniform.pdf( 0.0, NaN, 1.0 )\ny = base.dists.uniform.pdf( 0.0, 0.0, NaN )\ny = base.dists.uniform.pdf( 2.0, 3.0, 1.0 )\n"
base.dists.uniform.pdf.factory,"var myPDF = base.dists.uniform.pdf.factory( 6.0, 7.0 );\nvar y = myPDF( 7.0 )\ny = myPDF( 5.0 )\n"
base.dists.uniform.quantile,"var y = base.dists.uniform.quantile( 0.8, 0.0, 1.0 )\ny = base.dists.uniform.quantile( 0.5, 0.0, 10.0 )\ny = base.dists.uniform.quantile( 1.1, 0.0, 1.0 )\ny = base.dists.uniform.quantile( -0.2, 0.0, 1.0 )\ny = base.dists.uniform.quantile( NaN, 0.0, 1.0 )\ny = base.dists.uniform.quantile( 0.0, NaN, 1.0 )\ny = base.dists.uniform.quantile( 0.0, 0.0, NaN )\ny = base.dists.uniform.quantile( 0.5, 2.0, 1.0 )\n"
base.dists.uniform.quantile.factory,"var myQuantile = base.dists.uniform.quantile.factory( 0.0, 4.0 );\nvar y = myQuantile( 0.8 )\n"
base.dists.uniform.skewness,"var v = base.dists.uniform.skewness( 0.0, 1.0 )\nv = base.dists.uniform.skewness( 4.0, 12.0 )\nv = base.dists.uniform.skewness( 2.0, 8.0 )\n"
base.dists.uniform.stdev,"var v = base.dists.uniform.stdev( 0.0, 1.0 )\nv = base.dists.uniform.stdev( 4.0, 12.0 )\nv = base.dists.uniform.stdev( 2.0, 8.0 )\n"
base.dists.uniform.Uniform,"var uniform = base.dists.uniform.Uniform( 0.0, 1.0 );\nuniform.a\nuniform.b\nuniform.entropy\nuniform.kurtosis\nuniform.mean\nuniform.median\nuniform.skewness\nuniform.stdev\nuniform.variance\nuniform.cdf( 0.8 )\nuniform.logcdf( 0.5 )\nuniform.logpdf( 1.0 )\nuniform.mgf( 0.8 )\nuniform.pdf( 0.8 )\nuniform.quantile( 0.8 )\n"
base.dists.uniform.variance,"var v = base.dists.uniform.variance( 0.0, 1.0 )\nv = base.dists.uniform.variance( 4.0, 12.0 )\nv = base.dists.uniform.variance( 2.0, 8.0 )\n"
base.dists.weibull.cdf,"var y = base.dists.weibull.cdf( 2.0, 1.0, 1.0 )\ny = base.dists.weibull.cdf( -1.0, 2.0, 2.0 )\ny = base.dists.weibull.cdf( PINF, 4.0, 2.0 )\ny = base.dists.weibull.cdf( NINF, 4.0, 2.0 )\ny = base.dists.weibull.cdf( NaN, 0.0, 1.0 )\ny = base.dists.weibull.cdf( 0.0, NaN, 1.0 )\ny = base.dists.weibull.cdf( 0.0, 0.0, NaN )\ny = base.dists.weibull.cdf( 2.0, 0.0, -1.0 )\n"
base.dists.weibull.cdf.factory,"var myCDF = base.dists.weibull.cdf.factory( 2.0, 10.0 );\nvar y = myCDF( 12.0 )\n"
base.dists.weibull.entropy,"var v = base.dists.weibull.entropy( 1.0, 1.0 )\nv = base.dists.weibull.entropy( 4.0, 12.0 )\nv = base.dists.weibull.entropy( 8.0, 2.0 )\n"
base.dists.weibull.kurtosis,"var v = base.dists.weibull.kurtosis( 1.0, 1.0 )\nv = base.dists.weibull.kurtosis( 4.0, 12.0 )\nv = base.dists.weibull.kurtosis( 8.0, 2.0 )\n"
base.dists.weibull.logcdf,"var y = base.dists.weibull.logcdf( 2.0, 1.0, 1.0 )\ny = base.dists.weibull.logcdf( -1.0, 2.0, 2.0 )\ny = base.dists.weibull.logcdf( PINF, 4.0, 2.0 )\ny = base.dists.weibull.logcdf( NINF, 4.0, 2.0 )\ny = base.dists.weibull.logcdf( NaN, 0.0, 1.0 )\ny = base.dists.weibull.logcdf( 0.0, NaN, 1.0 )\ny = base.dists.weibull.logcdf( 0.0, 0.0, NaN )\ny = base.dists.weibull.logcdf( 2.0, 0.0, -1.0 )\n"
base.dists.weibull.logcdf.factory,"var mylogcdf = base.dists.weibull.logcdf.factory( 2.0, 10.0 );\nvar y = mylogcdf( 12.0 )\n"
base.dists.weibull.logpdf,"var y = base.dists.weibull.logpdf( 2.0, 1.0, 0.5 )\ny = base.dists.weibull.logpdf( 0.1, 1.0, 1.0 )\ny = base.dists.weibull.logpdf( -1.0, 4.0, 2.0 )\ny = base.dists.weibull.logpdf( NaN, 0.6, 1.0 )\ny = base.dists.weibull.logpdf( 0.0, NaN, 1.0 )\ny = base.dists.weibull.logpdf( 0.0, 0.0, NaN )\ny = base.dists.weibull.logpdf( 2.0, 0.0, -1.0 )\n"
base.dists.weibull.logpdf.factory,"var mylofpdf = base.dists.weibull.logpdf.factory( 7.0, 6.0 );\ny = mylofpdf( 7.0 )\n"
base.dists.weibull.mean,"var v = base.dists.weibull.mean( 1.0, 1.0 )\nv = base.dists.weibull.mean( 4.0, 12.0 )\nv = base.dists.weibull.mean( 8.0, 2.0 )\n"
base.dists.weibull.median,"var v = base.dists.weibull.median( 1.0, 1.0 )\nv = base.dists.weibull.median( 4.0, 12.0 )\nv = base.dists.weibull.median( 8.0, 2.0 )\n"
base.dists.weibull.mgf,"var y = base.dists.weibull.mgf( 1.0, 1.0, 0.5 )\ny = base.dists.weibull.mgf( -1.0, 4.0, 4.0 )\ny = base.dists.weibull.mgf( NaN, 1.0, 1.0 )\ny = base.dists.weibull.mgf( 0.0, NaN, 1.0 )\ny = base.dists.weibull.mgf( 0.0, 1.0, NaN )\ny = base.dists.weibull.mgf( 0.2, -1.0, 0.5 )\ny = base.dists.weibull.mgf( 0.2, 0.0, 0.5 )\ny = base.dists.weibull.mgf( 0.2, 0.5, -1.0 )\ny = base.dists.weibull.mgf( 0.2, 0.5, 0.0 )\n"
base.dists.weibull.mgf.factory,"var myMGF = base.dists.weibull.mgf.factory( 8.0, 10.0 );\nvar y = myMGF( 0.8 )\ny = myMGF( 0.08 )\n"
base.dists.weibull.mode,"var v = base.dists.weibull.mode( 1.0, 1.0 )\nv = base.dists.weibull.mode( 4.0, 12.0 )\nv = base.dists.weibull.mode( 8.0, 2.0 )\n"
base.dists.weibull.pdf,"var y = base.dists.weibull.pdf( 2.0, 1.0, 0.5 )\ny = base.dists.weibull.pdf( 0.1, 1.0, 1.0 )\ny = base.dists.weibull.pdf( -1.0, 4.0, 2.0 )\ny = base.dists.weibull.pdf( NaN, 0.6, 1.0 )\ny = base.dists.weibull.pdf( 0.0, NaN, 1.0 )\ny = base.dists.weibull.pdf( 0.0, 0.0, NaN )\ny = base.dists.weibull.pdf( 2.0, 0.0, -1.0 )\n"
base.dists.weibull.pdf.factory,"var myPDF = base.dists.weibull.pdf.factory( 7.0, 6.0 );\nvar y = myPDF( 7.0 )\n"
base.dists.weibull.quantile,"var y = base.dists.weibull.quantile( 0.8, 1.0, 1.0 )\ny = base.dists.weibull.quantile( 0.5, 2.0, 4.0 )\ny = base.dists.weibull.quantile( 1.1, 1.0, 1.0 )\ny = base.dists.weibull.quantile( -0.2, 1.0, 1.0 )\ny = base.dists.weibull.quantile( NaN, 0.0, 1.0 )\ny = base.dists.weibull.quantile( 0.0, NaN, 1.0 )\ny = base.dists.weibull.quantile( 0.0, 0.0, NaN )\ny = base.dists.weibull.quantile( 0.5, 1.0, -1.0 )\n"
base.dists.weibull.quantile.factory,"var myQuantile = base.dists.weibull.quantile.factory( 2.0, 10.0 );\nvar y = myQuantile( 0.4 )\n"
base.dists.weibull.skewness,"var v = base.dists.weibull.skewness( 1.0, 1.0 )\nv = base.dists.weibull.skewness( 4.0, 12.0 )\nv = base.dists.weibull.skewness( 8.0, 2.0 )\n"
base.dists.weibull.stdev,"var v = base.dists.weibull.stdev( 1.0, 1.0 )\nv = base.dists.weibull.stdev( 4.0, 12.0 )\nv = base.dists.weibull.stdev( 8.0, 2.0 )\n"
base.dists.weibull.variance,"var v = base.dists.weibull.variance( 1.0, 1.0 )\nv = base.dists.weibull.variance( 4.0, 12.0 )\nv = base.dists.weibull.variance( 8.0, 2.0 )\n"
base.dists.weibull.Weibull,"var weibull = base.dists.weibull.Weibull( 6.0, 5.0 );\nweibull.k\nweibull.lambda\nweibull.entropy\nweibull.kurtosis\nweibull.mean\nweibull.median\nweibull.mode\nweibull.skewness\nweibull.stdev\nweibull.variance\nweibull.cdf( 3.0 )\nweibull.logcdf( 3.0 )\nweibull.logpdf( 1.0 )\nweibull.mgf( -0.5 )\nweibull.pdf( 3.0 )\nweibull.quantile( 0.8 )\n"
base.ellipe,"var y = base.ellipe( 0.5 )\ny = base.ellipe( -1.0 )\ny = base.ellipe( 2.0 )\ny = base.ellipe( PINF )\ny = base.ellipe( NINF )\ny = base.ellipe( NaN )\n"
base.ellipk,"var y = base.ellipk( 0.5 )\ny = base.ellipk( -1.0 )\ny = base.ellipk( 2.0 )\ny = base.ellipk( PINF )\ny = base.ellipk( NINF )\ny = base.ellipk( NaN )\n"
base.epsdiff,"var d = base.epsdiff( 12.15, 12.149999999999999 )\nd = base.epsdiff( 2.4341309458983933, 2.4341309458633909, 'mean-abs' )\nfunction scale( x, y ) { return ( x > y ) ? y : x; };\nd = base.epsdiff( 1.0000000000000002, 1.0000000000000100, scale )\n"
base.erf,"var y = base.erf( 2.0 )\ny = base.erf( -1.0 )\ny = base.erf( -0.0 )\ny = base.erf( NaN )\n"
base.erfc,"var y = base.erfc( 2.0 )\ny = base.erfc( -1.0 )\ny = base.erfc( 0.0 )\ny = base.erfc( PINF )\ny = base.erfc( NINF )\ny = base.erfc( NaN )\n"
base.erfcinv,"var y = base.erfcinv( 0.5 )\ny = base.erfcinv( 0.8 )\ny = base.erfcinv( 0.0 )\ny = base.erfcinv( 2.0 )\ny = base.erfcinv( NaN )\n"
base.erfinv,"var y = base.erfinv( 0.5 )\ny = base.erfinv( 0.8 )\ny = base.erfinv( 0.0 )\ny = base.erfinv( -0.0 )\ny = base.erfinv( -1.0 )\ny = base.erfinv( 1.0 )\ny = base.erfinv( NaN )\n"
base.eta,"var y = base.eta( 0.0 )\ny = base.eta( -1.0 )\ny = base.eta( 1.0 )\ny = base.eta( 3.14 )\ny = base.eta( NaN )\n"
base.evalpoly,"var arr = [ 3.0, 2.0, 1.0 ];\nvar v = base.evalpoly( arr, 10.0 )\n"
base.evalpoly.factory,"var polyval = base.evalpoly.factory( [ 3.0, 2.0, 1.0 ] );\nvar v = polyval( 10.0 )\nv = polyval( 5.0 )\n"
base.evalrational,"var P = [ -6.0, -5.0, 4.0, 2.0 ];\nvar Q = [ 3.0, 0.5, 0.0, 0.0 ]; // zero-padded\nvar v = base.evalrational( P, Q, 6.0 )\n"
base.evalrational.factory,"var P = [ 20.0, 8.0, 3.0 ];\nvar Q = [ 10.0, 9.0, 1.0 ];\nvar rational = base.evalrational.factory( P, Q );\nvar v = rational( 10.0 )\nv = rational( 2.0 )\n"
base.exp,"var y = base.exp( 4.0 )\ny = base.exp( -9.0 )\ny = base.exp( 0.0 )\ny = base.exp( NaN )\n"
base.exp2,"var y = base.exp2( 3.0 )\ny = base.exp2( -9.0 )\ny = base.exp2( 0.0 )\ny = base.exp2( NaN )\n"
base.exp10,"var y = base.exp10( 3.0 )\ny = base.exp10( -9.0 )\ny = base.exp10( 0.0 )\ny = base.exp10( NaN )\n"
base.expit,"var y = base.expit( 0.0 )\ny = base.expit( 1.0 )\ny = base.expit( -1.0 )\ny = base.expit( Infinity )\ny = base.expit( NaN )\n"
base.expm1,"var y = base.expm1( 0.2 )\ny = base.expm1( -9.0 )\ny = base.expm1( 0.0 )\ny = base.expm1( NaN )\n"
base.expm1rel,"var y = base.expm1rel( 0.0 )\ny = base.expm1rel( 1.0 )\ny = base.expm1rel( -1.0 )\ny = base.expm1rel( NaN )\n"
base.exponent,"var exponent = base.exponent( 3.14e-307 )\nexponent = base.exponent( -3.14 )\nexponent = base.exponent( 0.0 )\nexponent = base.exponent( NaN )\n"
base.exponentf,"var exponent = base.exponentf( base.float64ToFloat32( 3.14e34 ) )\nexponent = base.exponentf( base.float64ToFloat32( 3.14e-34 ) )\nexponent = base.exponentf( base.float64ToFloat32( -3.14 ) )\nexponent = base.exponentf( 0.0 )\nexponent = base.exponentf( NaN )\n"
base.factorial,"var y = base.factorial( 3.0 )\ny = base.factorial( -1.5 )\ny = base.factorial( -0.5 )\ny = base.factorial( 0.5 )\ny = base.factorial( -10.0 )\ny = base.factorial( 171.0 )\ny = base.factorial( NaN )\n"
base.factorialln,"var y = base.factorialln( 3.0 )\ny = base.factorialln( 2.4 )\ny = base.factorialln( -1.0 )\ny = base.factorialln( -1.5 )\ny = base.factorialln( NaN )\n"
base.fallingFactorial,"var v = base.fallingFactorial( 0.9, 5 )\nv = base.fallingFactorial( -9.0, 3 )\nv = base.fallingFactorial( 0.0, 2 )\nv = base.fallingFactorial( 3.0, -2 )\n"
base.fibonacci,"var y = base.fibonacci( 0 )\ny = base.fibonacci( 1 )\ny = base.fibonacci( 2 )\ny = base.fibonacci( 3 )\ny = base.fibonacci( 4 )\ny = base.fibonacci( 79 )\ny = base.fibonacci( NaN )\n"
base.fibonacciIndex,"var n = base.fibonacciIndex( 2 )\nn = base.fibonacciIndex( 3 )\nn = base.fibonacciIndex( 5 )\nn = base.fibonacciIndex( NaN )\nn = base.fibonacciIndex( 1 )\n"
base.fibpoly,"var v = base.fibpoly( 5, 2.0 )\n"
base.fibpoly.factory,"var polyval = base.fibpoly.factory( 5 );\nvar v = polyval( 1.0 )\nv = polyval( 2.0 )\n"
base.flipsign,"var z = base.flipsign( -3.14, 10.0 )\nz = base.flipsign( -3.14, -1.0 )\nz = base.flipsign( 1.0, -0.0 )\nz = base.flipsign( -3.14, -0.0 )\nz = base.flipsign( -0.0, 1.0 )\nz = base.flipsign( 0.0, -1.0 )\n"
base.float32ToInt32,"var y = base.float32ToInt32( base.float64ToFloat32( 4294967295.0 ) )\ny = base.float32ToInt32( base.float64ToFloat32( 3.14 ) )\ny = base.float32ToInt32( base.float64ToFloat32( -3.14 ) )\ny = base.float32ToInt32( base.float64ToFloat32( NaN ) )\ny = base.float32ToInt32( FLOAT32_PINF )\ny = base.float32ToInt32( FLOAT32_NINF )\n"
base.float32ToUint32,"var y = base.float32ToUint32( base.float64ToFloat32( 4294967297.0 ) )\ny = base.float32ToUint32( base.float64ToFloat32( 3.14 ) )\ny = base.float32ToUint32( base.float64ToFloat32( -3.14 ) )\ny = base.float32ToUint32( base.float64ToFloat32( NaN ) )\ny = base.float32ToUint32( FLOAT32_PINF )\ny = base.float32ToUint32( FLOAT32_NINF )\n"
base.float64ToFloat32,"var y = base.float64ToFloat32( 1.337 )\n"
base.float64ToInt32,"var y = base.float64ToInt32( 4294967295.0 )\ny = base.float64ToInt32( 3.14 )\ny = base.float64ToInt32( -3.14 )\ny = base.float64ToInt32( NaN )\ny = base.float64ToInt32( PINF )\ny = base.float64ToInt32( NINF )\n"
base.float64ToUint32,"var y = base.float64ToUint32( 4294967297.0 )\ny = base.float64ToUint32( 3.14 )\ny = base.float64ToUint32( -3.14 )\ny = base.float64ToUint32( NaN )\ny = base.float64ToUint32( PINF )\ny = base.float64ToUint32( NINF )\n"
base.floor,"var y = base.floor( 3.14 )\ny = base.floor( -4.2 )\ny = base.floor( -4.6 )\ny = base.floor( 9.5 )\ny = base.floor( -0.0 )\n"
base.floor2,"var y = base.floor2( 3.14 )\ny = base.floor2( -4.2 )\ny = base.floor2( -4.6 )\ny = base.floor2( 9.5 )\ny = base.floor2( 13.0 )\ny = base.floor2( -13.0 )\ny = base.floor2( -0.0 )\n"
base.floor10,"var y = base.floor10( 3.14 )\ny = base.floor10( -4.2 )\ny = base.floor10( -4.6 )\ny = base.floor10( 9.5 )\ny = base.floor10( 13.0 )\ny = base.floor10( -13.0 )\ny = base.floor10( -0.0 )\n"
base.floorb,"var y = base.floorb( 3.14159, -4, 10 )\ny = base.floorb( 3.14159, 0, 2 )\ny = base.floorb( 5.0, 1, 2 )\n"
base.floorn,"var y = base.floorn( 3.14159, -4 )\ny = base.floorn( 3.14159, 0 )\ny = base.floorn( 12368.0, 3 )\n"
base.floorsd,"var y = base.floorsd( 3.14159, 5 )\ny = base.floorsd( 3.14159, 1 )\ny = base.floorsd( 12368.0, 2 )\ny = base.floorsd( 0.0313, 2, 2 )\n"
base.fresnel,"var y = base.fresnel( 0.0 )\ny = base.fresnel( 1.0 )\ny = base.fresnel( PINF )\ny = base.fresnel( NINF )\ny = base.fresnel( NaN )\nvar out = new Float64Array( 2 );\nvar v = base.fresnel( out, 0.0 )\nvar bool = ( v === out )\n"
base.fresnelc,"var y = base.fresnelc( 0.0 )\ny = base.fresnelc( 1.0 )\ny = base.fresnelc( PINF )\ny = base.fresnelc( NINF )\ny = base.fresnelc( NaN )\n"
base.fresnels,"var y = base.fresnels( 0.0 )\ny = base.fresnels( 1.0 )\ny = base.fresnels( PINF )\ny = base.fresnels( NINF )\ny = base.fresnels( NaN )\n"
base.frexp,"var out = base.frexp( 4.0 )\nout = base.frexp( 0.0 )\nout = base.frexp( -0.0 )\nout = base.frexp( NaN )\nout = base.frexp( PINF )\nout = base.frexp( NINF )\nout = new Float64Array( 2 );\nvar y = base.frexp( out, 4.0 )\nvar bool = ( y === out )\n"
base.fromBinaryString,"var bstr;\nbstr = '0100000000010000000000000000000000000000000000000000000000000000';\nvar val = base.fromBinaryString( bstr )\nbstr = '0100000000001001001000011111101101010100010001000010110100011000';\nval = base.fromBinaryString( bstr )\nbstr = '1111111111100001110011001111001110000101111010111100100010100000';\nval = base.fromBinaryString( bstr )\nbstr = '1000000000000000000000000000000000000000000000000001100011010011';\nval = base.fromBinaryString( bstr )\nbstr = '0000000000000000000000000000000000000000000000000000000000000001';\nval = base.fromBinaryString( bstr )\nbstr = '0000000000000000000000000000000000000000000000000000000000000000';\nval = base.fromBinaryString( bstr )\nbstr = '1000000000000000000000000000000000000000000000000000000000000000';\nval = base.fromBinaryString( bstr )\nbstr = '0111111111111000000000000000000000000000000000000000000000000000';\nval = base.fromBinaryString( bstr )\nbstr = '0111111111110000000000000000000000000000000000000000000000000000';\nval = base.fromBinaryString( bstr )\nbstr = '1111111111110000000000000000000000000000000000000000000000000000';\nval = base.fromBinaryString( bstr )\n"
base.fromBinaryStringf,"var bstr = '01000000100000000000000000000000';\nvar val = base.fromBinaryStringf( bstr )\nbstr = '01000000010010010000111111011011';\nval = base.fromBinaryStringf( bstr )\nbstr = '11111111011011000011101000110011';\nval = base.fromBinaryStringf( bstr )\nbstr = '10000000000000000000000000010110';\nval = base.fromBinaryStringf( bstr )\nbstr = '00000000000000000000000000000001';\nval = base.fromBinaryStringf( bstr )\nbstr = '00000000000000000000000000000000';\nval = base.fromBinaryStringf( bstr )\nbstr = '10000000000000000000000000000000';\nval = base.fromBinaryStringf( bstr )\nbstr = '01111111110000000000000000000000';\nval = base.fromBinaryStringf( bstr )\nbstr = '01111111100000000000000000000000';\nval = base.fromBinaryStringf( bstr )\nbstr = '11111111100000000000000000000000';\nval = base.fromBinaryStringf( bstr )\n"
base.fromBinaryStringUint8,"var bstr = '01010101';\nvar val = base.fromBinaryStringUint8( bstr )\nbstr = '00000000';\nval = base.fromBinaryStringUint8( bstr )\nbstr = '00000010';\nval = base.fromBinaryStringUint8( bstr )\nbstr = '11111111';\nval = base.fromBinaryStringUint8( bstr )\n"
base.fromBinaryStringUint16,"var bstr = '0101010101010101';\nvar val = base.fromBinaryStringUint16( bstr )\nbstr = '0000000000000000';\nval = base.fromBinaryStringUint16( bstr )\nbstr = '0000000000000010';\nval = base.fromBinaryStringUint16( bstr )\nbstr = '1111111111111111';\nval = base.fromBinaryStringUint16( bstr )\n"
base.fromBinaryStringUint32,"var bstr = '01010101010101010101010101010101';\nvar val = base.fromBinaryStringUint32( bstr )\nbstr = '00000000000000000000000000000000';\nval = base.fromBinaryStringUint32( bstr )\nbstr = '00000000000000000000000000000010';\nval = base.fromBinaryStringUint32( bstr )\nbstr = '11111111111111111111111111111111';\nval = base.fromBinaryStringUint32( bstr )\n"
base.fromWordf,"var word = 1068180177; // => 0 01111111 01010110010001011010001\nvar f32 = base.fromWordf( word ) // when printed, promoted to float64\n"
base.fromWords,"var v = base.fromWords( 1774486211, 2479577218 )\nv = base.fromWords( 3221823995, 1413754136 )\nv = base.fromWords( 0, 0 )\nv = base.fromWords( 2147483648, 0 )\nv = base.fromWords( 2146959360, 0 )\nv = base.fromWords( 2146435072, 0 )\nv = base.fromWords( 4293918720, 0 )\n"
base.gamma,"var y = base.gamma( 4.0 )\ny = base.gamma( -1.5 )\ny = base.gamma( -0.5 )\ny = base.gamma( 0.5 )\ny = base.gamma( 0.0 )\ny = base.gamma( -0.0 )\ny = base.gamma( NaN )\n"
base.gamma1pm1,"var y = base.gamma1pm1( 0.2 )\ny = base.gamma1pm1( -6.7 )\ny = base.gamma1pm1( 0.0 )\ny = base.gamma1pm1( NaN )\n"
base.gammaDeltaRatio,"var y = base.gammaDeltaRatio( 2.0, 3.0 )\ny = base.gammaDeltaRatio( 4.0, 0.5 )\ny = base.gammaDeltaRatio( 100.0, 0.0 )\ny = base.gammaDeltaRatio( NaN, 3.0 )\ny = base.gammaDeltaRatio( 5.0, NaN )\ny = base.gammaDeltaRatio( NaN, NaN )\n"
base.gammainc,"var y = base.gammainc( 6.0, 2.0 )\ny = base.gammainc( 1.0, 2.0, true, true )\ny = base.gammainc( 7.0, 5.0 )\ny = base.gammainc( 7.0, 5.0, false )\ny = base.gammainc( NaN, 2.0 )\ny = base.gammainc( 6.0, NaN )\n"
base.gammaincinv,"var y = base.gammaincinv( 0.5, 2.0 )\ny = base.gammaincinv( 0.1, 10.0 )\ny = base.gammaincinv( 0.75, 3.0 )\ny = base.gammaincinv( 0.75, 3.0, true )\ny = base.gammaincinv( 0.75, NaN )\ny = base.gammaincinv( NaN, 3.0 )\n"
base.gammaLanczosSum,"var y = base.gammaLanczosSum( 4.0 )\ny = base.gammaLanczosSum( -1.5 )\ny = base.gammaLanczosSum( -0.5 )\ny = base.gammaLanczosSum( 0.5 )\ny = base.gammaLanczosSum( 0.0 )\ny = base.gammaLanczosSum( NaN )\n"
base.gammaLanczosSumExpGScaled,"var y = base.gammaLanczosSumExpGScaled( 4.0 )\ny = base.gammaLanczosSumExpGScaled( -1.5 )\ny = base.gammaLanczosSumExpGScaled( -0.5 )\ny = base.gammaLanczosSumExpGScaled( 0.5 )\ny = base.gammaLanczosSumExpGScaled( 0.0 )\ny = base.gammaLanczosSumExpGScaled( NaN )\n"
base.gammaln,"var y = base.gammaln( 1.0 )\ny = base.gammaln( 2.0 )\ny = base.gammaln( 4.0 )\ny = base.gammaln( -0.5 )\ny = base.gammaln( 0.5 )\ny = base.gammaln( 0.0 )\ny = base.gammaln( NaN )\n"
base.gasum,"var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\nvar sum = base.gasum( x.length, x, 1 )\nvar N = base.floor( x.length / 2 );\nvar stride = 2;\nsum = base.gasum( N, x, stride )\nvar x0 = new Float64Array( [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ] );\nvar x1 = new Float64Array( x0.buffer, x0.BYTES_PER_ELEMENT*1 );\nN = base.floor( x0.length / 2 );\nsum = base.gasum( N, x1, stride )\n"
base.gasum.ndarray,"var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\nvar sum = base.gasum.ndarray( x.length, x, 1, 0 )\nx = [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ];\nsum = base.gasum.ndarray( 3, x, -1, x.length-1 )\n"
base.gaxpy,"var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\nvar y = [ 1.0, 1.0, 1.0, 1.0, 1.0 ];\nvar alpha = 5.0;\nbase.gaxpy( x.length, alpha, x, 1, y, 1 )\nx = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];\ny = [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ];\nvar N = base.floor( x.length / 2 );\nbase.gaxpy( N, alpha, x, 2, y, -1 )\nvar x0 = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\nvar y0 = new Float64Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar x1 = new Float64Array( x0.buffer, x0.BYTES_PER_ELEMENT*1 );\nvar y1 = new Float64Array( y0.buffer, y0.BYTES_PER_ELEMENT*3 );\nN = base.floor( x0.length / 2 );\nbase.gaxpy( N, 5.0, x1, -2, y1, 1 )\ny0\n"
base.gaxpy.ndarray,"var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\nvar y = [ 1.0, 1.0, 1.0, 1.0, 1.0 ];\nvar alpha = 5.0;\nbase.gaxpy.ndarray( x.length, alpha, x, 1, 0, y, 1, 0 )\nx = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];\ny = [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ];\nvar N = base.floor( x.length / 2 );\nbase.gaxpy.ndarray( N, alpha, x, 2, 1, y, -1, y.length-1 )\n"
base.gcd,"var v = base.gcd( 48, 18 )\n"
base.gcopy,"var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\nvar y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\nbase.gcopy( x.length, x, 1, y, 1 )\nx = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];\ny = [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ];\nvar N = base.floor( x.length / 2 );\nbase.gcopy( N, x, -2, y, 1 )\nvar x0 = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\nvar y0 = new Float64Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar x1 = new Float64Array( x0.buffer, x0.BYTES_PER_ELEMENT*1 );\nvar y1 = new Float64Array( y0.buffer, y0.BYTES_PER_ELEMENT*3 );\nN = base.floor( x0.length / 2 );\nbase.gcopy( N, x1, -2, y1, 1 )\ny0\n"
base.gcopy.ndarray,"var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\nvar y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\nbase.gcopy.ndarray( x.length, x, 1, 0, y, 1, 0 )\nx = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];\ny = [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ];\nvar N = base.floor( x.length / 2 );\nbase.gcopy.ndarray( N, x, 2, 1, y, -1, y.length-1 )\n"
base.getHighWord,"var w = base.getHighWord( 3.14e201 )\n"
base.getLowWord,"var w = base.getLowWord( 3.14e201 )\n"
base.hacovercos,"var y = base.hacovercos( 3.14 )\ny = base.hacovercos( -4.2 )\ny = base.hacovercos( -4.6 )\ny = base.hacovercos( 9.5 )\ny = base.hacovercos( -0.0 )\n"
base.hacoversin,"var y = base.hacoversin( 3.14 )\ny = base.hacoversin( -4.2 )\ny = base.hacoversin( -4.6 )\ny = base.hacoversin( 9.5 )\ny = base.hacoversin( -0.0 )\n"
base.havercos,"var y = base.havercos( 3.14 )\ny = base.havercos( -4.2 )\ny = base.havercos( -4.6 )\ny = base.havercos( 9.5 )\ny = base.havercos( -0.0 )\n"
base.haversin,"var y = base.haversin( 3.14 )\ny = base.haversin( -4.2 )\ny = base.haversin( -4.6 )\ny = base.haversin( 9.5 )\ny = base.haversin( -0.0 )\n"
base.heaviside,"var y = base.heaviside( 3.14 )\ny = base.heaviside( -3.14 )\ny = base.heaviside( 0.0 )\ny = base.heaviside( 0.0, 'half-maximum' )\ny = base.heaviside( 0.0, 'left-continuous' )\ny = base.heaviside( 0.0, 'right-continuous' )\n"
base.hermitepoly,"var y = base.hermitepoly( 1, 0.5 )\ny = base.hermitepoly( -1, 0.5 )\ny = base.hermitepoly( 0, 0.5 )\ny = base.hermitepoly( 2, 0.5 )\n"
base.hermitepoly.factory,"var polyval = base.hermitepoly.factory( 2 );\nvar v = polyval( 0.5 )\n"
base.hypot,"var h = base.hypot( -5.0, 12.0 )\nh = base.hypot( NaN, 12.0 )\nh = base.hypot( -0.0, -0.0 )\n"
base.imul,"var v = base.imul( -10|0, 4|0 )\n"
base.imuldw,"var v = base.imuldw( 1, 10 )\n"
base.int32ToUint32,"var y = base.int32ToUint32( base.float64ToInt32( -32 ) )\ny = base.int32ToUint32( base.float64ToInt32( 3 ) )\n"
base.inv,"var y = base.inv( -1.0 )\ny = base.inv( 2.0 )\ny = base.inv( 0.0 )\ny = base.inv( -0.0 )\ny = base.inv( NaN )\n"
base.isEven,"var bool = base.isEven( 5.0 )\nbool = base.isEven( -2.0 )\nbool = base.isEven( 0.0 )\nbool = base.isEven( NaN )\n"
base.isEvenInt32,"var bool = base.isEvenInt32( 5 )\nbool = base.isEvenInt32( -2 )\nbool = base.isEvenInt32( 0 )\n"
base.isFinite,"var bool = base.isFinite( 5.0 )\nbool = base.isFinite( -2.0e64 )\nbool = base.isFinite( PINF )\nbool = base.isFinite( NINF )\n"
base.isInfinite,"var bool = base.isInfinite( PINF )\nbool = base.isInfinite( NINF )\nbool = base.isInfinite( 5.0 )\nbool = base.isInfinite( NaN )\n"
base.isInteger,"var bool = base.isInteger( 1.0 )\nbool = base.isInteger( 3.14 )\n"
base.isnan,"var bool = base.isnan( NaN )\nbool = base.isnan( 7.0 )\n"
base.isNegativeInteger,"var bool = base.isNegativeInteger( -1.0 )\nbool = base.isNegativeInteger( 0.0 )\nbool = base.isNegativeInteger( 10.0 )\n"
base.isNegativeZero,"var bool = base.isNegativeZero( -0.0 )\nbool = base.isNegativeZero( 0.0 )\n"
base.isNonNegativeInteger,"var bool = base.isNonNegativeInteger( 1.0 )\nbool = base.isNonNegativeInteger( 0.0 )\nbool = base.isNonNegativeInteger( -10.0 )\n"
base.isNonPositiveInteger,"var bool = base.isNonPositiveInteger( -1.0 )\nbool = base.isNonPositiveInteger( 0.0 )\nbool = base.isNonPositiveInteger( 10.0 )\n"
base.isOdd,"var bool = base.isOdd( 5.0 )\nbool = base.isOdd( -2.0 )\nbool = base.isOdd( 0.0 )\nbool = base.isOdd( NaN )\n"
base.isOddInt32,"var bool = base.isOddInt32( 5 )\nbool = base.isOddInt32( -2 )\nbool = base.isOddInt32( 0 )\n"
base.isPositiveInteger,"var bool = base.isPositiveInteger( 1.0 )\nbool = base.isPositiveInteger( 0.0 )\nbool = base.isPositiveInteger( -10.0 )\n"
base.isPositiveZero,"var bool = base.isPositiveZero( 0.0 )\nbool = base.isPositiveZero( -0.0 )\n"
base.isPow2Uint32,"var bool = base.isPow2Uint32( 2 )\nbool = base.isPow2Uint32( 5 )\n"
base.isProbability,"var bool = base.isProbability( 0.5 )\nbool = base.isProbability( 3.14 )\nbool = base.isProbability( NaN )\n"
base.isSafeInteger,"var bool = base.isSafeInteger( 1.0 )\nbool = base.isSafeInteger( 2.0e200 )\nbool = base.isSafeInteger( 3.14 )\n"
base.kernelBetainc,"var out = base.kernelBetainc( 0.8, 1.0, 0.3, false, false )\nout = base.kernelBetainc( 0.2, 1.0, 2.0, true, false )\nout = new Array( 2 );\nvar v = base.kernelBetainc( out, 0.2, 1.0, 2.0, true, true )\nvar bool = ( v === out )\n"
base.kernelBetaincinv,"var y = base.kernelBetaincinv( 3.0, 3.0, 0.2, 0.8 )\ny = base.kernelBetaincinv( 3.0, 3.0, 0.4, 0.6 )\ny = base.kernelBetaincinv( 1.0, 6.0, 0.4, 0.6 )\ny = base.kernelBetaincinv( 1.0, 6.0, 0.8, 0.2 )\n"
base.kernelCos,"var out = base.kernelCos( 0.0, 0.0 )\nout = base.kernelCos( PI/6.0, 0.0 )\nout = base.kernelCos( 0.785, -1.144e-17 )\nout = base.kernelCos( NaN )\n"
base.kernelSin,"var y = base.kernelSin( 0.0, 0.0 )\ny = base.kernelSin( PI/6.0, 0.0 )\ny = base.kernelSin( 0.619, 9.279e-18 )\ny = base.kernelSin( NaN, 0.0 )\ny = base.kernelSin( 2.0, NaN )\ny = base.kernelSin( NaN, NaN )\n"
base.kernelTan,"var out = base.kernelTan( PI/4.0, 0.0, 1 )\nout = base.kernelTan( PI/4.0, 0.0, -1 )\nout = base.kernelTan( PI/6.0, 0.0, 1 )\nout = base.kernelTan( 0.664, 5.288e-17, 1 )\nout = base.kernelTan( NaN, 0.0, 1 )\nout = base.kernelTan( 3.0, NaN, 1 )\nout = base.kernelTan( 3.0, 0.0, NaN )\n"
base.kroneckerDelta,"var y = base.kroneckerDelta( 3.14, 0.0 )\ny = base.kroneckerDelta( 3.14, 3.14 )\n"
base.lcm,"var v = base.lcm( 21, 6 )\n"
base.ldexp,"var x = base.ldexp( 0.5, 3 )\nx = base.ldexp( 4.0, -2 )\nx = base.ldexp( 0.0, 20 )\nx = base.ldexp( -0.0, 39 )\nx = base.ldexp( NaN, -101 )\nx = base.ldexp( PINF, 11 )\nx = base.ldexp( NINF, -118 )\n"
base.ln,"var y = base.ln( 4.0 )\ny = base.ln( 0.0 )\ny = base.ln( PINF )\ny = base.ln( NaN )\ny = base.ln( -4.0 )\n"
base.log,"var y = base.log( 100.0, 10.0 )\ny = base.log( 16.0, 2.0 )\ny = base.log( 5.0, 1.0 )\ny = base.log( NaN, 2.0 )\ny = base.log( 1.0, NaN )\ny = base.log( -4.0, 2.0 )\ny = base.log( 4.0, -2.0 )\n"
base.log1mexp,"var y = base.log1mexp( -10.0 )\ny = base.log1mexp( 0.0 )\ny = base.log1mexp( 5.0 )\ny = base.log1mexp( 10.0 )\ny = base.log1mexp( NaN )\n"
base.log1p,"var y = base.log1p( 4.0 )\ny = base.log1p( -1.0 )\ny = base.log1p( 0.0 )\ny = base.log1p( -0.0 )\ny = base.log1p( -2.0 )\ny = base.log1p( NaN )\n"
base.log1pexp,"var y = base.log1pexp( -10.0 )\ny = base.log1pexp( 0.0 )\ny = base.log1pexp( 5.0 )\ny = base.log1pexp( 34.0 )\ny = base.log1pexp( NaN )\n"
base.log2,"var y = base.log2( 4.0 )\ny = base.log2( 8.0 )\ny = base.log2( 0.0 )\ny = base.log2( PINF )\ny = base.log2( NaN )\ny = base.log2( -4.0 )\n"
base.log10,"var y = base.log10( 100.0 )\ny = base.log10( 8.0 )\ny = base.log10( 0.0 )\ny = base.log10( PINF )\ny = base.log10( NaN )\ny = base.log10( -4.0 )\n"
base.logaddexp,"var v = base.logaddexp( 90.0, 90.0 )\nv = base.logaddexp( -20.0, 90.0 )\nv = base.logaddexp( 0.0, -100.0 )\nv = base.logaddexp( NaN, NaN )\n"
base.logit,"var y = base.logit( 0.2 )\ny = base.logit( 0.9 )\ny = base.logit( -4.0 )\ny = base.logit( 1.5 )\ny = base.logit( NaN )\n"
base.lucas,"var y = base.lucas( 0 )\ny = base.lucas( 1 )\ny = base.lucas( 2 )\ny = base.lucas( 3 )\ny = base.lucas( 4 )\ny = base.lucas( 77 )\ny = base.lucas( NaN )\n"
base.lucaspoly,"var v = base.lucaspoly( 5, 2.0 )\n"
base.lucaspoly.factory,"var polyval = base.lucaspoly.factory( 5 );\nvar v = polyval( 1.0 )\nv = polyval( 2.0 )\n"
base.max,"var v = base.max( 3.14, 4.2 )\nv = base.max( 5.9, 3.14, 4.2 )\nv = base.max( 3.14, NaN )\nv = base.max( +0.0, -0.0 )\n"
base.maxabs,"var v = base.maxabs( 3.14, -4.2 )\nv = base.maxabs( 5.9, 3.14, 4.2 )\nv = base.maxabs( 3.14, NaN )\nv = base.maxabs( +0.0, -0.0 )\n"
base.min,"var v = base.min( 3.14, 4.2 )\nv = base.min( 5.9, 3.14, 4.2 )\nv = base.min( 3.14, NaN )\nv = base.min( +0.0, -0.0 )\n"
base.minabs,"var v = base.minabs( 3.14, -4.2 )\nv = base.minabs( 5.9, 3.14, 4.2 )\nv = base.minabs( 3.14, NaN )\nv = base.minabs( +0.0, -0.0 )\n"
base.minmax,"var v = base.minmax( 3.14, 4.2 )\nv = base.minmax( 5.9, 3.14, 4.2 )\nv = base.minmax( 3.14, NaN )\nv = base.minmax( +0.0, -0.0 )\nv = base.minmax( 3.14 )\nvar out = new Array( 2 );\nv = base.minmax( out, 3.14 )\nvar bool = ( v === out )\n"
base.minmaxabs,"var v = base.minmaxabs( 3.14, 4.2 )\nv = base.minmaxabs( -5.9, 3.14, 4.2 )\nv = base.minmaxabs( 3.14, NaN )\nv = base.minmaxabs( +0.0, -0.0 )\nv = base.minmaxabs( 3.14 )\nvar out = new Array( 2 );\nv = base.minmaxabs( out, 3.14 )\nvar bool = ( v === out )\n"
base.modf,"var parts = base.modf( 3.14 )\nparts = base.modf( 3.14 )\nparts = base.modf( +0.0 )\nparts = base.modf( -0.0 )\nparts = base.modf( PINF )\nparts = base.modf( NINF )\nparts = base.modf( NaN )\nvar out = new Float64Array( 2 );\nparts = base.modf( out, 3.14 )\nvar bool = ( parts === out )\n"
base.ndarray,"var ctor = base.ndarray( 'float64', 3 )\nvar b = [ 1, 2, 3, 4 ]; // underlying data buffer\nvar d = [ 2, 2 ]; // shape\nvar s = [ 2, 1 ]; // strides\nvar o = 0; // index offset\nvar arr = ctor( b, d, s, o, 'row-major' )\nvar v = arr.get( 1, 1 )\nv = arr.iget( 3 )\narr.set( 1, 1, 40 );\narr.get( 1, 1 )\narr.iset( 3, 99 );\narr.get( 1, 1 )\n"
base.ndarrayMemoized,"var ctor = base.ndarrayMemoized( 'float64', 3 )\nvar f = base.ndarrayMemoized( 'float64', 3 )\nvar bool = ( f === ctor )\nvar b = [ 1, 2, 3, 4 ]; // underlying data buffer\nvar d = [ 2, 2 ]; // shape\nvar s = [ 2, 1 ]; // strides\nvar o = 0; // index offset\nvar arr = ctor( b, d, s, o, 'row-major' )\nvar v = arr.get( 1, 1 )\nv = arr.iget( 3 )\narr.set( 1, 1, 40 );\narr.get( 1, 1 )\narr.iset( 3, 99 );\narr.get( 1, 1 )\n"
base.negafibonacci,"var y = base.negafibonacci( 0 )\ny = base.negafibonacci( -1 )\ny = base.negafibonacci( -2 )\ny = base.negafibonacci( -3 )\ny = base.negafibonacci( -4 )\ny = base.negafibonacci( -79 )\ny = base.negafibonacci( -80 )\ny = base.negafibonacci( NaN )\n"
base.negalucas,"var y = base.negalucas( 0 )\ny = base.negalucas( -1 )\ny = base.negalucas( -2 )\ny = base.negalucas( -3 )\ny = base.negalucas( -4 )\ny = base.negalucas( -77 )\ny = base.negalucas( -78 )\ny = base.negalucas( NaN )\n"
base.nonfibonacci,"var v = base.nonfibonacci( 1 )\nv = base.nonfibonacci( 2 )\nv = base.nonfibonacci( 3 )\nv = base.nonfibonacci( NaN )\n"
base.normalize,"var out = base.normalize( 3.14e-319 )\nvar y = out[ 0 ];\nvar exponent = out[ 1 ];\nvar bool = ( y*base.pow(2.0, exponent) === 3.14e-319 )\nout = base.normalize( 0.0 )\nout = base.normalize( PINF )\nout = base.normalize( NINF )\nout = base.normalize( NaN )\nout = new Float64Array( 2 );\nvar v = base.normalize( out, 3.14e-319 )\nbool = ( v === out )\n"
base.normalizef,"var out = base.normalizef( base.float64ToFloat32( 1.401e-45 ) )\nvar y = out[ 0 ];\nvar exp = out[ 1 ];\nvar bool = ( y*base.pow(2,exp) === base.float64ToFloat32(1.401e-45) )\nout = base.normalizef( FLOAT32_PINF )\nout = base.normalizef( FLOAT32_NINF )\nout = base.normalizef( NaN )\nout = new Float32Array( 2 );\nvar v = base.normalizef( out, base.float64ToFloat32( 1.401e-45 ) )\nbool = ( v === out )\n"
base.normhermitepoly,"var y = base.normhermitepoly( 1, 0.5 )\ny = base.normhermitepoly( -1, 0.5 )\ny = base.normhermitepoly( 0, 0.5 )\ny = base.normhermitepoly( 2, 0.5 )\n"
base.normhermitepoly.factory,"var polyval = base.normhermitepoly.factory( 2 );\nvar v = polyval( 0.5 )\n"
base.pdiff,"var v = base.pdiff( 5.9, 3.14 )\nv = base.pdiff( 3.14, 4.2 )\nv = base.pdiff( 3.14, NaN )\nv = base.pdiff( -0.0, +0.0 )\n"
base.polygamma,"var v = base.polygamma( 3, 1.2 )\nv = base.polygamma( 5, 1.2 )\nv = base.polygamma( 3, -4.9 )\nv = base.polygamma( -1, 5.3 )\nv = base.polygamma( 2, -1.0 )\n"
base.pow,"var y = base.pow( 2.0, 3.0 )\ny = base.pow( 4.0, 0.5 )\ny = base.pow( 100.0, 0.0 )\ny = base.pow( PI, 5.0 )\ny = base.pow( PI, -0.2 )\ny = base.pow( NaN, 3.0 )\ny = base.pow( 5.0, NaN )\ny = base.pow( NaN, NaN )\n"
base.powm1,"var y = base.powm1( 2.0, 3.0 )\ny = base.powm1( 4.0, 0.5 )\ny = base.powm1( 0.0, 100.0 )\ny = base.powm1( 100.0, 0.0 )\ny = base.powm1( 0.0, 0.0 )\ny = base.powm1( PI, 5.0 )\ny = base.powm1( NaN, 3.0 )\ny = base.powm1( 5.0, NaN )\n"
base.rad2deg,"var d = base.rad2deg( PI/2.0 )\nd = base.rad2deg( -PI/4.0 )\nd = base.rad2deg( NaN )\nd = base.rad2deg( PI/6.0 )\n"
base.ramp,"var y = base.ramp( 3.14 )\ny = base.ramp( -3.14 )\n"
base.random.arcsine,"var r = base.random.arcsine( 2.0, 5.0 )\n"
base.random.arcsine.factory,"var rand = base.random.arcsine.factory();\nvar r = rand( 0.0, 1.0 )\nr = rand( -2.0, 2.0 )\nrand = base.random.arcsine.factory( 0.0, 1.0 );\nr = rand()\nr = rand()\n"
base.random.arcsine.NAME,"var str = base.random.arcsine.NAME\n"
base.random.arcsine.PRNG,"var prng = base.random.arcsine.PRNG;\n"
base.random.arcsine.seed,"var seed = base.random.arcsine.seed;\n"
base.random.arcsine.seedLength,"var len = base.random.arcsine.seedLength;\n"
base.random.arcsine.state,"var r = base.random.arcsine( 2.0, 4.0 )\nr = base.random.arcsine( 2.0, 4.0 )\nr = base.random.arcsine( 2.0, 4.0 )\nvar state = base.random.arcsine.state\nr = base.random.arcsine( 2.0, 4.0 )\nr = base.random.arcsine( 2.0, 4.0 )\nbase.random.arcsine.state = state;\nr = base.random.arcsine( 2.0, 4.0 )\nr = base.random.arcsine( 2.0, 4.0 )\n"
base.random.arcsine.stateLength,"var len = base.random.arcsine.stateLength;\n"
base.random.arcsine.byteLength,"var sz = base.random.arcsine.byteLength;\n"
base.random.arcsine.toJSON,"var o = base.random.arcsine.toJSON()\n"
base.random.bernoulli,"var r = base.random.bernoulli( 0.8 );\n"
base.random.bernoulli.factory,"var rand = base.random.bernoulli.factory();\nvar r = rand( 0.3 );\nr = rand( 0.59 );\nrand = base.random.bernoulli.factory( 0.3 );\nr = rand();\nr = rand();\n"
base.random.bernoulli.NAME,"var str = base.random.bernoulli.NAME\n"
base.random.bernoulli.PRNG,"var prng = base.random.bernoulli.PRNG;\n"
base.random.bernoulli.seed,"var seed = base.random.bernoulli.seed;\n"
base.random.bernoulli.seedLength,"var len = base.random.bernoulli.seedLength;\n"
base.random.bernoulli.state,"var r = base.random.bernoulli( 0.3 )\nr = base.random.bernoulli( 0.3 )\nr = base.random.bernoulli( 0.3 )\nvar state = base.random.bernoulli.state\nr = base.random.bernoulli( 0.3 )\nr = base.random.bernoulli( 0.3 )\nbase.random.bernoulli.state = state;\nr = base.random.bernoulli( 0.3 )\nr = base.random.bernoulli( 0.3 )\n"
base.random.bernoulli.stateLength,"var len = base.random.bernoulli.stateLength;\n"
base.random.bernoulli.byteLength,"var sz = base.random.bernoulli.byteLength;\n"
base.random.bernoulli.toJSON,"var o = base.random.bernoulli.toJSON()\n"
base.random.beta,"var r = base.random.beta( 2.0, 5.0 );\n"
base.random.beta.factory,"var rand = base.random.beta.factory();\nvar r = rand( 1.5, 1.5 );\nr = rand( 2.0, 3.14 );\nrand = base.random.beta.factory( 1.5, 1.5 );\nr = rand();\nr = rand();\n"
base.random.beta.NAME,"var str = base.random.beta.NAME\n"
base.random.beta.PRNG,"var prng = base.random.beta.PRNG;\n"
base.random.beta.seed,"var seed = base.random.beta.seed;\n"
base.random.beta.seedLength,"var len = base.random.beta.seedLength;\n"
base.random.beta.state,"var r = base.random.beta( 2.0, 5.0 )\nr = base.random.beta( 2.0, 5.0 )\nr = base.random.beta( 2.0, 5.0 )\nvar state = base.random.beta.state\nr = base.random.beta( 2.0, 5.0 )\nr = base.random.beta( 2.0, 5.0 )\nbase.random.beta.state = state;\nr = base.random.beta( 2.0, 5.0 )\nr = base.random.beta( 2.0, 5.0 )\n"
base.random.beta.stateLength,"var len = base.random.beta.stateLength;\n"
base.random.beta.byteLength,"var sz = base.random.beta.byteLength;\n"
base.random.beta.toJSON,"var o = base.random.beta.toJSON()\n"
base.random.betaprime,"var r = base.random.betaprime( 2.0, 5.0 );\n"
base.random.betaprime.factory,"var rand = base.random.betaprime.factory();\nvar r = rand( 1.5, 1.5 );\nr = rand( 2.0, 3.14 );\nrand = base.random.betaprime.factory( 1.5, 1.5 );\nr = rand();\nr = rand();\n"
base.random.betaprime.NAME,"var str = base.random.betaprime.NAME\n"
base.random.betaprime.PRNG,"var prng = base.random.betaprime.PRNG;\n"
base.random.betaprime.seed,"var seed = base.random.betaprime.seed;\n"
base.random.betaprime.seedLength,"var len = base.random.betaprime.seedLength;\n"
base.random.betaprime.state,"var r = base.random.betaprime( 2.0, 5.0 )\nr = base.random.betaprime( 2.0, 5.0 )\nr = base.random.betaprime( 2.0, 5.0 )\nvar state = base.random.betaprime.state\nr = base.random.betaprime( 2.0, 5.0 )\nr = base.random.betaprime( 2.0, 5.0 )\nbase.random.betaprime.state = state;\nr = base.random.betaprime( 2.0, 5.0 )\nr = base.random.betaprime( 2.0, 5.0 )\n"
base.random.betaprime.stateLength,"var len = base.random.betaprime.stateLength;\n"
base.random.betaprime.byteLength,"var sz = base.random.betaprime.byteLength;\n"
base.random.betaprime.toJSON,"var o = base.random.betaprime.toJSON()\n"
base.random.binomial,"var r = base.random.binomial( 20, 0.8 );\n"
base.random.binomial.factory,"var rand = base.random.binomial.factory();\nvar r = rand( 20, 0.3 );\nr = rand( 10, 0.77 );\nrand = base.random.binomial.factory( 10, 0.8 );\nr = rand();\nr = rand();\n"
base.random.binomial.NAME,"var str = base.random.binomial.NAME\n"
base.random.binomial.PRNG,"var prng = base.random.binomial.PRNG;\n"
base.random.binomial.seed,"var seed = base.random.binomial.seed;\n"
base.random.binomial.seedLength,"var len = base.random.binomial.seedLength;\n"
base.random.binomial.state,"var r = base.random.binomial( 20, 0.8 )\nr = base.random.binomial( 20, 0.8 )\nr = base.random.binomial( 20, 0.8 )\nvar state = base.random.binomial.state\nr = base.random.binomial( 20, 0.8 )\nr = base.random.binomial( 20, 0.8 )\nbase.random.binomial.state = state;\nr = base.random.binomial( 20, 0.8 )\nr = base.random.binomial( 20, 0.8 )\n"
base.random.binomial.stateLength,"var len = base.random.binomial.stateLength;\n"
base.random.binomial.byteLength,"var sz = base.random.binomial.byteLength;\n"
base.random.binomial.toJSON,"var o = base.random.binomial.toJSON()\n"
base.random.boxMuller,"var r = base.random.boxMuller();\n"
base.random.boxMuller.factory,"var rand = base.random.boxMuller.factory();\nr = rand();\nr = rand();\n"
base.random.boxMuller.NAME,"var str = base.random.boxMuller.NAME\n"
base.random.boxMuller.PRNG,"var prng = base.random.boxMuller.PRNG;\n"
base.random.boxMuller.seed,"var seed = base.random.boxMuller.seed;\n"
base.random.boxMuller.seedLength,"var len = base.random.boxMuller.seedLength;\n"
base.random.boxMuller.state,"var r = base.random.boxMuller()\nr = base.random.boxMuller()\nr = base.random.boxMuller()\nvar state = base.random.boxMuller.state\nr = base.random.boxMuller()\nr = base.random.boxMuller()\nbase.random.boxMuller.state = state;\nr = base.random.boxMuller()\nr = base.random.boxMuller()\n"
base.random.boxMuller.stateLength,"var len = base.random.boxMuller.stateLength;\n"
base.random.boxMuller.byteLength,"var sz = base.random.boxMuller.byteLength;\n"
base.random.boxMuller.toJSON,"var o = base.random.boxMuller.toJSON()\n"
base.random.cauchy,"var r = base.random.cauchy( 2.0, 5.0 );\n"
base.random.cauchy.factory,"var rand = base.random.cauchy.factory();\nvar r = rand( 0.0, 1.5 );\nr = rand( -2.0, 2.0 );\nrand = base.random.cauchy.factory( 0.0, 1.5 );\nr = rand();\nr = rand();\n"
base.random.cauchy.NAME,"var str = base.random.cauchy.NAME\n"
base.random.cauchy.PRNG,"var prng = base.random.cauchy.PRNG;\n"
base.random.cauchy.seed,"var seed = base.random.cauchy.seed;\n"
base.random.cauchy.seedLength,"var len = base.random.cauchy.seedLength;\n"
base.random.cauchy.state,"var r = base.random.cauchy( 2.0, 5.0 )\nr = base.random.cauchy( 2.0, 5.0 )\nr = base.random.cauchy( 2.0, 5.0 )\nvar state = base.random.cauchy.state\nr = base.random.cauchy( 2.0, 5.0 )\nr = base.random.cauchy( 2.0, 5.0 )\nbase.random.cauchy.state = state;\nr = base.random.cauchy( 2.0, 5.0 )\nr = base.random.cauchy( 2.0, 5.0 )\n"
base.random.cauchy.stateLength,"var len = base.random.cauchy.stateLength;\n"
base.random.cauchy.byteLength,"var sz = base.random.cauchy.byteLength;\n"
base.random.cauchy.toJSON,"var o = base.random.cauchy.toJSON()\n"
base.random.chi,"var r = base.random.chi( 2 );\n"
base.random.chi.factory,"var rand = base.random.chi.factory();\nvar r = rand( 5 );\nr = rand( 3.14 );\nrand = base.random.chi.factory( 3 );\nr = rand();\nr = rand();\n"
base.random.chi.NAME,"var str = base.random.chi.NAME\n"
base.random.chi.PRNG,"var prng = base.random.chi.PRNG;\n"
base.random.chi.seed,"var seed = base.random.chi.seed;\n"
base.random.chi.seedLength,"var len = base.random.chi.seedLength;\n"
base.random.chi.state,"var r = base.random.chi( 2 )\nr = base.random.chi( 2 )\nr = base.random.chi( 2 )\nvar state = base.random.chi.state\nr = base.random.chi( 2 )\nr = base.random.chi( 2 )\nbase.random.chi.state = state;\nr = base.random.chi( 2 )\nr = base.random.chi( 2 )\n"
base.random.chi.stateLength,"var len = base.random.chi.stateLength;\n"
base.random.chi.byteLength,"var sz = base.random.chi.byteLength;\n"
base.random.chi.toJSON,"var o = base.random.chi.toJSON()\n"
base.random.chisquare,"var r = base.random.chisquare( 2 );\n"
base.random.chisquare.factory,"var rand = base.random.chisquare.factory();\nvar r = rand( 5 );\nr = rand( 3.14 );\nrand = base.random.chisquare.factory( 3 );\nr = rand();\nr = rand();\n"
base.random.chisquare.NAME,"var str = base.random.chisquare.NAME\n"
base.random.chisquare.PRNG,"var prng = base.random.chisquare.PRNG;\n"
base.random.chisquare.seed,"var seed = base.random.chisquare.seed;\n"
base.random.chisquare.seedLength,"var len = base.random.chisquare.seedLength;\n"
base.random.chisquare.state,"var r = base.random.chisquare( 2 )\nr = base.random.chisquare( 2 )\nr = base.random.chisquare( 2 )\nvar state = base.random.chisquare.state\nr = base.random.chisquare( 2 )\nr = base.random.chisquare( 2 )\nbase.random.chisquare.state = state;\nr = base.random.chisquare( 2 )\nr = base.random.chisquare( 2 )\n"
base.random.chisquare.stateLength,"var len = base.random.chisquare.stateLength;\n"
base.random.chisquare.byteLength,"var sz = base.random.chisquare.byteLength;\n"
base.random.chisquare.toJSON,"var o = base.random.chisquare.toJSON()\n"
base.random.cosine,"var r = base.random.cosine( 2.0, 5.0 );\n"
base.random.cosine.factory,"var rand = base.random.cosine.factory();\nvar r = rand( 0.1, 1.5 );\nr = rand( 2.0, 3.14 );\nrand = base.random.cosine.factory( 0.1, 1.5 );\nr = rand();\nr = rand();\n"
base.random.cosine.NAME,"var str = base.random.cosine.NAME\n"
base.random.cosine.PRNG,"var prng = base.random.cosine.PRNG;\n"
base.random.cosine.seed,"var seed = base.random.cosine.seed;\n"
base.random.cosine.seedLength,"var len = base.random.cosine.seedLength;\n"
base.random.cosine.state,"var r = base.random.cosine( 2.0, 5.0 )\nr = base.random.cosine( 2.0, 5.0 )\nr = base.random.cosine( 2.0, 5.0 )\nvar state = base.random.cosine.state\nr = base.random.cosine( 2.0, 5.0 )\nr = base.random.cosine( 2.0, 5.0 )\nbase.random.cosine.state = state;\nr = base.random.cosine( 2.0, 5.0 )\nr = base.random.cosine( 2.0, 5.0 )\n"
base.random.cosine.stateLength,"var len = base.random.cosine.stateLength;\n"
base.random.cosine.byteLength,"var sz = base.random.cosine.byteLength;\n"
base.random.cosine.toJSON,"var o = base.random.cosine.toJSON()\n"
base.random.discreteUniform,"var r = base.random.discreteUniform( 2, 50 );\n"
base.random.discreteUniform.factory,"var rand = base.random.discreteUniform.factory();\nvar r = rand( 0, 10 );\nr = rand( -20, 20 );\nrand = base.random.discreteUniform.factory( 0, 10 );\nr = rand();\nr = rand();\n"
base.random.discreteUniform.NAME,"var str = base.random.discreteUniform.NAME\n"
base.random.discreteUniform.PRNG,"var prng = base.random.discreteUniform.PRNG;\n"
base.random.discreteUniform.seed,"var seed = base.random.discreteUniform.seed;\n"
base.random.discreteUniform.seedLength,"var len = base.random.discreteUniform.seedLength;\n"
base.random.discreteUniform.state,"var r = base.random.discreteUniform( 2, 50 )\nr = base.random.discreteUniform( 2, 50 )\nr = base.random.discreteUniform( 2, 50 )\nvar state = base.random.discreteUniform.state\nr = base.random.discreteUniform( 2, 50 )\nr = base.random.discreteUniform( 2, 50 )\nbase.random.discreteUniform.state = state;\nr = base.random.discreteUniform( 2, 50 )\nr = base.random.discreteUniform( 2, 50 )\n"
base.random.discreteUniform.stateLength,"var len = base.random.discreteUniform.stateLength;\n"
base.random.discreteUniform.byteLength,"var sz = base.random.discreteUniform.byteLength;\n"
base.random.discreteUniform.toJSON,"var o = base.random.discreteUniform.toJSON()\n"
base.random.erlang,"var r = base.random.erlang( 2, 5.0 );\n"
base.random.erlang.factory,"var rand = base.random.erlang.factory();\nvar r = rand( 2, 1.0 );\nr = rand( 4, 3.14 );\nrand = base.random.erlang.factory( 2, 1.5 );\nr = rand();\nr = rand();\n"
base.random.erlang.NAME,"var str = base.random.erlang.NAME\n"
base.random.erlang.PRNG,"var prng = base.random.erlang.PRNG;\n"
base.random.erlang.seed,"var seed = base.random.erlang.seed;\n"
base.random.erlang.seedLength,"var len = base.random.erlang.seedLength;\n"
base.random.erlang.state,"var r = base.random.erlang( 2, 5.0 )\nr = base.random.erlang( 2, 5.0 )\nr = base.random.erlang( 2, 5.0 )\nvar state = base.random.erlang.state\nr = base.random.erlang( 2, 5.0 )\nr = base.random.erlang( 2, 5.0 )\nbase.random.erlang.state = state;\nr = base.random.erlang( 2, 5.0 )\nr = base.random.erlang( 2, 5.0 )\n"
base.random.erlang.stateLength,"var len = base.random.erlang.stateLength;\n"
base.random.erlang.byteLength,"var sz = base.random.erlang.byteLength;\n"
base.random.erlang.toJSON,"var o = base.random.erlang.toJSON()\n"
base.random.exponential,"var r = base.random.exponential( 7.9 );\n"
base.random.exponential.factory,"var rand = base.random.exponential.factory();\nvar r = rand( 5.0 );\nr = rand( 3.14 );\nrand = base.random.exponential.factory( 10.0 );\nr = rand();\nr = rand();\n"
base.random.exponential.NAME,"var str = base.random.exponential.NAME\n"
base.random.exponential.PRNG,"var prng = base.random.exponential.PRNG;\n"
base.random.exponential.seed,"var seed = base.random.exponential.seed;\n"
base.random.exponential.seedLength,"var len = base.random.exponential.seedLength;\n"
base.random.exponential.state,"var r = base.random.exponential( 7.9 )\nr = base.random.exponential( 7.9 )\nr = base.random.exponential( 7.9 )\nvar state = base.random.exponential.state\nr = base.random.exponential( 7.9 )\nr = base.random.exponential( 7.9 )\nbase.random.exponential.state = state;\nr = base.random.exponential( 7.9 )\nr = base.random.exponential( 7.9 )\n"
base.random.exponential.stateLength,"var len = base.random.exponential.stateLength;\n"
base.random.exponential.byteLength,"var sz = base.random.exponential.byteLength;\n"
base.random.exponential.toJSON,"var o = base.random.exponential.toJSON()\n"
base.random.f,"var r = base.random.f( 2.0, 5.0 );\n"
base.random.f.factory,"var rand = base.random.f.factory();\nvar r = rand( 1.5, 1.5 );\nr = rand( 3.0, 3.14 );\nrand = base.random.f.factory( 1.5, 1.5 );\nr = rand();\nr = rand();\n"
base.random.f.NAME,"var str = base.random.f.NAME\n"
base.random.f.PRNG,"var prng = base.random.f.PRNG;\n"
base.random.f.seed,"var seed = base.random.f.seed;\n"
base.random.f.seedLength,"var len = base.random.f.seedLength;\n"
base.random.f.state,"var r = base.random.f( 1.5, 1.5 )\nr = base.random.f( 1.5, 1.5 )\nr = base.random.f( 1.5, 1.5 )\nvar state = base.random.f.state\nr = base.random.f( 1.5, 1.5 )\nr = base.random.f( 1.5, 1.5 )\nbase.random.f.state = state;\nr = base.random.f( 1.5, 1.5 )\nr = base.random.f( 1.5, 1.5 )\n"
base.random.f.stateLength,"var len = base.random.f.stateLength;\n"
base.random.f.byteLength,"var sz = base.random.f.byteLength;\n"
base.random.f.toJSON,"var o = base.random.f.toJSON()\n"
base.random.frechet,"var r = base.random.frechet( 2.0, 5.0, 3.33 );\n"
base.random.frechet.factory,"var rand = base.random.frechet.factory();\nvar r = rand( 1.0, 1.0, 0.5 );\nr = rand( 2.0, 2.0, 1.0 );\nrand = base.random.frechet.factory( 1.0, 1.0, 0.5 );\nr = rand();\nr = rand();\n"
base.random.frechet.NAME,"var str = base.random.frechet.NAME\n"
base.random.frechet.PRNG,"var prng = base.random.frechet.PRNG;\n"
base.random.frechet.seed,"var seed = base.random.frechet.seed;\n"
base.random.frechet.seedLength,"var len = base.random.frechet.seedLength;\n"
base.random.frechet.state,"var r = base.random.frechet( 1.0, 1.0, 0.5 )\nr = base.random.frechet( 1.0, 1.0, 0.5 )\nr = base.random.frechet( 1.0, 1.0, 0.5 )\nvar state = base.random.frechet.state\nr = base.random.frechet( 1.0, 1.0, 0.5 )\nr = base.random.frechet( 1.0, 1.0, 0.5 )\nbase.random.frechet.state = state;\nr = base.random.frechet( 1.0, 1.0, 0.5 )\nr = base.random.frechet( 1.0, 1.0, 0.5 )\n"
base.random.frechet.stateLength,"var len = base.random.frechet.stateLength;\n"
base.random.frechet.byteLength,"var sz = base.random.frechet.byteLength;\n"
base.random.frechet.toJSON,"var o = base.random.frechet.toJSON()\n"
base.random.gamma,"var r = base.random.gamma( 2.0, 5.0 );\n"
base.random.gamma.factory,"var rand = base.random.gamma.factory();\nvar r = rand( 1.5, 1.5 );\nr = rand( 3.14, 2.25 );\nrand = base.random.gamma.factory( 1.5, 1.5 );\nr = rand();\nr = rand();\n"
base.random.gamma.NAME,"var str = base.random.gamma.NAME\n"
base.random.gamma.PRNG,"var prng = base.random.gamma.PRNG;\n"
base.random.gamma.seed,"var seed = base.random.gamma.seed;\n"
base.random.gamma.seedLength,"var len = base.random.gamma.seedLength;\n"
base.random.gamma.state,"var r = base.random.gamma( 2.0, 5.0 )\nr = base.random.gamma( 2.0, 5.0 )\nr = base.random.gamma( 2.0, 5.0 )\nvar state = base.random.gamma.state\nr = base.random.gamma( 2.0, 5.0 )\nr = base.random.gamma( 2.0, 5.0 )\nbase.random.gamma.state = state;\nr = base.random.gamma( 2.0, 5.0 )\nr = base.random.gamma( 2.0, 5.0 )\n"
base.random.gamma.stateLength,"var len = base.random.gamma.stateLength;\n"
base.random.gamma.byteLength,"var sz = base.random.gamma.byteLength;\n"
base.random.gamma.toJSON,"var o = base.random.gamma.toJSON()\n"
base.random.geometric,"var r = base.random.geometric( 0.8 );\n"
base.random.geometric.factory,"var rand = base.random.geometric.factory();\nvar r = rand( 0.3 );\nr = rand( 0.59 );\nrand = base.random.geometric.factory( 0.3 );\nr = rand();\nr = rand();\n"
base.random.geometric.NAME,"var str = base.random.geometric.NAME\n"
base.random.geometric.PRNG,"var prng = base.random.geometric.PRNG;\n"
base.random.geometric.seed,"var seed = base.random.geometric.seed;\n"
base.random.geometric.seedLength,"var len = base.random.geometric.seedLength;\n"
base.random.geometric.state,"var r = base.random.geometric( 0.3 )\nr = base.random.geometric( 0.3 )\nr = base.random.geometric( 0.3 )\nvar state = base.random.geometric.state\nr = base.random.geometric( 0.3 )\nr = base.random.geometric( 0.3 )\nbase.random.geometric.state = state;\nr = base.random.geometric( 0.3 )\nr = base.random.geometric( 0.3 )\n"
base.random.geometric.stateLength,"var len = base.random.geometric.stateLength;\n"
base.random.geometric.byteLength,"var sz = base.random.geometric.byteLength;\n"
base.random.geometric.toJSON,"var o = base.random.geometric.toJSON()\n"
base.random.gumbel,"var r = base.random.gumbel( 2.0, 5.0 );\n"
base.random.gumbel.factory,"var rand = base.random.gumbel.factory();\nvar r = rand( 0.1, 1.5 );\nr = rand( 2.0, 3.14 );\nrand = base.random.gumbel.factory( 0.1, 1.5 );\nr = rand();\nr = rand();\n"
base.random.gumbel.NAME,"var str = base.random.gumbel.NAME\n"
base.random.gumbel.PRNG,"var prng = base.random.gumbel.PRNG;\n"
base.random.gumbel.seed,"var seed = base.random.gumbel.seed;\n"
base.random.gumbel.seedLength,"var len = base.random.gumbel.seedLength;\n"
base.random.gumbel.state,"var r = base.random.gumbel( 2.0, 5.0 )\nr = base.random.gumbel( 2.0, 5.0 )\nr = base.random.gumbel( 2.0, 5.0 )\nvar state = base.random.gumbel.state\nr = base.random.gumbel( 2.0, 5.0 )\nr = base.random.gumbel( 2.0, 5.0 )\nbase.random.gumbel.state = state;\nr = base.random.gumbel( 2.0, 5.0 )\nr = base.random.gumbel( 2.0, 5.0 )\n"
base.random.gumbel.stateLength,"var len = base.random.gumbel.stateLength;\n"
base.random.gumbel.byteLength,"var sz = base.random.gumbel.byteLength;\n"
base.random.gumbel.toJSON,"var o = base.random.gumbel.toJSON()\n"
base.random.hypergeometric,"var r = base.random.hypergeometric( 20, 10, 7 );\n"
base.random.hypergeometric.factory,"var rand = base.random.hypergeometric.factory();\nvar r = rand( 20, 10, 15 );\nr = rand( 20, 10, 7 );\nrand = base.random.hypergeometric.factory( 20, 10, 15 );\nr = rand();\nr = rand();\n"
base.random.hypergeometric.NAME,"var str = base.random.hypergeometric.NAME\n"
base.random.hypergeometric.PRNG,"var prng = base.random.hypergeometric.PRNG;\n"
base.random.hypergeometric.seed,"var seed = base.random.hypergeometric.seed;\n"
base.random.hypergeometric.seedLength,"var len = base.random.hypergeometric.seedLength;\n"
base.random.hypergeometric.state,"var r = base.random.hypergeometric( 20, 10, 15 )\nr = base.random.hypergeometric( 20, 10, 15 )\nr = base.random.hypergeometric( 20, 10, 15 )\nvar state = base.random.hypergeometric.state\nr = base.random.hypergeometric( 20, 10, 15 )\nr = base.random.hypergeometric( 20, 10, 15 )\nbase.random.hypergeometric.state = state;\nr = base.random.hypergeometric( 20, 10, 15 )\nr = base.random.hypergeometric( 20, 10, 15 )\n"
base.random.hypergeometric.stateLength,"var len = base.random.hypergeometric.stateLength;\n"
base.random.hypergeometric.byteLength,"var sz = base.random.hypergeometric.byteLength;\n"
base.random.hypergeometric.toJSON,"var o = base.random.hypergeometric.toJSON()\n"
base.random.improvedZiggurat,"var r = base.random.improvedZiggurat();\n"
base.random.improvedZiggurat.factory,"var rand = base.random.improvedZiggurat.factory();\nr = rand();\nr = rand();\n"
base.random.improvedZiggurat.NAME,"var str = base.random.improvedZiggurat.NAME\n"
base.random.improvedZiggurat.PRNG,"var prng = base.random.improvedZiggurat.PRNG;\n"
base.random.improvedZiggurat.seed,"var seed = base.random.improvedZiggurat.seed;\n"
base.random.improvedZiggurat.seedLength,"var len = base.random.improvedZiggurat.seedLength;\n"
base.random.improvedZiggurat.state,"var r = base.random.improvedZiggurat()\nr = base.random.improvedZiggurat()\nr = base.random.improvedZiggurat()\nvar state = base.random.improvedZiggurat.state\nr = base.random.improvedZiggurat()\nr = base.random.improvedZiggurat()\nbase.random.improvedZiggurat.state = state;\nr = base.random.improvedZiggurat()\nr = base.random.improvedZiggurat()\n"
base.random.improvedZiggurat.stateLength,"var len = base.random.improvedZiggurat.stateLength;\n"
base.random.improvedZiggurat.byteLength,"var sz = base.random.improvedZiggurat.byteLength;\n"
base.random.improvedZiggurat.toJSON,"var o = base.random.improvedZiggurat.toJSON()\n"
base.random.invgamma,"var r = base.random.invgamma( 2.0, 5.0 );\n"
base.random.invgamma.factory,"var rand = base.random.invgamma.factory();\nvar r = rand( 1.5, 1.5 );\nr = rand( 3.14, 2.25 );\nrand = base.random.invgamma.factory( 1.5, 1.5 );\nr = rand();\nr = rand();\n"
base.random.invgamma.NAME,"var str = base.random.invgamma.NAME\n"
base.random.invgamma.PRNG,"var prng = base.random.invgamma.PRNG;\n"
base.random.invgamma.seed,"var seed = base.random.invgamma.seed;\n"
base.random.invgamma.seedLength,"var len = base.random.invgamma.seedLength;\n"
base.random.invgamma.state,"var r = base.random.invgamma( 2.0, 5.0 )\nr = base.random.invgamma( 2.0, 5.0 )\nr = base.random.invgamma( 2.0, 5.0 )\nvar state = base.random.invgamma.state\nr = base.random.invgamma( 2.0, 5.0 )\nr = base.random.invgamma( 2.0, 5.0 )\nbase.random.invgamma.state = state;\nr = base.random.invgamma( 2.0, 5.0 )\nr = base.random.invgamma( 2.0, 5.0 )\n"
base.random.invgamma.stateLength,"var len = base.random.invgamma.stateLength;\n"
base.random.invgamma.byteLength,"var sz = base.random.invgamma.byteLength;\n"
base.random.invgamma.toJSON,"var o = base.random.invgamma.toJSON()\n"
base.random.kumaraswamy,"var r = base.random.kumaraswamy( 2.0, 5.0 );\n"
base.random.kumaraswamy.factory,"var rand = base.random.kumaraswamy.factory();\nvar r = rand( 1.5, 1.5 );\nr = rand( 2.0, 3.14 );\nrand = base.random.kumaraswamy.factory( 1.5, 1.5 );\nr = rand();\nr = rand();\n"
base.random.kumaraswamy.NAME,"var str = base.random.kumaraswamy.NAME\n"
base.random.kumaraswamy.PRNG,"var prng = base.random.kumaraswamy.PRNG;\n"
base.random.kumaraswamy.seed,"var seed = base.random.kumaraswamy.seed;\n"
base.random.kumaraswamy.seedLength,"var len = base.random.kumaraswamy.seedLength;\n"
base.random.kumaraswamy.state,"var r = base.random.kumaraswamy( 1.5, 1.5 )\nr = base.random.kumaraswamy( 1.5, 1.5 )\nr = base.random.kumaraswamy( 1.5, 1.5 )\nvar state = base.random.kumaraswamy.state\nr = base.random.kumaraswamy( 1.5, 1.5 )\nr = base.random.kumaraswamy( 1.5, 1.5 )\nbase.random.kumaraswamy.state = state;\nr = base.random.kumaraswamy( 1.5, 1.5 )\nr = base.random.kumaraswamy( 1.5, 1.5 )\n"
base.random.kumaraswamy.stateLength,"var len = base.random.kumaraswamy.stateLength;\n"
base.random.kumaraswamy.byteLength,"var sz = base.random.kumaraswamy.byteLength;\n"
base.random.kumaraswamy.toJSON,"var o = base.random.kumaraswamy.toJSON()\n"
base.random.laplace,"var r = base.random.laplace( 2.0, 5.0 );\n"
base.random.laplace.factory,"var rand = base.random.laplace.factory();\nvar r = rand( 0.1, 1.5 );\nr = rand( 2.0, 3.14 );\nrand = base.random.laplace.factory( 0.1, 1.5 );\nr = rand();\nr = rand();\n"
base.random.laplace.NAME,"var str = base.random.laplace.NAME\n"
base.random.laplace.PRNG,"var prng = base.random.laplace.PRNG;\n"
base.random.laplace.seed,"var seed = base.random.laplace.seed;\n"
base.random.laplace.seedLength,"var len = base.random.laplace.seedLength;\n"
base.random.laplace.state,"var r = base.random.laplace( 2.0, 5.0 )\nr = base.random.laplace( 2.0, 5.0 )\nr = base.random.laplace( 2.0, 5.0 )\nvar state = base.random.laplace.state\nr = base.random.laplace( 2.0, 5.0 )\nr = base.random.laplace( 2.0, 5.0 )\nbase.random.laplace.state = state;\nr = base.random.laplace( 2.0, 5.0 )\nr = base.random.laplace( 2.0, 5.0 )\n"
base.random.laplace.stateLength,"var len = base.random.laplace.stateLength;\n"
base.random.laplace.byteLength,"var sz = base.random.laplace.byteLength;\n"
base.random.laplace.toJSON,"var o = base.random.laplace.toJSON()\n"
base.random.levy,"var r = base.random.levy( 2.0, 5.0 );\n"
base.random.levy.factory,"var rand = base.random.levy.factory();\nvar r = rand( 0.1, 1.5 );\nr = rand( 2.0, 3.14 );\nrand = base.random.levy.factory( 0.1, 1.5 );\nr = rand();\nr = rand();\n"
base.random.levy.NAME,"var str = base.random.levy.NAME\n"
base.random.levy.PRNG,"var prng = base.random.levy.PRNG;\n"
base.random.levy.seed,"var seed = base.random.levy.seed;\n"
base.random.levy.seedLength,"var len = base.random.levy.seedLength;\n"
base.random.levy.state,"var r = base.random.levy( 2.0, 5.0 )\nr = base.random.levy( 2.0, 5.0 )\nr = base.random.levy( 2.0, 5.0 )\nvar state = base.random.levy.state\nr = base.random.levy( 2.0, 5.0 )\nr = base.random.levy( 2.0, 5.0 )\nbase.random.levy.state = state;\nr = base.random.levy( 2.0, 5.0 )\nr = base.random.levy( 2.0, 5.0 )\n"
base.random.levy.stateLength,"var len = base.random.levy.stateLength;\n"
base.random.levy.byteLength,"var sz = base.random.levy.byteLength;\n"
base.random.levy.toJSON,"var o = base.random.levy.toJSON()\n"
base.random.logistic,"var r = base.random.logistic( 2.0, 5.0 );\n"
base.random.logistic.factory,"var rand = base.random.logistic.factory();\nvar r = rand( 0.1, 1.5 );\nr = rand( 2.0, 3.14 );\nrand = base.random.logistic.factory( 0.1, 1.5 );\nr = rand();\nr = rand();\n"
base.random.logistic.NAME,"var str = base.random.logistic.NAME\n"
base.random.logistic.PRNG,"var prng = base.random.logistic.PRNG;\n"
base.random.logistic.seed,"var seed = base.random.logistic.seed;\n"
base.random.logistic.seedLength,"var len = base.random.logistic.seedLength;\n"
base.random.logistic.state,"var r = base.random.logistic( 2.0, 5.0 )\nr = base.random.logistic( 2.0, 5.0 )\nr = base.random.logistic( 2.0, 5.0 )\nvar state = base.random.logistic.state\nr = base.random.logistic( 2.0, 5.0 )\nr = base.random.logistic( 2.0, 5.0 )\nbase.random.logistic.state = state;\nr = base.random.logistic( 2.0, 5.0 )\nr = base.random.logistic( 2.0, 5.0 )\n"
base.random.logistic.stateLength,"var len = base.random.logistic.stateLength;\n"
base.random.logistic.byteLength,"var sz = base.random.logistic.byteLength;\n"
base.random.logistic.toJSON,"var o = base.random.logistic.toJSON()\n"
base.random.lognormal,"var r = base.random.lognormal( 2.0, 5.0 );\n"
base.random.lognormal.factory,"var rand = base.random.lognormal.factory();\nvar r = rand( 0.1, 1.5 );\nr = rand( 2.0, 3.14 );\nrand = base.random.lognormal.factory( 0.1, 1.5 );\nr = rand();\nr = rand();\n"
base.random.lognormal.NAME,"var str = base.random.lognormal.NAME\n"
base.random.lognormal.PRNG,"var prng = base.random.lognormal.PRNG;\n"
base.random.lognormal.seed,"var seed = base.random.lognormal.seed;\n"
base.random.lognormal.seedLength,"var len = base.random.lognormal.seedLength;\n"
base.random.lognormal.state,"var r = base.random.lognormal( 2.0, 5.0 )\nr = base.random.lognormal( 2.0, 5.0 )\nr = base.random.lognormal( 2.0, 5.0 )\nvar state = base.random.lognormal.state\nr = base.random.lognormal( 2.0, 5.0 )\nr = base.random.lognormal( 2.0, 5.0 )\nbase.random.lognormal.state = state;\nr = base.random.lognormal( 2.0, 5.0 )\nr = base.random.lognormal( 2.0, 5.0 )\n"
base.random.lognormal.stateLength,"var len = base.random.lognormal.stateLength;\n"
base.random.lognormal.byteLength,"var sz = base.random.lognormal.byteLength;\n"
base.random.lognormal.toJSON,"var o = base.random.lognormal.toJSON()\n"
base.random.minstd,"var r = base.random.minstd();\n"
base.random.minstd.normalized,"var r = base.random.minstd.normalized();\n"
base.random.minstd.factory,"var rand = base.random.minstd.factory();\nr = rand();\nr = rand();\nrand = base.random.minstd.factory( { 'seed': 1234 } );\nr = rand()\n"
base.random.minstd.NAME,"var str = base.random.minstd.NAME\n"
base.random.minstd.MIN,"var v = base.random.minstd.MIN\n"
base.random.minstd.MAX,"var v = base.random.minstd.MAX\n"
base.random.minstd.seed,"var seed = base.random.minstd.seed;\n"
base.random.minstd.seedLength,"var len = base.random.minstd.seedLength;\n"
base.random.minstd.state,"var r = base.random.minstd()\nr = base.random.minstd()\nr = base.random.minstd()\nvar state = base.random.minstd.state\nr = base.random.minstd()\nr = base.random.minstd()\nbase.random.minstd.state = state;\nr = base.random.minstd()\nr = base.random.minstd()\n"
base.random.minstd.stateLength,"var len = base.random.minstd.stateLength;\n"
base.random.minstd.byteLength,"var sz = base.random.minstd.byteLength;\n"
base.random.minstd.toJSON,"var o = base.random.minstd.toJSON()\n"
base.random.minstdShuffle,"var r = base.random.minstdShuffle();\n"
base.random.minstdShuffle.normalized,"var r = base.random.minstdShuffle.normalized();\n"
base.random.minstdShuffle.factory,"var rand = base.random.minstdShuffle.factory();\nr = rand();\nr = rand();\nrand = base.random.minstdShuffle.factory( { 'seed': 1234 } );\nr = rand()\n"
base.random.minstdShuffle.NAME,"var str = base.random.minstdShuffle.NAME\n"
base.random.minstdShuffle.MIN,"var v = base.random.minstdShuffle.MIN\n"
base.random.minstdShuffle.MAX,"var v = base.random.minstdShuffle.MAX\n"
base.random.minstdShuffle.seed,"var seed = base.random.minstdShuffle.seed;\n"
base.random.minstdShuffle.seedLength,"var len = base.random.minstdShuffle.seedLength;\n"
base.random.minstdShuffle.state,"var r = base.random.minstdShuffle()\nr = base.random.minstdShuffle()\nr = base.random.minstdShuffle()\nvar state = base.random.minstdShuffle.state\nr = base.random.minstdShuffle()\nr = base.random.minstdShuffle()\nbase.random.minstdShuffle.state = state;\nr = base.random.minstdShuffle()\nr = base.random.minstdShuffle()\n"
base.random.minstdShuffle.stateLength,"var len = base.random.minstdShuffle.stateLength;\n"
base.random.minstdShuffle.byteLength,"var sz = base.random.minstdShuffle.byteLength;\n"
base.random.minstdShuffle.toJSON,"var o = base.random.minstdShuffle.toJSON()\n"
base.random.mt19937,"var r = base.random.mt19937();\n"
base.random.mt19937.normalized,"var r = base.random.mt19937.normalized();\n"
base.random.mt19937.factory,"var rand = base.random.mt19937.factory();\nr = rand();\nr = rand();\nrand = base.random.mt19937.factory( { 'seed': 1234 } );\nr = rand()\n"
base.random.mt19937.NAME,"var str = base.random.mt19937.NAME\n"
base.random.mt19937.MIN,"var v = base.random.mt19937.MIN\n"
base.random.mt19937.MAX,"var v = base.random.mt19937.MAX\n"
base.random.mt19937.seed,"var seed = base.random.mt19937.seed;\n"
base.random.mt19937.seedLength,"var len = base.random.mt19937.seedLength;\n"
base.random.mt19937.state,"var r = base.random.mt19937()\nr = base.random.mt19937()\nr = base.random.mt19937()\nvar state = base.random.mt19937.state\nr = base.random.mt19937()\nr = base.random.mt19937()\nbase.random.mt19937.state = state;\nr = base.random.mt19937()\nr = base.random.mt19937()\n"
base.random.mt19937.stateLength,"var len = base.random.mt19937.stateLength;\n"
base.random.mt19937.byteLength,"var sz = base.random.mt19937.byteLength;\n"
base.random.mt19937.toJSON,"var o = base.random.mt19937.toJSON()\n"
base.random.negativeBinomial,"var r = base.random.negativeBinomial( 20, 0.8 );\n"
base.random.negativeBinomial.factory,"var rand = base.random.negativeBinomial.factory();\nvar r = rand( 20, 0.3 );\nr = rand( 10, 0.77 );\nrand = base.random.negativeBinomial.factory( 10, 0.8 );\nr = rand();\nr = rand();\n"
base.random.negativeBinomial.NAME,"var str = base.random.negativeBinomial.NAME\n"
base.random.negativeBinomial.PRNG,"var prng = base.random.negativeBinomial.PRNG;\n"
base.random.negativeBinomial.seed,"var seed = base.random.negativeBinomial.seed;\n"
base.random.negativeBinomial.seedLength,"var len = base.random.negativeBinomial.seedLength;\n"
base.random.negativeBinomial.state,"var r = base.random.negativeBinomial( 20, 0.3 )\nr = base.random.negativeBinomial( 20, 0.3 )\nr = base.random.negativeBinomial( 20, 0.3 )\nvar state = base.random.negativeBinomial.state\nr = base.random.negativeBinomial( 20, 0.3 )\nr = base.random.negativeBinomial( 20, 0.3 )\nbase.random.negativeBinomial.state = state;\nr = base.random.negativeBinomial( 20, 0.3 )\nr = base.random.negativeBinomial( 20, 0.3 )\n"
base.random.negativeBinomial.stateLength,"var len = base.random.negativeBinomial.stateLength;\n"
base.random.negativeBinomial.byteLength,"var sz = base.random.negativeBinomial.byteLength;\n"
base.random.negativeBinomial.toJSON,"var o = base.random.negativeBinomial.toJSON()\n"
base.random.normal,"var r = base.random.normal( 2.0, 5.0 );\n"
base.random.normal.factory,"var rand = base.random.normal.factory();\nvar r = rand( 0.1, 1.5 );\nr = rand( 2.0, 3.14 );\nrand = base.random.normal.factory( 0.1, 1.5 );\nr = rand();\nr = rand();\n"
base.random.normal.NAME,"var str = base.random.normal.NAME\n"
base.random.normal.PRNG,"var prng = base.random.normal.PRNG;\n"
base.random.normal.seed,"var seed = base.random.normal.seed;\n"
base.random.normal.seedLength,"var len = base.random.normal.seedLength;\n"
base.random.normal.state,"var r = base.random.normal( 2.0, 5.0 )\nr = base.random.normal( 2.0, 5.0 )\nr = base.random.normal( 2.0, 5.0 )\nvar state = base.random.normal.state\nr = base.random.normal( 2.0, 5.0 )\nr = base.random.normal( 2.0, 5.0 )\nbase.random.normal.state = state;\nr = base.random.normal( 2.0, 5.0 )\nr = base.random.normal( 2.0, 5.0 )\n"
base.random.normal.stateLength,"var len = base.random.normal.stateLength;\n"
base.random.normal.byteLength,"var sz = base.random.normal.byteLength;\n"
base.random.normal.toJSON,"var o = base.random.normal.toJSON()\n"
base.random.pareto1,"var r = base.random.pareto1( 2.0, 5.0 );\n"
base.random.pareto1.factory,"var rand = base.random.pareto1.factory();\nvar r = rand( 1.5, 1.5 );\nr = rand( 2.0, 3.14 );\nrand = base.random.pareto1.factory( 1.5, 1.5 );\nr = rand();\nr = rand();\n"
base.random.pareto1.NAME,"var str = base.random.pareto1.NAME\n"
base.random.pareto1.PRNG,"var prng = base.random.pareto1.PRNG;\n"
base.random.pareto1.seed,"var seed = base.random.pareto1.seed;\n"
base.random.pareto1.seedLength,"var len = base.random.pareto1.seedLength;\n"
base.random.pareto1.state,"var r = base.random.pareto1( 2.0, 5.0 )\nr = base.random.pareto1( 2.0, 5.0 )\nr = base.random.pareto1( 2.0, 5.0 )\nvar state = base.random.pareto1.state\nr = base.random.pareto1( 2.0, 5.0 )\nr = base.random.pareto1( 2.0, 5.0 )\nbase.random.pareto1.state = state;\nr = base.random.pareto1( 2.0, 5.0 )\nr = base.random.pareto1( 2.0, 5.0 )\n"
base.random.pareto1.stateLength,"var len = base.random.pareto1.stateLength;\n"
base.random.pareto1.byteLength,"var sz = base.random.pareto1.byteLength;\n"
base.random.pareto1.toJSON,"var o = base.random.pareto1.toJSON()\n"
base.random.poisson,"var r = base.random.poisson( 7.9 );\n"
base.random.poisson.factory,"var rand = base.random.poisson.factory();\nvar r = rand( 4.0 );\nr = rand( 3.14 );\nrand = base.random.poisson.factory( 10.0 );\nr = rand();\nr = rand();\n"
base.random.poisson.NAME,"var str = base.random.poisson.NAME\n"
base.random.poisson.PRNG,"var prng = base.random.poisson.PRNG;\n"
base.random.poisson.seed,"var seed = base.random.poisson.seed;\n"
base.random.poisson.seedLength,"var len = base.random.poisson.seedLength;\n"
base.random.poisson.state,"var r = base.random.poisson( 10.0 )\nr = base.random.poisson( 10.0 )\nr = base.random.poisson( 10.0 )\nvar state = base.random.poisson.state\nr = base.random.poisson( 10.0 )\nr = base.random.poisson( 10.0 )\nbase.random.poisson.state = state;\nr = base.random.poisson( 10.0 )\nr = base.random.poisson( 10.0 )\n"
base.random.poisson.stateLength,"var len = base.random.poisson.stateLength;\n"
base.random.poisson.byteLength,"var sz = base.random.poisson.byteLength;\n"
base.random.poisson.toJSON,"var o = base.random.poisson.toJSON()\n"
base.random.randi,"var r = base.random.randi();\n"
base.random.randi.factory,"var randi = base.random.randi.factory();\nvar r = randi();\nr = randi();\nrandi = base.random.randi.factory({ 'name': 'minstd' });\nr = randi();\nr = randi();\n"
base.random.randi.NAME,"var str = base.random.randi.NAME\n"
base.random.randi.PRNG,"var prng = base.random.randi.PRNG;\n"
base.random.randi.MIN,"var v = base.random.randi.MIN;\n"
base.random.randi.MAX,"var v = base.random.randi.MAX;\n"
base.random.randi.seed,"var seed = base.random.randi.seed;\n"
base.random.randi.seedLength,"var len = base.random.randi.seedLength;\n"
base.random.randi.state,"var r = base.random.randi()\nr = base.random.randi()\nr = base.random.randi()\nvar state = base.random.randi.state;\nr = base.random.randi()\nr = base.random.randi()\nbase.random.randi.state = state;\nr = base.random.randi()\nr = base.random.randi()\n"
base.random.randi.stateLength,"var len = base.random.randi.stateLength;\n"
base.random.randi.byteLength,"var sz = base.random.randi.byteLength;\n"
base.random.randi.toJSON,"var o = base.random.randi.toJSON()\n"
base.random.randn,"var r = base.random.randn();\n"
base.random.randn.factory,"var rand = base.random.randn.factory();\nvar r = rand();\nr = rand();\nvar rand = base.random.randn.factory({ 'name': 'box-muller' });\nr = rand();\nr = rand();\n"
base.random.randn.NAME,"var str = base.random.randn.NAME\n"
base.random.randn.PRNG,"var prng = base.random.randn.PRNG;\n"
base.random.randn.seed,"var seed = base.random.randn.seed;\n"
base.random.randn.seedLength,"var len = base.random.randn.seedLength;\n"
base.random.randn.state,"var r = base.random.randn()\nr = base.random.randn()\nr = base.random.randn()\nvar state = base.random.randn.state;\nr = base.random.randn()\nr = base.random.randn()\nbase.random.randn.state = state;\nr = base.random.randn()\nr = base.random.randn()\n"
base.random.randn.stateLength,"var len = base.random.randn.stateLength;\n"
base.random.randn.byteLength,"var sz = base.random.randn.byteLength;\n"
base.random.randn.toJSON,"var o = base.random.randn.toJSON()\n"
base.random.randu,"var r = base.random.randu();\n"
base.random.randu.factory,"var rand = base.random.randu.factory();\nvar r = rand();\nr = rand();\nvar rand = base.random.randu.factory({ 'name': 'minstd' });\nr = rand();\nr = rand();\n"
base.random.randu.NAME,"var str = base.random.randu.NAME\n"
base.random.randu.PRNG,"var prng = base.random.randu.PRNG;\n"
base.random.randu.MIN,"var v = base.random.randu.MIN;\n"
base.random.randu.MAX,"var v = base.random.randu.MAX;\n"
base.random.randu.seed,"var seed = base.random.randu.seed;\n"
base.random.randu.seedLength,"var len = base.random.randu.seedLength;\n"
base.random.randu.state,"var r = base.random.randu()\nr = base.random.randu()\nr = base.random.randu()\nvar state = base.random.randu.state;\nr = base.random.randu()\nr = base.random.randu()\nbase.random.randu.state = state;\nr = base.random.randu()\nr = base.random.randu()\n"
base.random.randu.stateLength,"var len = base.random.randu.stateLength;\n"
base.random.randu.byteLength,"var sz = base.random.randu.byteLength;\n"
base.random.randu.toJSON,"var o = base.random.randu.toJSON()\n"
base.random.rayleigh,"var r = base.random.rayleigh( 2.5 );\n"
base.random.rayleigh.factory,"var rand = base.random.rayleigh.factory();\nvar r = rand( 5.0 );\nr = rand( 10.0 );\nrand = base.random.rayleigh.factory( 5.0 );\nr = rand();\nr = rand();\n"
base.random.rayleigh.NAME,"var str = base.random.rayleigh.NAME\n"
base.random.rayleigh.PRNG,"var prng = base.random.rayleigh.PRNG;\n"
base.random.rayleigh.seed,"var seed = base.random.rayleigh.seed;\n"
base.random.rayleigh.seedLength,"var len = base.random.rayleigh.seedLength;\n"
base.random.rayleigh.state,"var r = base.random.rayleigh( 5.0 )\nr = base.random.rayleigh( 5.0 )\nr = base.random.rayleigh( 5.0 )\nvar state = base.random.rayleigh.state\nr = base.random.rayleigh( 5.0 )\nr = base.random.rayleigh( 5.0 )\nbase.random.rayleigh.state = state;\nr = base.random.rayleigh( 5.0 )\nr = base.random.rayleigh( 5.0 )\n"
base.random.rayleigh.stateLength,"var len = base.random.rayleigh.stateLength;\n"
base.random.rayleigh.byteLength,"var sz = base.random.rayleigh.byteLength;\n"
base.random.rayleigh.toJSON,"var o = base.random.rayleigh.toJSON()\n"
base.random.t,"var r = base.random.t( 2.0 );\n"
base.random.t.factory,"var rand = base.random.t.factory();\nvar r = rand( 5.0 );\nr = rand( 3.14 );\nrand = base.random.t.factory( 5.0 );\nr = rand();\nr = rand();\n"
base.random.t.NAME,"var str = base.random.t.NAME\n"
base.random.t.PRNG,"var prng = base.random.t.PRNG;\n"
base.random.t.seed,"var seed = base.random.t.seed;\n"
base.random.t.seedLength,"var len = base.random.t.seedLength;\n"
base.random.t.state,"var r = base.random.t( 10.0 )\nr = base.random.t( 10.0 )\nr = base.random.t( 10.0 )\nvar state = base.random.t.state\nr = base.random.t( 10.0 )\nr = base.random.t( 10.0 )\nbase.random.t.state = state;\nr = base.random.t( 10.0 )\nr = base.random.t( 10.0 )\n"
base.random.t.stateLength,"var len = base.random.t.stateLength;\n"
base.random.t.byteLength,"var sz = base.random.t.byteLength;\n"
base.random.t.toJSON,"var o = base.random.t.toJSON()\n"
base.random.triangular,"var r = base.random.triangular( 2.0, 5.0, 3.33 );\n"
base.random.triangular.factory,"var rand = base.random.triangular.factory();\nvar r = rand( 0.0, 1.0, 0.5 );\nr = rand( -2.0, 2.0, 1.0 );\nrand = base.random.triangular.factory( 0.0, 1.0, 0.5 );\nr = rand();\nr = rand();\n"
base.random.triangular.NAME,"var str = base.random.triangular.NAME\n"
base.random.triangular.PRNG,"var prng = base.random.triangular.PRNG;\n"
base.random.triangular.seed,"var seed = base.random.triangular.seed;\n"
base.random.triangular.seedLength,"var len = base.random.triangular.seedLength;\n"
base.random.triangular.state,"var r = base.random.triangular( 0.0, 1.0, 0.5 )\nr = base.random.triangular( 0.0, 1.0, 0.5 )\nr = base.random.triangular( 0.0, 1.0, 0.5 )\nvar state = base.random.triangular.state\nr = base.random.triangular( 0.0, 1.0, 0.5 )\nr = base.random.triangular( 0.0, 1.0, 0.5 )\nbase.random.triangular.state = state;\nr = base.random.triangular( 0.0, 1.0, 0.5 )\nr = base.random.triangular( 0.0, 1.0, 0.5 )\n"
base.random.triangular.stateLength,"var len = base.random.triangular.stateLength;\n"
base.random.triangular.byteLength,"var sz = base.random.triangular.byteLength;\n"
base.random.triangular.toJSON,"var o = base.random.triangular.toJSON()\n"
base.random.uniform,"var r = base.random.uniform( 2.0, 5.0 );\n"
base.random.uniform.factory,"var rand = base.random.uniform.factory();\nvar r = rand( 0.0, 1.0 );\nr = rand( -2.0, 2.0 );\nrand = base.random.uniform.factory( 0.0, 1.0 );\nr = rand();\nr = rand();\n"
base.random.uniform.NAME,"var str = base.random.uniform.NAME\n"
base.random.uniform.PRNG,"var prng = base.random.uniform.PRNG;\n"
base.random.uniform.seed,"var seed = base.random.uniform.seed;\n"
base.random.uniform.seedLength,"var len = base.random.uniform.seedLength;\n"
base.random.uniform.state,"var r = base.random.uniform( 2.0, 5.0 )\nr = base.random.uniform( 2.0, 5.0 )\nr = base.random.uniform( 2.0, 5.0 )\nvar state = base.random.uniform.state\nr = base.random.uniform( 2.0, 5.0 )\nr = base.random.uniform( 2.0, 5.0 )\nbase.random.uniform.state = state;\nr = base.random.uniform( 2.0, 5.0 )\nr = base.random.uniform( 2.0, 5.0 )\n"
base.random.uniform.stateLength,"var len = base.random.uniform.stateLength;\n"
base.random.uniform.byteLength,"var sz = base.random.uniform.byteLength;\n"
base.random.uniform.toJSON,"var o = base.random.uniform.toJSON()\n"
base.random.weibull,"var r = base.random.weibull( 2.0, 5.0 );\n"
base.random.weibull.factory,"var rand = base.random.weibull.factory();\nvar r = rand( 0.1, 1.5 );\nr = rand( 2.0, 3.14 );\nrand = base.random.weibull.factory( 0.1, 1.5 );\nr = rand();\nr = rand();\n"
base.random.weibull.NAME,"var str = base.random.weibull.NAME\n"
base.random.weibull.PRNG,"var prng = base.random.weibull.PRNG;\n"
base.random.weibull.seed,"var seed = base.random.weibull.seed;\n"
base.random.weibull.seedLength,"var len = base.random.weibull.seedLength;\n"
base.random.weibull.state,"var r = base.random.weibull( 2.0, 5.0 )\nr = base.random.weibull( 2.0, 5.0 )\nr = base.random.weibull( 2.0, 5.0 )\nvar state = base.random.weibull.state\nr = base.random.weibull( 2.0, 5.0 )\nr = base.random.weibull( 2.0, 5.0 )\nbase.random.weibull.state = state;\nr = base.random.weibull( 2.0, 5.0 )\nr = base.random.weibull( 2.0, 5.0 )\n"
base.random.weibull.stateLength,"var len = base.random.weibull.stateLength;\n"
base.random.weibull.byteLength,"var sz = base.random.weibull.byteLength;\n"
base.random.weibull.toJSON,"var o = base.random.weibull.toJSON()\n"
base.reldiff,"var d = base.reldiff( 2.0, 5.0 )\nd = base.reldiff( -1.0, 3.14 )\nd = base.reldiff( -2.0, 5.0, 'max-abs' )\nd = base.reldiff( -2.0, 5.0, 'max' )\nd = base.reldiff( -2.0, 5.0, 'min-abs' )\nd = base.reldiff( -2.0, 5.0, 'min' )\nd = base.reldiff( -2.0, 5.0, 'mean-abs' )\nd = base.reldiff( -2.0, 5.0, 'mean' )\nd = base.reldiff( -2.0, 5.0, 'x' )\nd = base.reldiff( 5.0, -2.0, 'x' )\nd = base.reldiff( -2.0, 5.0, 'y' )\nd = base.reldiff( 5.0, -2.0, 'y' )\nfunction scale( x, y ) {\n var s;\n\n x = base.abs( x );\n y = base.abs( y );\n\n // Maximum absolute value:\n s = (x < y ) ? y : x;\n\n // Scale in units of epsilon:\n return s * EPS;\n };\nd = base.reldiff( 12.15, 12.149999999999999, scale )\n"
base.rempio2,"var y = new Array( 2 );\nvar n = base.rempio2( 128.0, y )\nvar y1 = y[ 0 ]\nvar y2 = y[ 1 ]\n"
base.risingFactorial,"var v = base.risingFactorial( 0.9, 5 )\nv = base.risingFactorial( -9.0, 3 )\nv = base.risingFactorial( 0.0, 2 )\nv = base.risingFactorial( 3.0, -2 )\n"
base.rotl32,"var x = 2147483649;\nvar bStr = base.toBinaryStringUint32( x )\nvar y = base.rotl32( x, 10 )\nbstr = base.toBinaryStringUint32( y )\n"
base.rotr32,"var x = 1;\nvar bStr = base.toBinaryStringUint32( x )\nvar y = base.rotr32( x, 10 )\nbstr = base.toBinaryStringUint32( y )\n"
base.round,"var y = base.round( 3.14 )\ny = base.round( -4.2 )\ny = base.round( -4.6 )\ny = base.round( 9.5 )\ny = base.round( -0.0 )\n"
base.round2,"var y = base.round2( 3.14 )\ny = base.round2( -4.2 )\ny = base.round2( -4.6 )\ny = base.round2( 9.5 )\ny = base.round2( 13.0 )\ny = base.round2( -13.0 )\ny = base.round2( -0.0 )\n"
base.round10,"var y = base.round10( 3.14 )\ny = base.round10( -4.2 )\ny = base.round10( -4.6 )\ny = base.round10( 9.5 )\ny = base.round10( 13.0 )\ny = base.round10( -13.0 )\ny = base.round10( -0.0 )\n"
base.roundb,"var y = base.roundb( 3.14159, -2, 10 )\ny = base.roundb( 3.14159, 0, 2 )\ny = base.roundb( 5.0, 1, 2 )\n"
base.roundn,"var y = base.roundn( 3.14159, -2 )\ny = base.roundn( 3.14159, 0 )\ny = base.roundn( 12368.0, 3 )\n"
base.roundsd,"var y = base.roundsd( 3.14159, 3 )\ny = base.roundsd( 3.14159, 1 )\ny = base.roundsd( 12368.0, 2 )\ny = base.roundsd( 0.0313, 2, 2 )\n"
base.rsqrt,"var y = base.rsqrt( 4.0 )\ny = base.rsqrt( 100.0 )\ny = base.rsqrt( 0.0 )\ny = base.rsqrt( Infinity )\ny = base.rsqrt( -4.0 )\ny = base.rsqrt( NaN )\n"
base.sasum,"var x = new Float32Array( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ] );\nvar sum = base.sasum( x.length, x, 1 )\nvar N = base.floor( x.length / 2 );\nvar stride = 2;\nsum = base.sasum( N, x, stride )\nvar x0 = new Float32Array( [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ] );\nvar x1 = new Float32Array( x0.buffer, x0.BYTES_PER_ELEMENT*1 );\nN = base.floor( x0.length / 2 );\nsum = base.sasum( N, x1, stride )\n"
base.sasum.ndarray,"var x = new Float32Array( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ] );\nvar sum = base.sasum.ndarray( x.length, x, 1, 0 )\nx = new Float32Array( [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ] );\nsum = base.sasum.ndarray( 3, x, -1, x.length-1 )\n"
base.saxpy,"var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\nvar y = new Float32Array( [ 1.0, 1.0, 1.0, 1.0, 1.0 ] );\nvar alpha = 5.0;\nbase.saxpy( x.length, alpha, x, 1, y, 1 )\nx = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\ny = new Float32Array( [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ] );\nvar N = base.floor( x.length / 2 );\nbase.saxpy( N, alpha, x, 2, y, -1 )\nvar x0 = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\nvar y0 = new Float32Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar x1 = new Float32Array( x0.buffer, x0.BYTES_PER_ELEMENT*1 );\nvar y1 = new Float32Array( y0.buffer, y0.BYTES_PER_ELEMENT*3 );\nN = base.floor( x0.length / 2 );\nbase.saxpy( N, 5.0, x1, -2, y1, 1 )\ny0\n"
base.saxpy.ndarray,"var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\nvar y = new Float32Array( [ 1.0, 1.0, 1.0, 1.0, 1.0 ] );\nvar alpha = 5.0;\nbase.saxpy.ndarray( x.length, alpha, x, 1, 0, y, 1, 0 )\nx = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\ny = new Float32Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar N = base.floor( x.length / 2 );\nbase.saxpy.ndarray( N, alpha, x, 2, 1, y, -1, y.length-1 )\n"
base.scopy,"var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\nvar y = new Float32Array( [ 6.0, 7.0, 8.0, 9.0, 10.0 ] );\nbase.scopy( x.length, x, 1, y, 1 )\nx = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\ny = new Float32Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar N = base.floor( x.length / 2 );\nbase.scopy( N, x, -2, y, 1 )\nvar x0 = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\nvar y0 = new Float32Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar x1 = new Float32Array( x0.buffer, x0.BYTES_PER_ELEMENT*1 );\nvar y1 = new Float32Array( y0.buffer, y0.BYTES_PER_ELEMENT*3 );\nN = base.floor( x0.length / 2 );\nbase.scopy( N, x1, -2, y1, 1 )\ny0\n"
base.scopy.ndarray,"var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\nvar y = new Float32Array( [ 6.0, 7.0, 8.0, 9.0, 10.0 ] );\nbase.scopy.ndarray( x.length, x, 1, 0, y, 1, 0 )\nx = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\ny = new Float32Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar N = base.floor( x.length / 2 );\nbase.scopy.ndarray( N, x, 2, 1, y, -1, y.length-1 )\n"
base.sdot,"var x = new Float32Array( [ 4.0, 2.0, -3.0, 5.0, -1.0 ] );\nvar y = new Float32Array( [ 2.0, 6.0, -1.0, -4.0, 8.0 ] );\nvar dot = base.sdot( x.length, x, 1, y, 1 )\nx = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\ny = new Float32Array( [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ] );\nvar N = base.floor( x.length / 2 );\ndot = base.sdot(N, x, 2, y, -1 )\nx = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\ny = new Float32Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar x1 = new Float32Array( x.buffer, x.BYTES_PER_ELEMENT*1 );\nvar y1 = new Float32Array( y.buffer, y.BYTES_PER_ELEMENT*3 );\nN = base.floor( x.length / 2 );\ndot = base.sdot( N, x1, -2, y1, 1)\n"
base.sdot.ndarray,"var x = new Float32Array( [ 4.0, 2.0, -3.0, 5.0, -1.0 ] )\nvar y = new Float32Array( [ 2.0, 6.0, -1.0, -4.0, 8.0 ] )\nvar dot = base.sdot.ndarray( x.length, x, 1, 0, y, 1, 0 )\nvar x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] )\nvar x = new Float32Array( [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ] )\nvar N = base.floor( x.length / 2 );\ndot = base.sdot.ndarray( N, x, 2, 0, y, 2, 0 )\nvar x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\nvar y = new Float32Array( [ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\nvar N = base.floor( x.length / 2 );\ndot = base.sdot.ndarray( N, x, -2, x.length-1, y, 1, 3 )\n"
base.setHighWord,"var high = 1072693248 >>> 0;\nvar y = base.setHighWord( PINF, high )\n"
base.setLowWord,"var low = 5 >>> 0;\nvar x = 3.14e201;\nvar y = base.setLowWord( x, low )\nvar low = 12345678;\nvar y = base.setLowWord( PINF, low )\ny = base.setLowWord( NINF, low )\ny = base.setLowWord( NaN, low )\n"
base.sici,"var y = base.sici( 3.0 )\ny = base.sici( 0.0 )\ny = base.sici( -9.0 )\ny = base.sici( NaN )\nvar out = new Float64Array( 2 );\ny = base.sici( out, 3.0 )\nvar bool = ( y === out )\n"
base.signbit,"var bool = base.signbit( 4.0 )\nbool = base.signbit( -9.14e-34 )\nbool = base.signbit( 0.0 )\nbool = base.signbit( -0.0 )\n"
base.signbitf,"var bool = base.signbitf( base.float64ToFloat32( 4.0 ) )\nbool = base.signbitf( base.float64ToFloat32( -9.14e-34 ) )\nbool = base.signbitf( 0.0 )\nbool = base.signbitf( -0.0 )\n"
base.significandf,"var s = base.significandf( base.float64ToFloat32( 3.14e34 ) )\ns = base.significandf( base.float64ToFloat32( 3.14e-34 ) )\ns = base.significandf( base.float64ToFloat32( -3.14 ) )\ns = base.significandf( 0.0 )\ns = base.significandf( NaN )\n"
base.signum,"var sign = base.signum( -5.0 )\nsign = base.signum( 5.0 )\nsign = base.signum( -0.0 )\nsign = base.signum( 0.0 )\nsign = base.signum( NaN )\n"
base.sin,"var y = base.sin( 0.0 )\ny = base.sin( PI/2.0 )\ny = base.sin( -PI/6.0 )\ny = base.sin( NaN )\n"
base.sinc,"var y = base.sinc( 0.5 )\ny = base.sinc( -1.2 )\ny = base.sinc( 0.0 )\ny = base.sinc( NaN )\n"
base.sincos,"var y = base.sincos( 0.0 )\ny = base.sincos( PI/2.0 )\ny = base.sincos( -PI/6.0 )\ny = base.sincos( NaN )\nvar out = new Float64Array( 2 );\nvar v = base.sincos( out, 0.0 )\nvar bool = ( v === out )\n"
base.sincospi,"var y = base.sincospi( 0.0 )\ny = base.sincospi( 0.5 )\ny = base.sincospi( 0.1 )\ny = base.sincospi( NaN )\nvar out = new Float64Array( 2 );\nvar v = base.sincospi( out, 0.0 )\nvar bool = ( v === out )\n"
base.sinh,"var y = base.sinh( 0.0 )\ny = base.sinh( 2.0 )\ny = base.sinh( -2.0 )\ny = base.sinh( NaN )\n"
base.sinpi,"var y = base.sinpi( 0.0 )\ny = base.sinpi( 0.5 )\ny = base.sinpi( 0.9 )\ny = base.sinpi( NaN )\n"
base.spence,"var y = base.spence( 3.0 )\ny = base.spence( 0.0 )\ny = base.spence( -9.0 )\ny = base.spence( NaN )\n"
base.sqrt,"var y = base.sqrt( 4.0 )\ny = base.sqrt( 9.0 )\ny = base.sqrt( 0.0 )\ny = base.sqrt( -4.0 )\ny = base.sqrt( NaN )\n"
base.sqrt1pm1,"var y = base.sqrt1pm1( 3.0 )\ny = base.sqrt1pm1( 0.5 )\ny = base.sqrt1pm1( 0.02 )\ny = base.sqrt1pm1( -0.5 )\ny = base.sqrt1pm1( -1.1 )\ny = base.sqrt1pm1( NaN )\n"
base.sumSeries,"function* geometricSeriesGenerator( x ) {\n var exponent = 0;\n while ( true ) {\n     yield Math.pow( x, exponent );\n     exponent += 1;\n }\n };\nvar gen = geometricSeriesGenerator( 0.9 );\nvar out = base.sumSeries( gen )\nfunction geometricSeriesClosure( x ) {\n var exponent = -1;\n return function() {\n     exponent += 1;\n     return Math.pow( x, exponent );\n };\n };\ngen = geometricSeriesClosure( 0.9 );\nout = base.sumSeries( gen )\nout = base.sumSeries( geometricSeriesGenerator( 0.5 ), { 'initialValue': 1 } )\nout = base.sumSeries( geometricSeriesGenerator( 0.5 ), { 'maxTerms': 10 } )\nout = base.sumSeries( geometricSeriesGenerator( 0.5 ), { 'tolerance': 1e-3 } )\n"
base.tan,"var y = base.tan( 0.0 )\ny = base.tan( -PI/4.0 )\ny = base.tan( PI/4.0 )\ny = base.tan( NaN )\n"
base.tanh,"var y = base.tanh( 0.0 )\nvar y = base.tanh( -0.0 )\ny = base.tanh( 2.0 )\ny = base.tanh( -2.0 )\ny = base.tanh( NaN )\n"
base.toBinaryString,"var str = base.toBinaryString( 4.0 )\nstr = base.toBinaryString( PI )\nstr = base.toBinaryString( -1.0e308 )\nstr = base.toBinaryString( -3.14e-320 )\nstr = base.toBinaryString( 5.0e-324 )\nstr = base.toBinaryString( 0.0 )\nstr = base.toBinaryString( -0.0 )\nstr = base.toBinaryString( NaN )\nstr = base.toBinaryString( PINF )\nstr = base.toBinaryString( NINF )\n"
base.toBinaryStringf,"var str = base.toBinaryStringf( base.float64ToFloat32( 4.0 ) )\nstr = base.toBinaryStringf( base.float64ToFloat32( PI ) )\nstr = base.toBinaryStringf( base.float64ToFloat32( -1.0e38 ) )\nstr = base.toBinaryStringf( base.float64ToFloat32( -3.14e-39 ) )\nstr = base.toBinaryStringf( base.float64ToFloat32( 1.4e-45 ) )\nstr = base.toBinaryStringf( 0.0 )\nstr = base.toBinaryStringf( -0.0 )\nstr = base.toBinaryStringf( NaN )\nstr = base.toBinaryStringf( FLOAT32_PINF )\nstr = base.toBinaryStringf( FLOAT32_NINF )\n"
base.toBinaryStringUint8,"var a = new Uint8Array( [ 1, 4, 9 ] );\nvar str = base.toBinaryStringUint8( a[ 0 ] )\nstr = base.toBinaryStringUint8( a[ 1 ] )\nstr = base.toBinaryStringUint8( a[ 2 ] )\n"
base.toBinaryStringUint16,"var a = new Uint16Array( [ 1, 4, 9 ] );\nvar str = base.toBinaryStringUint16( a[ 0 ] )\nstr = base.toBinaryStringUint16( a[ 1 ] )\nstr = base.toBinaryStringUint16( a[ 2 ] )\n"
base.toBinaryStringUint32,"var a = new Uint32Array( [ 1, 4, 9 ] );\nvar str = base.toBinaryStringUint32( a[ 0 ] )\nstr = base.toBinaryStringUint32( a[ 1 ] )\nstr = base.toBinaryStringUint32( a[ 2 ] )\n"
base.toWordf,"var f32 = base.float64ToFloat32( 1.337 )\nvar w = base.toWordf( f32 )\n"
base.toWords,"var w = base.toWords( 3.14e201 )\nvar out = new Uint32Array( 2 );\nw = base.toWords( out, 3.14e201 )\nvar bool = ( w === out )\n"
base.trigamma,"var y = base.trigamma( -2.5 )\ny = base.trigamma( 1.0 )\ny = base.trigamma( 10.0 )\ny = base.trigamma( NaN )\ny = base.trigamma( -1.0 )\n"
base.trunc,"var y = base.trunc( 3.14 )\ny = base.trunc( -4.2 )\ny = base.trunc( -4.6 )\ny = base.trunc( 9.5 )\ny = base.trunc( -0.0 )\n"
base.trunc2,"var y = base.trunc2( 3.14 )\ny = base.trunc2( -4.2 )\ny = base.trunc2( -4.6 )\ny = base.trunc2( 9.5 )\ny = base.trunc2( 13.0 )\ny = base.trunc2( -13.0 )\ny = base.trunc2( -0.0 )\n"
base.trunc10,"var y = base.trunc10( 3.14 )\ny = base.trunc10( -4.2 )\ny = base.trunc10( -4.6 )\ny = base.trunc10( 9.5 )\ny = base.trunc10( 13.0 )\ny = base.trunc10( -13.0 )\ny = base.trunc10( -0.0 )\n"
base.truncb,"var y = base.truncb( 3.14159, -4, 10 )\ny = base.truncb( 3.14159, 0, 2 )\ny = base.truncb( 5.0, 1, 2 )\n"
base.truncn,"var y = base.truncn( 3.14159, -4 )\ny = base.truncn( 3.14159, 0 )\ny = base.truncn( 12368.0, 3 )\n"
base.truncsd,"var y = base.truncsd( 3.14159, 5 )\ny = base.truncsd( 3.14159, 1 )\ny = base.truncsd( 12368.0, 2 )\ny = base.truncsd( 0.0313, 2, 2 )\n"
base.uimul,"var v = base.uimul( 10>>>0, 4>>>0 )\n"
base.uimuldw,"var v = base.uimuldw( 1, 10 )\n"
base.uint32ToInt32,"var y = base.uint32ToInt32( base.float64ToUint32( 4294967295 ) )\ny = base.uint32ToInt32( base.float64ToUint32( 3 ) )\n"
base.vercos,"var y = base.vercos( 3.14 )\ny = base.vercos( -4.2 )\ny = base.vercos( -4.6 )\ny = base.vercos( 9.5 )\ny = base.vercos( -0.0 )\n"
base.versin,"var y = base.versin( 3.14 )\ny = base.versin( -4.2 )\ny = base.versin( -4.6 )\ny = base.versin( 9.5 )\ny = base.versin( -0.0 )\n"
base.wrap,"var y = base.wrap( 3.14, 0.0, 5.0 )\ny = base.wrap( -3.14, 0.0, 5.0 )\ny = base.wrap( 3.14, 0.0, 3.0 )\ny = base.wrap( -0.0, 0.0, 5.0 )\ny = base.wrap( 0.0, -3.14, -0.0 )\ny = base.wrap( NaN, 0.0, 5.0 )\n"
base.xlog1py,"var out = base.xlog1py( 3.0, 2.0 )\nout = base.xlog1py( 1.5, 5.9 )\nout = base.xlog1py( 0.9, 1.0 )\nout = base.xlog1py( 1.0, 0.0 )\nout = base.xlog1py( 0.0, -2.0 )\nout = base.xlog1py( 1.5, NaN )\nout = base.xlog1py( 0.0, NaN )\nout = base.xlog1py( NaN, 2.3 )\n"
base.xlogy,"var out = base.xlogy( 3.0, 2.0 )\nout = base.xlogy( 1.5, 5.9 )\nout = base.xlogy( 0.9, 1.0 )\nout = base.xlogy( 0.0, -2.0 )\nout = base.xlogy( 1.5, NaN )\nout = base.xlogy( 0.0, NaN )\nout = base.xlogy( NaN, 2.3 )\n"
base.zeta,"var y = base.zeta( 1.1 )\ny = base.zeta( -4.0 )\ny = base.zeta( 70.0 )\ny = base.zeta( 0.5 )\ny = base.zeta( NaN )\ny = base.zeta( 1.0 )\n"
BERNDT_CPS_WAGES_1985,"var data = BERNDT_CPS_WAGES_1985()\n"
bifurcate,"var collection = [ 'beep', 'boop', 'foo', 'bar' ];\nvar f = [ true, true, false, true ];\nvar out = bifurcate( collection, f )\nf = [ 1, 1, 0, 1 ];\nout = bifurcate( collection, f )\nf = [ true, true, false, true ];\nvar opts = { 'returns': 'indices' };\nout = bifurcate( collection, opts, f )\nopts = { 'returns': '*' };\nout = bifurcate( collection, opts, f )\n"
bifurcateBy,"function predicate( v ) { return v[ 0 ] === 'b'; };\nvar collection = [ 'beep', 'boop', 'foo', 'bar' ];\nvar out = bifurcateBy( collection, predicate )\nvar opts = { 'returns': 'indices' };\nout = bifurcateBy( collection, opts, predicate )\nopts = { 'returns': '*' };\nout = bifurcateBy( collection, opts, predicate )\n"
bifurcateByAsync,"function predicate( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar arr = [ 3000, 2500, 1000 ];\nbifurcateByAsync( arr, predicate, done )\nvar opts = { 'returns': 'indices' };\nbifurcateByAsync( arr, opts, predicate, done )\nopts = { 'returns': '*' };\nbifurcateByAsync( arr, opts, predicate, done )\nfunction predicate( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 3000, 2500, 1000 ];\nbifurcateByAsync( arr, opts, predicate, done )\nfunction predicate( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar opts = { 'series': true };\nvar arr = [ 3000, 2500, 1000 ];\nbifurcateByAsync( arr, opts, predicate, done )\n"
bifurcateByAsync.factory,"function predicate( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) );\n }\n };\nvar opts = { 'series': true };\nvar f = bifurcateByAsync.factory( opts, predicate );\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar arr = [ 3000, 2500, 1000 ];\nf( arr, done )\narr = [ 2000, 1500, 1000 ];\nf( arr, done )\n"
bifurcateIn,"function Foo() { this.a = 'beep'; this.b = 'boop'; return this; };\nFoo.prototype = Object.create( null );\nFoo.prototype.c = 'foo';\nFoo.prototype.d = 'bar';\nvar obj = new Foo();\nfunction predicate( v ) { return v[ 0 ] === 'b'; };\nvar out = bifurcateIn( obj, predicate )\nvar opts = { 'returns': 'keys' };\nout = bifurcateIn( obj, opts, predicate )\nopts = { 'returns': '*' };\nout = bifurcateIn( obj, opts, predicate )\n"
bifurcateOwn,"function predicate( v ) { return v[ 0 ] === 'b'; };\nvar obj = { 'a': 'beep', 'b': 'boop', 'c': 'foo', 'd': 'bar' };\nvar out = bifurcateOwn( obj, predicate )\nvar opts = { 'returns': 'keys' };\nout = bifurcateOwn( obj, opts, predicate )\nopts = { 'returns': '*' };\nout = bifurcateOwn( obj, opts, predicate )\n"
binomialTest,"var out = binomialTest( 682, 925 )\nout = binomialTest( [ 682, 925 - 682 ] )\nout = binomialTest( 21, 40, {\n 'p': 0.4,\n 'alternative': 'greater'\n })\n"
Buffer,"var b = new Buffer( 4 )\nvar b1 = new Buffer( [ 1, 2, 3, 4 ] );\nvar b2 = new Buffer( b1 )\nvar b = new Buffer( [ 1, 2, 3, 4 ] )\nvar b = new Buffer( 'beep boop' )\n"
buffer2json,"var buf = new allocUnsafe( 2 );\nbuf[ 0 ] = 1;\nbuf[ 1 ] = 2;\nvar json = buffer2json( buf )\n"
capitalize,"var out = capitalize( 'beep' )\nout = capitalize( 'Boop' )\n"
capitalizeKeys,"var obj = { 'aa': 1, 'bb': 2 };\nvar out = capitalizeKeys( obj )\n"
CATALAN,"CATALAN\n"
CBRT_EPS,"CBRT_EPS\n"
chdir,"var err = chdir( '/path/to/current/working/directory' )\n"
chi2gof,"var x = [ 89, 37, 30, 28, 2 ];\nvar p = [ 0.40, 0.20, 0.20, 0.15, 0.05 ];\nvar out = chi2gof( x, p )\nout.print()\nvar opts = { 'alpha': 0.01 };\nout = chi2gof( x, p, opts );\nout.print()\nx = [ 89, 37, 30, 28, 2 ];\np = [ 0.40, 0.20, 0.20, 0.15, 0.05 ];\nopts = { 'simulate': true, 'iterations': 1000 };\nout = chi2gof( x, p, opts )\nvar lambda = 3.0;\nvar rpois = base.random.poisson.factory( lambda );\nvar len = 400;\nx = [];\nfor ( var i = 0; i < len; i++ ) { x.push( rpois() ); };\nvar freqs = new Int32Array( len );\nfor ( i = 0; i < len; i++ ) { freqs[ x[ i ] ] += 1; };\nout = chi2gof( freqs, 'poisson', lambda )\n"
circarray2iterator,"var it = circarray2iterator( [ 1, 2, 3, 4 ] );\nvar v = it.next().value\nv = it.next().value\n"
circularArrayStream,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 15 };\nvar s = circularArrayStream( [ 1, 2, 3 ], opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
circularArrayStream.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = circularArrayStream.factory( opts );\n"
circularArrayStream.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 15 };\nvar s = circularArrayStream.objectMode( [ 1, 2, 3 ], opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
CircularBuffer,"var b = CircularBuffer( 3 );\nb.push( 'foo' );\nb.push( 'bar' );\nb.push( 'beep' );\nb.length\nb.count\nb.push( 'boop' )\n"
CMUDICT,"var data = CMUDICT();\nvar dict = data.dict\nvar phones = data.phones\nvar symbols = data.symbols\nvar vp = data.vp\n"
complex,"var z = complex( 5.0, 3.0, 'float64' )\nz = complex( 5.0, 3.0, 'float32' )\n"
Complex64,"var z = new Complex64( 5.0, 3.0 )\nz.re\nz.im\n"
COMPLEX64_NUM_BYTES,"COMPLEX64_NUM_BYTES\n"
Complex128,"var z = new Complex128( 5.0, 3.0 )\nz.re\nz.im\n"
COMPLEX128_NUM_BYTES,"COMPLEX128_NUM_BYTES\n"
compose,"function a( x ) {\nreturn 2 * x;\n }\nfunction b( x ) {\nreturn x + 3;\n }\nfunction c( x ) {\nreturn x / 5;\n }\nvar f = compose( c, b, a );\nvar z = f( 6 )\n"
composeAsync,"function a( x, next ) {\nsetTimeout( onTimeout, 0 );\nfunction onTimeout() {\n    next( null, 2*x );\n}\n };\nfunction b( x, next ) {\nsetTimeout( onTimeout, 0 );\nfunction onTimeout() {\n    next( null, x+3 );\n}\n };\nfunction c( x, next ) {\nsetTimeout( onTimeout, 0 );\nfunction onTimeout() {\n    next( null, x/5 );\n}\n };\nvar f = composeAsync( c, b, a );\nfunction done( error, result ) {\nif ( error ) {\n    throw error;\n}\nconsole.log( result );\n };\nf( 6, done )\n"
configdir,"var dir = configdir()\ndir = configdir( 'appname/config' )\n"
conj,"var z = new Complex128( 5.0, 3.0 );\nz.toString()\nvar v = conj( z );\nv.toString()\n"
constantFunction,"var fcn = constantFunction( 3.14 );\nvar v = fcn()\nv = fcn()\nv = fcn()\n"
constantStream,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = constantStream( 'beep', opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
constantStream.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = constantStream.factory( opts );\n"
constantStream.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = constantStream.objectMode( 3.14, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
constructorName,"var v = constructorName( 'a' )\nv = constructorName( {} )\nv = constructorName( true )\n"
contains,"var bool = contains( 'Hello World', 'World' )\nbool = contains( 'Hello World', 'world' )\nbool = contains( [ 1, 2, 3, 4 ], 2 )\nbool = contains( [ NaN, 2, 3, 4 ], NaN )\nbool = contains( 'Hello World', 'Hello', 6 )\nbool = contains( [ true, NaN, false ], true, 1 )\n"
convertArray,"var arr = [ 1.0, 2.0, 3.0, 4.0 ];\nvar out = convertArray( arr, 'float32' )\n"
convertArraySame,"var x = [ 1.0, 2.0, 3.0, 4.0 ];\nvar y = new Float32Array( 0 );\nvar out = convertArraySame( x, y )\n"
convertPath,"var out = convertPath( '/c/foo/bar/beep.c', 'win32' )\nout = convertPath( '/c/foo/bar/beep.c', 'mixed' )\nout = convertPath( '/c/foo/bar/beep.c', 'posix' )\nout = convertPath( 'C:\\\\foo\\bar\\beep.c', 'win32' )\nout = convertPath( 'C:\\\\foo\\bar\\beep.c', 'mixed' )\nout = convertPath( 'C:\\\\foo\\bar\\beep.c', 'posix' )\n"
copy,"var value = [ { 'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ];\nvar out = copy( value )\nvar bool = ( value[ 0 ].c === out[ 0 ].c )\nvalue = [ { 'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ];\nout = copy( value, 1 );\nbool = ( value[ 0 ] === out[ 0 ] )\nbool = ( value[ 0 ].c === out[ 0 ].c )\n"
copyBuffer,"var b1 = array2buffer( [ 1, 2, 3, 4 ] );\nvar b2 = copyBuffer( b1 )\n"
countBy,"function indicator( v ) {\n if ( v[ 0 ] === 'b' ) {\n     return 'b';\n }\n return 'other';\n };\nvar collection = [ 'beep', 'boop', 'foo', 'bar' ];\nvar out = countBy( collection, indicator )\n"
countByAsync,"function indicator( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) ? 'even': 'odd' );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar arr = [ 3000, 2500, 1000 ];\ncountByAsync( arr, indicator, done )\nfunction indicator( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) ? 'even' : 'odd' );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 3000, 2500, 1000 ];\ncountByAsync( arr, opts, indicator, done )\nfunction indicator( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) ? 'even' : 'odd' );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar opts = { 'series': true };\nvar arr = [ 3000, 2500, 1000 ];\ncountByAsync( arr, opts, indicator, done )\n"
countByAsync.factory,"function indicator( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) ? 'even' : 'odd' );\n }\n };\nvar opts = { 'series': true };\nvar f = countByAsync.factory( opts, indicator );\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar arr = [ 3000, 2500, 1000 ];\nf( arr, done )\narr = [ 2000, 1500, 1000, 500 ];\nf( arr, done )\n"
curry,"function add( x, y ) { return x + y; };\nvar f = curry( add );\nvar sum = f( 2 )( 3 )\nfunction add() { return arguments[ 0 ] + arguments[ 1 ]; };\nf = curry( add, 2 );\nsum = f( 2 )( 3 )\nvar obj = {\n 'name': 'Ada',\n 'greet': function greet( word1, word2 ) {\n    return word1 + ' ' + word2 + ', ' + this.name + '!'\n }\n };\nf = curry( obj.greet, obj );\nvar str = f( 'Hello' )( 'there' )\n"
curryRight,"function add( x, y ) { return x + y; };\nvar f = curryRight( add );\nvar sum = f( 2 )( 3 )\nfunction add() { return arguments[ 0 ] + arguments[ 1 ]; };\nf = curryRight( add, 2 );\nsum = f( 2 )( 3 )\nvar obj = {\n 'name': 'Ada',\n 'greet': function greet( word1, word2 ) {\n     return word1 + ' ' + word2 + ', ' + this.name + '!'\n }\n };\nf = curryRight( obj.greet, obj );\nvar str = f( 'there' )( 'Hello' )\n"
cwd,"var dir = cwd()\n"
DALE_CHALL_NEW,"var list = DALE_CHALL_NEW()\n"
datasets,"var out = datasets( 'MONTH_NAMES_EN' )\nvar opts = { 'data': 'cities' };\nout = datasets( 'MINARD_NAPOLEONS_MARCH', opts )\n"
dayOfQuarter,"var day = dayOfQuarter()\nday = dayOfQuarter( new Date() )\nday = dayOfQuarter( 12, 31, 2017 )\nday = dayOfQuarter( 'dec', 31, 2017 )\nday = dayOfQuarter( 'december', 31, 2017 )\n"
dayOfYear,"var day = dayOfYear()\nday = dayOfYear( new Date() )\nday = dayOfYear( 12, 31, 2016 )\nday = dayOfYear( 'dec', 31, 2016 )\nday = dayOfYear( 'december', 31, 2016 )\n"
daysInMonth,"var num = daysInMonth()\nnum = daysInMonth( 2 )\nnum = daysInMonth( 2, 2016 )\nnum = daysInMonth( 2, 2017 )\nnum = daysInMonth( 'feb', 2016 )\nnum = daysInMonth( 'february', 2016 )\n"
daysInYear,"var num = daysInYear()\nnum = daysInYear( 2016 )\nnum = daysInYear( 2017 )\n"
debugSinkStream,"var s = debugSinkStream( { 'name': 'foo' } );\ns.write( 'a' );\ns.write( 'b' );\ns.write( 'c' );\ns.end();\n"
debugSinkStream.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = debugSinkStream.factory( opts );\n"
debugSinkStream.objectMode,"var s = debugSinkStream.objectMode( { 'name': 'foo' } );\ns.write( { 'value': 'a' } );\ns.write( { 'value': 'b' } );\ns.write( { 'value': 'c' } );\ns.end();\n"
debugStream,"var s = debugStream( { 'name': 'foo' } );\ns.write( 'a' );\ns.write( 'b' );\ns.write( 'c' );\ns.end();\n"
debugStream.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = debugStream.factory( opts );\n"
debugStream.objectMode,"var s = debugStream.objectMode( { 'name': 'foo' } );\ns.write( { 'value': 'a' } );\ns.write( { 'value': 'b' } );\ns.write( { 'value': 'c' } );\ns.end();\n"
deepEqual,"var bool = deepEqual( [ 1, 2, 3 ], [ 1, 2, 3 ] )\nbool = deepEqual( [ 1, 2, 3 ], [ 1, 2, '3' ] )\nbool = deepEqual( { 'a': 2 }, { 'a': [ 2 ] } )\n"
deepGet,"var obj = { 'a': { 'b': { 'c': 'd' } } };\nvar val = deepGet( obj, 'a.b.c' )\nvar obj = { 'a': { 'b': { 'c': 'd' } } };\nvar val = deepGet( obj, 'a/b/c', { 'sep': '/' } )\n"
deepGet.factory,"var dget = deepGet.factory( 'a/b/c', { 'sep': '/' } );\nvar obj = { 'a': { 'b': { 'c': 'd' } } };\nvar val = dget( obj )\n"
deepHasOwnProp,"var obj = { 'a': { 'b': { 'c': 'd' } } };\nvar bool = deepHasOwnProp( obj, 'a.b.c' )\nobj = { 'a': { 'b': { 'c': 'd' } } };\nbool = deepHasOwnProp( obj, 'a/b/c', { 'sep': '/' } )\n"
deepHasOwnProp.factory,"var has = deepHasOwnProp.factory( 'a/b/c', { 'sep': '/' } );\nvar obj = { 'a': { 'b': { 'c': 'd' } } };\nvar bool = has( obj )\n"
deepHasProp,"function Foo() { return this; };\nFoo.prototype.b = { 'c': 'd' };\nvar obj = { 'a': new Foo() };\nvar bool = deepHasProp( obj, 'a.b.c' )\nbool = deepHasProp( obj, 'a/b/c', { 'sep': '/' } )\n"
deepHasProp.factory,"function Foo() { return this; };\nFoo.prototype.b = { 'c': 'd' };\nvar has = deepHasProp.factory( 'a/b/c', { 'sep': '/' } );\nvar obj = { 'a': new Foo() };\nvar bool = has( obj )\n"
deepPluck,"var arr = [\n { 'a': { 'b': { 'c': 1 } } },\n { 'a': { 'b': { 'c': 2 } } }\n ];\nvar out = deepPluck( arr, 'a.b.c' )\narr = [\n { 'a': [ 0, 1, 2 ] },\n { 'a': [ 3, 4, 5 ] }\n ];\nout = deepPluck( arr, [ 'a', 1 ] )\n"
deepSet,"var obj = { 'a': { 'b': { 'c': 'd' } } };\nvar bool = deepSet( obj, 'a.b.c', 'beep' )\nobj = { 'a': { 'b': { 'c': 'd' } } };\nbool = deepSet( obj, 'a/b/c', 'beep', { 'sep': '/' } );\nobj\nbool = deepSet( obj, 'a.e.c', 'boop', { 'create': true } );\nobj\n"
deepSet.factory,"var dset = deepSet.factory( 'a/b/c', {\n 'create': true,\n 'sep': '/'\n });\nvar obj = { 'a': { 'b': { 'c': 'd' } } };\nvar bool = dset( obj, 'beep' )\nobj\n"
defineMemoizedProperty,"var obj = {};\nfunction foo() {\n return 'bar';\n };\ndefineMemoizedProperty( obj, 'foo', {\n 'configurable': false,\n 'enumerable': true,\n 'writable': false,\n 'value': foo\n });\nobj.foo\n"
defineProperties,"var obj = {};\ndefineProperties( obj, {\n 'foo': {\n     'value': 'bar',\n     'writable': false,\n     'configurable': false,\n     'enumerable': true\n },\n 'baz': {\n     'value': 13\n }\n });\nobj.foo\nobj.baz\n"
defineProperty,"var obj = {};\ndefineProperty( obj, 'foo', {\n 'value': 'bar',\n 'enumerable': true,\n 'writable': false\n });\nobj.foo = 'boop';\nobj\n"
dirname,"var dir = dirname( './foo/bar/index.js' )\n"
DoublyLinkedList,"var list = DoublyLinkedList();\nlist.push( 'foo' ).push( 'bar' );\nlist.length\nlist.pop()\nlist.length\nlist.pop()\nlist.length\n"
doUntil,"function predicate( i ) { return ( i >= 5 ); };\nfunction beep( i ) { console.log( 'boop: %d', i ); };\ndoUntil( beep, predicate )\n"
doUntilAsync,"function fcn( i, next ) {\n setTimeout( onTimeout, i );\n function onTimeout() {\n     next( null, 'boop'+i );\n }\n };\nfunction predicate( i, clbk ) { clbk( null, i >= 5 ); };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\ndoUntilAsync( fcn, predicate, done )\n"
doUntilEach,"function predicate( v ) { return v !== v; };\nfunction logger( v, i ) { console.log( '%s: %d', i, v ); };\nvar arr = [ 1, 2, 3, 4, NaN, 5 ];\ndoUntilEach( arr, logger, predicate )\n"
doUntilEachRight,"function predicate( v ) { return v !== v; };\nfunction logger( v, i ) { console.log( '%s: %d', i, v ); };\nvar arr = [ 1, NaN, 2, 3, 4, 5 ];\ndoUntilEachRight( arr, logger, predicate )\n"
doWhile,"function predicate( i ) { return ( i < 5 ); };\nfunction beep( i ) { console.log( 'boop: %d', i ); };\ndoWhile( beep, predicate )\n"
doWhileAsync,"function fcn( i, next ) {\n setTimeout( onTimeout, i );\n function onTimeout() {\n     next( null, 'boop'+i );\n }\n };\nfunction predicate( i, clbk ) { clbk( null, i < 5 ); };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\ndoWhileAsync( fcn, predicate, done )\n"
doWhileEach,"function predicate( v ) { return v === v; };\nfunction logger( v, i ) { console.log( '%s: %d', i, v ); };\nvar arr = [ 1, 2, 3, 4, NaN, 5 ];\ndoWhileEach( arr, logger, predicate )\n"
doWhileEachRight,"function predicate( v ) { return v === v; };\nfunction logger( v, i ) { console.log( '%s: %d', i, v ); };\nvar arr = [ 1, NaN, 2, 3, 4, 5 ];\ndoWhileEachRight( arr, logger, predicate )\n"
E,"E\n"
EMOJI,"var data = EMOJI()\n"
EMOJI_CODE_PICTO,"var out = EMOJI_CODE_PICTO()\n"
EMOJI_PICTO_CODE,"var out = EMOJI_PICTO_CODE()\n"
emptyStream,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar s = emptyStream();\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
emptyStream.factory,"var opts = { 'objectMode': true };\nvar createStream = emptyStream.factory( opts );\n"
emptyStream.objectMode,"function fcn( v ) { console.log( v ); };\nvar s = emptyStream.objectMode();\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
endsWith,"var bool = endsWith( 'beep', 'ep' )\nbool = endsWith( 'Beep', 'op' )\nbool = endsWith( 'Beep', 'ee', 3 )\nbool = endsWith( 'Beep', 'ee', -1 )\nbool = endsWith( 'beep', '' )\n"
enumerableProperties,"function Foo() { this.beep = 'boop'; return this; };\nFoo.prototype.foo = 'bar';\nvar obj = new Foo();\nvar props = enumerableProperties( obj )\n"
enumerablePropertiesIn,"var props = enumerablePropertiesIn( [] )\n"
enumerablePropertySymbols,"var obj = {};\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = true;\ndesc.writable = true;\ndesc.value = 'boop';\nvar sym = ( Symbol ) ? Symbol( 'beep' ) : 'beep';\ndefineProperty( obj, sym, desc );\nvar symbols = enumerablePropertySymbols( obj )\n"
enumerablePropertySymbolsIn,"var obj = {};\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = true;\ndesc.writable = true;\ndesc.value = 'boop';\nvar sym = ( Symbol ) ? Symbol( 'beep' ) : 'beep';\ndefineProperty( obj, sym, desc );\nvar symbols = enumerablePropertySymbolsIn( obj )\n"
ENV,"var user = ENV.USER\n"
EPS,"EPS\n"
error2json,"var err = new Error( 'beep' );\nvar json = error2json( err )\n"
EULERGAMMA,"EULERGAMMA\n"
every,"var arr = [ 1, 1, 1, 1, 1 ];\nvar bool = every( arr )\n"
everyBy,"function positive( v ) { return ( v > 0 ); };\nvar arr = [ 1, 2, 3, 4 ];\nvar bool = everyBy( arr, positive )\n"
everyByAsync,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, true );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 3000, 2500, 1000 ];\neveryByAsync( arr, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, true );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 3000, 2500, 1000 ];\neveryByAsync( arr, opts, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, true );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'series': true };\nvar arr = [ 3000, 2500, 1000 ];\neveryByAsync( arr, opts, predicate, done )\n"
everyByAsync.factory,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, true );\n }\n };\nvar opts = { 'series': true };\nvar f = everyByAsync.factory( opts, predicate );\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 3000, 2500, 1000 ];\nf( arr, done )\narr = [ 2000, 1500, 1000 ];\nf( arr, done )\n"
everyByRight,"function positive( v ) { return ( v > 0 ); };\nvar arr = [ 1, 2, 3, 4 ];\nvar bool = everyByRight( arr, positive )\n"
everyByRightAsync,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, true );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 1000, 2500, 3000 ];\neveryByRightAsync( arr, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, true );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 1000, 2500, 3000 ];\neveryByRightAsync( arr, opts, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, true );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'series': true };\nvar arr = [ 1000, 2500, 3000 ];\neveryByRightAsync( arr, opts, predicate, done )\n"
everyByRightAsync.factory,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, true );\n }\n };\nvar opts = { 'series': true };\nvar f = everyByRightAsync.factory( opts, predicate );\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 1000, 2500, 3000 ];\nf( arr, done )\narr = [ 1000, 1500, 2000 ];\nf( arr, done )\n"
evil,"var v = evil( '5*4*3*2*1' )\n"
exists,"function done( error, bool ) { console.log( bool ); };\nexists( './beep/boop', done );\n"
exists.sync,"var bool = exists.sync( './beep/boop' )\n"
expandContractions,"var str = 'I won\'t be able to get y\'all out of this one.';\nvar out = expandContractions( str )\nstr = 'It oughtn\'t to be my fault, because, you know, I didn\'t know';\nout = expandContractions( str )\n"
extname,"var ext = extname( 'index.js' )\n"
fastmath.abs,"var v = fastmath.abs( -1.0 )\nv = fastmath.abs( 2.0 )\nv = fastmath.abs( 0.0 )\nv = fastmath.abs( -0.0 )\nv = fastmath.abs( NaN )\n"
fastmath.acosh,"var v = fastmath.acosh( 1.0 )\nv = fastmath.acosh( 2.0 )\nv = fastmath.acosh( NaN )\nv = fastmath.acosh( 1.0e308 )\n"
fastmath.ampbm,"var h = fastmath.ampbm( 5.0, 12.0 )\n"
fastmath.ampbm.factory,"var hypot = fastmath.ampbm.factory( 1.0, 0.5 )\n"
fastmath.asinh,"var v = fastmath.asinh( 0.0 )\nv = fastmath.asinh( 2.0 )\nv = fastmath.asinh( -2.0 )\nv = fastmath.asinh( NaN )\nv = fastmath.asinh( 1.0e200 )\nv = fastmath.asinh( 1.0e-50 )\n"
fastmath.atanh,"var v = fastmath.atanh( 0.0 )\nv = fastmath.atanh( 0.9 )\nv = fastmath.atanh( 1.0 )\nv = fastmath.atanh( -1.0 )\nv = fastmath.atanh( NaN )\nv = fastmath.atanh( 1.0e-17 )\n"
fastmath.hypot,"var h = fastmath.hypot( -5.0, 12.0 )\nh = fastmath.hypot( 1.0e154, 1.0e154 )\nh = fastmath.hypot( 1e-200, 1.0e-200 )\n"
fastmath.log2Uint32,"var v = fastmath.log2Uint32( 4 >>> 0 )\nv = fastmath.log2Uint32( 8 >>> 0 )\nv = fastmath.log2Uint32( 9 >>> 0 )\n"
fastmath.max,"var v = fastmath.max( 3.14, 4.2 )\nv = fastmath.max( 3.14, NaN )\nv = fastmath.max( NaN, 3.14 )\nv = fastmath.max( -0.0, +0.0 )\nv = fastmath.max( +0.0, -0.0 )\n"
fastmath.min,"var v = fastmath.min( 3.14, 4.2 )\nv = fastmath.min( 3.14, NaN )\nv = fastmath.min( NaN, 3.14 )\nv = fastmath.min( -0.0, +0.0 )\nv = fastmath.min( +0.0, -0.0 )\n"
fastmath.powint,"var v = fastmath.powint( 2.0, 3 )\nv = fastmath.powint( 3.14, 0 )\nv = fastmath.powint( 2.0, -2 )\nv = fastmath.powint( 0.0, 0 )\nv = fastmath.powint( -3.14, 1 )\nv = fastmath.powint( NaN, 0 )\n"
fastmath.sqrtUint32,"var v = fastmath.sqrtUint32( 9 >>> 0 )\nv = fastmath.sqrtUint32( 2 >>> 0 )\nv = fastmath.sqrtUint32( 3 >>> 0 )\nv = fastmath.sqrtUint32( 0 >>> 0 )\n"
FEMALE_FIRST_NAMES_EN,"var list = FEMALE_FIRST_NAMES_EN()\n"
FIFO,"var q = FIFO();\nq.push( 'foo' ).push( 'bar' );\nq.length\nq.pop()\nq.length\nq.pop()\nq.length\n"
find,"var data = [ 30, 20, 50, 60, 10 ];\nfunction condition( val ) { return val > 20; };\nvar vals = find( data, condition )\ndata = [ 30, 20, 50, 60, 10 ];\nvar opts = { 'k': 2, 'returns': 'values' };\nvals = find( data, opts, condition )\ndata = [ 30, 20, 50, 60, 10 ];\nopts = { 'k': -2, 'returns': '*' };\nvals = find( data, opts, condition )\n"
flattenArray,"var arr = [ 1, [ 2, [ 3, [ 4, [ 5 ], 6 ], 7 ], 8 ], 9 ];\nvar out = flattenArray( arr )\narr = [ 1, [ 2, [ 3, [ 4, [ 5 ], 6 ], 7 ], 8 ], 9 ];\nout = flattenArray( arr, { 'depth': 2 } )\nvar bool = ( arr[ 1 ][ 1 ][ 1 ] === out[ 3 ] )\narr = [ 1, [ 2, [ 3, [ 4, [ 5 ], 6 ], 7 ], 8 ], 9 ];\nout = flattenArray( arr, { 'depth': 2, 'copy': true } )\nbool = ( arr[ 1 ][ 1 ][ 1 ] === out[ 3 ] )\n"
flattenArray.factory,"var flatten = flattenArray.factory( [ 2, 2 ], {\n 'copy': false\n });\nvar out = flatten( [ [ 1, 2 ], [ 3, 4 ] ] )\nout = flatten( [ [ 5, 6 ], [ 7, 8 ] ] )\n"
flattenObject,"var obj = { 'a': { 'b': { 'c': 'd' } } };\nvar out = flattenObject( obj )\nobj = { 'a': { 'b': { 'c': 'd' } } };\nout = flattenObject( obj, { 'depth': 1 } )\nvar bool = ( obj.a.b === out[ 'a.b' ] )\nobj = { 'a': { 'b': { 'c': 'd' } } };\nout = flattenObject( obj, { 'delimiter': '-|-' } )\nobj = { 'a': { 'b': [ 1, 2, 3 ] } };\nout = flattenObject( obj, { 'flattenArrays': true } )\n"
flattenObject.factory,"var flatten = flattenObject.factory({\n 'depth': 1,\n 'copy': true,\n 'delimiter': '|'\n });\nvar obj = { 'a': { 'b': { 'c': 'd' } } };\nvar out = flatten( obj )\n"
flignerTest,"var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\nvar y = [ 3.8, 2.7, 4.0, 2.4 ];\nvar z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\nvar out = flignerTest( x, y, z )\nvar arr = [ 2.9, 3.0, 2.5, 2.6, 3.2,\n 3.8, 2.7, 4.0, 2.4,\n 2.8, 3.4, 3.7, 2.2, 2.0\n ];\nvar groups = [\n 'a', 'a', 'a', 'a', 'a',\n 'b', 'b', 'b', 'b',\n 'c', 'c', 'c', 'c', 'c'\n ];\nout = flignerTest( arr, { 'groups': groups })\n"
FLOAT16_CBRT_EPS,"FLOAT16_CBRT_EPS\n"
FLOAT16_EPS,"FLOAT16_EPS\n"
FLOAT16_EXPONENT_BIAS,"FLOAT16_EXPONENT_BIAS\n"
FLOAT16_MAX,"FLOAT16_MAX\n"
FLOAT16_MAX_SAFE_INTEGER,"FLOAT16_MAX_SAFE_INTEGER\n"
FLOAT16_MIN_SAFE_INTEGER,"FLOAT16_MIN_SAFE_INTEGER\n"
FLOAT16_NINF,"FLOAT16_NINF\n"
FLOAT16_NUM_BYTES,"FLOAT16_NUM_BYTES\n"
FLOAT16_PINF,"FLOAT16_PINF\n"
FLOAT16_PRECISION,"FLOAT16_PRECISION\n"
FLOAT16_SMALLEST_NORMAL,"FLOAT16_SMALLEST_NORMAL\n"
FLOAT16_SMALLEST_SUBNORMAL,"FLOAT16_SMALLEST_SUBNORMAL\n"
FLOAT16_SQRT_EPS,"FLOAT16_SQRT_EPS\n"
FLOAT32_CBRT_EPS,"FLOAT32_CBRT_EPS\n"
FLOAT32_EPS,"FLOAT32_EPS\n"
FLOAT32_EXPONENT_BIAS,"FLOAT32_EXPONENT_BIAS\n"
FLOAT32_MAX,"FLOAT32_MAX\n"
FLOAT32_MAX_SAFE_INTEGER,"FLOAT32_MAX_SAFE_INTEGER\n"
FLOAT32_MIN_SAFE_INTEGER,"FLOAT32_MIN_SAFE_INTEGER\n"
FLOAT32_NINF,"FLOAT32_NINF\n"
FLOAT32_NUM_BYTES,"FLOAT32_NUM_BYTES\n"
FLOAT32_PINF,"FLOAT32_PINF\n"
FLOAT32_PRECISION,"FLOAT32_PRECISION\n"
FLOAT32_SMALLEST_NORMAL,"FLOAT32_SMALLEST_NORMAL\n"
FLOAT32_SMALLEST_SUBNORMAL,"FLOAT32_SMALLEST_SUBNORMAL\n"
FLOAT32_SQRT_EPS,"FLOAT32_SQRT_EPS\n"
Float32Array,"var arr = new Float32Array()\nvar arr = new Float32Array( 5 )\nvar arr1 = new Float64Array( [ 0.5, 0.5, 0.5 ] );\nvar arr2 = new Float32Array( arr1 )\nvar arr1 = [ 0.5, 0.5, 0.5 ];\nvar arr2 = new Float32Array( arr1 )\nvar buf = new ArrayBuffer( 16 );\nvar arr = new Float32Array( buf, 0, 4 )\n"
Float32Array.from,"function mapFcn( v ) { return v * 2.0; };\nvar arr = Float32Array.from( [ 1.0, -1.0 ], mapFcn )\n"
Float32Array.of,"var arr = Float32Array.of( 2.0, -2.0 )\n"
Float32Array.BYTES_PER_ELEMENT,"Float32Array.BYTES_PER_ELEMENT\n"
Float32Array.name,"Float32Array.name\n"
Float32Array.prototype.buffer,"var arr = new Float32Array( 5 );\narr.buffer\n"
Float32Array.prototype.byteLength,"var arr = new Float32Array( 5 );\narr.byteLength\n"
Float32Array.prototype.byteOffset,"var arr = new Float32Array( 5 );\narr.byteOffset\n"
Float32Array.prototype.BYTES_PER_ELEMENT,"var arr = new Float32Array( 5 );\narr.BYTES_PER_ELEMENT\n"
Float32Array.prototype.length,"var arr = new Float32Array( 5 );\narr.length\n"
Float32Array.prototype.copyWithin,"var arr = new Float32Array( [ 2.0, -2.0, 1.0, -1.0, 1.0 ] );\narr.copyWithin( 3, 0, 2 );\narr[ 3 ]\narr[ 4 ]\n"
Float32Array.prototype.entries,"var arr = new Float32Array( [ 1.0, -1.0 ] );\nit = arr.entries();\nit.next().value\nit.next().value\nit.next().done\n"
Float32Array.prototype.every,"var arr = new Float32Array( [ 1.0, -1.0 ] );\nfunction predicate( v ) { return ( v >= 0.0 ); };\narr.every( predicate )\n"
Float32Array.prototype.fill,"var arr = new Float32Array( [ 1.0, -1.0 ] );\narr.fill( 2.0 );\narr[ 0 ]\narr[ 1 ]\n"
Float32Array.prototype.filter,"var arr1 = new Float32Array( [ 1.0, 0.0, -1.0 ] );\nfunction predicate( v ) { return ( v >= 0.0 ); };\nvar arr2 = arr1.filter( predicate );\narr2.length\n"
Float32Array.prototype.find,"var arr = new Float32Array( [ 1.0, 0.0, -1.0 ] );\nfunction predicate( v ) { return ( v < 0.0 ); };\nvar v = arr.find( predicate )\n"
Float32Array.prototype.findIndex,"var arr = new Float32Array( [ 1.0, 0.0, -1.0 ] );\nfunction predicate( v ) { return ( v < 0.0 ); };\nvar idx = arr.findIndex( predicate )\n"
Float32Array.prototype.forEach,"var arr = new Float32Array( [ 1.0, 0.0, -1.0 ] );\nvar str = ' ';\nfunction fcn( v, i ) { str += i + ':' + v + ' '; };\narr.forEach( fcn );\nstr\n"
Float32Array.prototype.includes,"var arr = new Float32Array( [ 1.0, 0.0, -1.0 ] );\nvar bool = arr.includes( 2.0 )\nbool = arr.includes( -1.0 )\n"
Float32Array.prototype.indexOf,"var arr = new Float32Array( [ 1.0, 0.0, -1.0 ] );\nvar idx = arr.indexOf( 2.0 )\nidx = arr.indexOf( -1.0 )\n"
Float32Array.prototype.join,"var arr = new Float32Array( [ 1.0, 0.0, -1.0 ] );\narr.join( '|' )\n"
Float32Array.prototype.keys,"var arr = new Float32Array( [ 1.0, -1.0 ] );\nit = arr.keys();\nit.next().value\nit.next().value\nit.next().done\n"
Float32Array.prototype.lastIndexOf,"var arr = new Float32Array( [ 1.0, 0.0, -1.0, 0.0, 1.0 ] );\nvar idx = arr.lastIndexOf( 2.0 )\nidx = arr.lastIndexOf( 0.0 )\n"
Float32Array.prototype.map,"var arr1 = new Float32Array( [ 1.0, 0.0, -1.0 ] );\nfunction fcn( v ) { return v * 2.0; };\nvar arr2 = arr1.map( fcn );\n"
Float32Array.prototype.reduce,"var arr = new Float32Array( [ 1.0, 0.0, -1.0 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduce( fcn, 0.0 )\n"
Float32Array.prototype.reduceRight,"var arr = new Float32Array( [ 1.0, 0.0, -1.0 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduceRight( fcn, 0.0 )\n"
Float32Array.prototype.reverse,"var arr = new Float32Array( [ 1.0, 0.0, -1.0 ] )\narr.reverse()\n"
Float32Array.prototype.set,"var arr = new Float32Array( [ 1.0, 0.0, -1.0 ] );\narr.set( [ -2.0, 2.0 ], 1 );\narr[ 1 ]\narr[ 2 ]\n"
Float32Array.prototype.slice,"var arr1 = new Float32Array( [ 1.0, 0.0, -1.0 ] );\nvar arr2 = arr1.slice( 1 );\narr2.length\narr2[ 0 ]\narr2[ 1 ]\n"
Float32Array.prototype.some,"var arr = new Float32Array( [ 1.0, -1.0 ] );\nfunction predicate( v ) { return ( v < 0.0 ); };\narr.some( predicate )\n"
Float32Array.prototype.sort,"var arr = new Float32Array( [ 1.0, -1.0, 0.0, 2.0, -2.0 ] );\narr.sort()\n"
Float32Array.prototype.subarray,"var arr1 = new Float32Array( [ 1.0, -1.0, 0.0, 2.0, -2.0 ] );\nvar arr2 = arr1.subarray( 2 )\n"
Float32Array.prototype.toLocaleString,"var arr = new Float32Array( [ 1.0, -1.0, 0.0 ] );\narr.toLocaleString()\n"
Float32Array.prototype.toString,"var arr = new Float32Array( [ 1.0, -1.0, 0.0 ] );\narr.toString()\n"
Float32Array.prototype.values,"var arr = new Float32Array( [ 1.0, -1.0 ] );\nit = arr.values();\nit.next().value\nit.next().value\nit.next().done\n"
FLOAT64_EXPONENT_BIAS,"FLOAT64_EXPONENT_BIAS\n"
FLOAT64_HIGH_WORD_EXPONENT_MASK,"FLOAT64_HIGH_WORD_EXPONENT_MASK\nbase.toBinaryStringUint32( FLOAT64_HIGH_WORD_EXPONENT_MASK )\n"
FLOAT64_HIGH_WORD_SIGNIFICAND_MASK,"FLOAT64_HIGH_WORD_SIGNIFICAND_MASK\nbase.toBinaryStringUint32( FLOAT64_HIGH_WORD_SIGNIFICAND_MASK )\n"
FLOAT64_MAX,"FLOAT64_MAX\n"
FLOAT64_MAX_BASE2_EXPONENT,"FLOAT64_MAX_BASE2_EXPONENT\n"
FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL,"FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL\n"
FLOAT64_MAX_BASE10_EXPONENT,"FLOAT64_MAX_BASE10_EXPONENT\n"
FLOAT64_MAX_BASE10_EXPONENT_SUBNORMAL,"FLOAT64_MAX_BASE10_EXPONENT_SUBNORMAL\n"
FLOAT64_MAX_LN,"FLOAT64_MAX_LN\n"
FLOAT64_MAX_SAFE_FIBONACCI,"FLOAT64_MAX_SAFE_FIBONACCI\n"
FLOAT64_MAX_SAFE_INTEGER,"FLOAT64_MAX_SAFE_INTEGER\n"
FLOAT64_MAX_SAFE_LUCAS,"FLOAT64_MAX_SAFE_LUCAS\n"
FLOAT64_MAX_SAFE_NTH_FIBONACCI,"FLOAT64_MAX_SAFE_NTH_FIBONACCI\n"
FLOAT64_MAX_SAFE_NTH_LUCAS,"FLOAT64_MAX_SAFE_NTH_LUCAS\n"
FLOAT64_MIN_BASE2_EXPONENT,"FLOAT64_MIN_BASE2_EXPONENT\n"
FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL,"FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL\n"
FLOAT64_MIN_BASE10_EXPONENT,"FLOAT64_MIN_BASE10_EXPONENT\n"
FLOAT64_MIN_BASE10_EXPONENT_SUBNORMAL,"FLOAT64_MIN_BASE10_EXPONENT_SUBNORMAL\n"
FLOAT64_MIN_LN,"FLOAT64_MIN_LN\n"
FLOAT64_MIN_SAFE_INTEGER,"FLOAT64_MIN_SAFE_INTEGER\n"
FLOAT64_NUM_BYTES,"FLOAT64_NUM_BYTES\n"
FLOAT64_PRECISION,"FLOAT64_PRECISION\n"
FLOAT64_SMALLEST_NORMAL,"FLOAT64_SMALLEST_NORMAL\n"
FLOAT64_SMALLEST_SUBNORMAL,"FLOAT64_SMALLEST_SUBNORMAL\n"
Float64Array,"var arr = new Float64Array()\nvar arr = new Float64Array( 5 )\nvar arr1 = new Float32Array( [ 0.5, 0.5, 0.5 ] );\nvar arr2 = new Float64Array( arr1 )\nvar arr1 = [ 0.5, 0.5, 0.5 ];\nvar arr2 = new Float64Array( arr1 )\nvar buf = new ArrayBuffer( 32 );\nvar arr = new Float64Array( buf, 0, 4 )\n"
Float64Array.from,"function mapFcn( v ) { return v * 2.0; };\nvar arr = Float64Array.from( [ 1.0, -1.0 ], mapFcn )\n"
Float64Array.of,"var arr = Float64Array.of( 2.0, -2.0 )\n"
Float64Array.BYTES_PER_ELEMENT,"Float64Array.BYTES_PER_ELEMENT\n"
Float64Array.name,"Float64Array.name\n"
Float64Array.prototype.buffer,"var arr = new Float64Array( 5 );\narr.buffer\n"
Float64Array.prototype.byteLength,"var arr = new Float64Array( 5 );\narr.byteLength\n"
Float64Array.prototype.byteOffset,"var arr = new Float64Array( 5 );\narr.byteOffset\n"
Float64Array.prototype.BYTES_PER_ELEMENT,"var arr = new Float64Array( 5 );\narr.BYTES_PER_ELEMENT\n"
Float64Array.prototype.length,"var arr = new Float64Array( 5 );\narr.length\n"
Float64Array.prototype.copyWithin,"var arr = new Float64Array( [ 2.0, -2.0, 1.0, -1.0, 1.0 ] );\narr.copyWithin( 3, 0, 2 );\narr[ 3 ]\narr[ 4 ]\n"
Float64Array.prototype.entries,"var arr = new Float64Array( [ 1.0, -1.0 ] );\nit = arr.entries();\nit.next().value\nit.next().value\nit.next().done\n"
Float64Array.prototype.every,"var arr = new Float64Array( [ 1.0, -1.0 ] );\nfunction predicate( v ) { return ( v >= 0.0 ); };\narr.every( predicate )\n"
Float64Array.prototype.fill,"var arr = new Float64Array( [ 1.0, -1.0 ] );\narr.fill( 2.0 );\narr[ 0 ]\narr[ 1 ]\n"
Float64Array.prototype.filter,"var arr1 = new Float64Array( [ 1.0, 0.0, -1.0 ] );\nfunction predicate( v ) { return ( v >= 0.0 ); };\nvar arr2 = arr1.filter( predicate );\narr2.length\n"
Float64Array.prototype.find,"var arr = new Float64Array( [ 1.0, 0.0, -1.0 ] );\nfunction predicate( v ) { return ( v < 0.0 ); };\nvar v = arr.find( predicate )\n"
Float64Array.prototype.findIndex,"var arr = new Float64Array( [ 1.0, 0.0, -1.0 ] );\nfunction predicate( v ) { return ( v < 0.0 ); };\nvar idx = arr.findIndex( predicate )\n"
Float64Array.prototype.forEach,"var arr = new Float64Array( [ 1.0, 0.0, -1.0 ] );\nvar str = ' ';\nfunction fcn( v, i ) { str += i + ':' + v + ' '; };\narr.forEach( fcn );\nstr\n"
Float64Array.prototype.includes,"var arr = new Float64Array( [ 1.0, 0.0, -1.0 ] );\nvar bool = arr.includes( 2.0 )\nbool = arr.includes( -1.0 )\n"
Float64Array.prototype.indexOf,"var arr = new Float64Array( [ 1.0, 0.0, -1.0 ] );\nvar idx = arr.indexOf( 2.0 )\nidx = arr.indexOf( -1.0 )\n"
Float64Array.prototype.join,"var arr = new Float64Array( [ 1.0, 0.0, -1.0 ] );\narr.join( '|' )\n"
Float64Array.prototype.keys,"var arr = new Float64Array( [ 1.0, -1.0 ] );\nit = arr.keys();\nit.next().value\nit.next().value\nit.next().done\n"
Float64Array.prototype.lastIndexOf,"var arr = new Float64Array( [ 1.0, 0.0, -1.0, 0.0, 1.0 ] );\nvar idx = arr.lastIndexOf( 2.0 )\nidx = arr.lastIndexOf( 0.0 )\n"
Float64Array.prototype.map,"var arr1 = new Float64Array( [ 1.0, 0.0, -1.0 ] );\nfunction fcn( v ) { return v * 2.0; };\nvar arr2 = arr1.map( fcn );\n"
Float64Array.prototype.reduce,"var arr = new Float64Array( [ 1.0, 0.0, -1.0 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduce( fcn, 0.0 )\n"
Float64Array.prototype.reduceRight,"var arr = new Float64Array( [ 1.0, 0.0, -1.0 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduceRight( fcn, 0.0 )\n"
Float64Array.prototype.reverse,"var arr = new Float64Array( [ 1.0, 0.0, -1.0 ] )\narr.reverse()\n"
Float64Array.prototype.set,"var arr = new Float64Array( [ 1.0, 0.0, -1.0 ] );\narr.set( [ -2.0, 2.0 ], 1 );\narr[ 1 ]\narr[ 2 ]\n"
Float64Array.prototype.slice,"var arr1 = new Float64Array( [ 1.0, 0.0, -1.0 ] );\nvar arr2 = arr1.slice( 1 );\narr2.length\narr2[ 0 ]\narr2[ 1 ]\n"
Float64Array.prototype.some,"var arr = new Float64Array( [ 1.0, -1.0 ] );\nfunction predicate( v ) { return ( v < 0.0 ); };\narr.some( predicate )\n"
Float64Array.prototype.sort,"var arr = new Float64Array( [ 1.0, -1.0, 0.0, 2.0, -2.0 ] );\narr.sort()\n"
Float64Array.prototype.subarray,"var arr1 = new Float64Array( [ 1.0, -1.0, 0.0, 2.0, -2.0 ] );\nvar arr2 = arr1.subarray( 2 )\n"
Float64Array.prototype.toLocaleString,"var arr = new Float64Array( [ 1.0, -1.0, 0.0 ] );\narr.toLocaleString()\n"
Float64Array.prototype.toString,"var arr = new Float64Array( [ 1.0, -1.0, 0.0 ] );\narr.toString()\n"
Float64Array.prototype.values,"var arr = new Float64Array( [ 1.0, -1.0 ] );\nit = arr.values();\nit.next().value\nit.next().value\nit.next().done\n"
forEach,"function logger( v, i ) { console.log( '%s: %d', i, v ); };\nvar arr = [ 1, 2, 3, 4 ];\nforEach( arr, logger )\n"
forEachAsync,"function onDuration( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next();\n }\n };\nfunction done( error ) {\n if ( error ) {\n     throw error;\n }\n console.log( 'Done.' );\n };\nvar arr = [ 3000, 2500, 1000 ];\nforEachAsync( arr, onDuration, done )\nfunction onDuration( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next();\n }\n };\nfunction done( error ) {\n if ( error ) {\n     throw error;\n }\n console.log( 'Done.' );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 3000, 2500, 1000 ];\nforEachAsync( arr, opts, onDuration, done )\nfunction onDuration( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next();\n }\n };\nfunction done( error ) {\n if ( error ) {\n     throw error;\n }\n console.log( 'Done.' );\n };\nvar opts = { 'series': true };\nvar arr = [ 3000, 2500, 1000 ];\nforEachAsync( arr, opts, onDuration, done )\n"
forEachAsync.factory,"function onDuration( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next();\n }\n };\nvar opts = { 'series': true };\nvar f = forEachAsync.factory( opts, onDuration );\nfunction done( error ) {\n if ( error ) {\n     throw error;\n }\n console.log( 'Done.' );\n };\nvar arr = [ 3000, 2500, 1000 ];\nf( arr, done )\narr = [ 2000, 1500, 1000 ];\nf( arr, done )\n"
forEachRight,"function logger( v, i ) { console.log( '%s: %d', i, v ); };\nvar arr = [ 1, 2, 3, 4 ];\nforEachRight( arr, logger )\n"
forEachRightAsync,"function onDuration( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next();\n }\n };\nfunction done( error ) {\n if ( error ) {\n     throw error;\n }\n console.log( 'Done.' );\n };\nvar arr = [ 1000, 2500, 3000 ];\nforEachRightAsync( arr, onDuration, done )\nfunction onDuration( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next();\n }\n };\nfunction done( error ) {\n if ( error ) {\n     throw error;\n }\n console.log( 'Done.' );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 1000, 2500, 3000 ];\nforEachRightAsync( arr, opts, onDuration, done )\nfunction onDuration( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next();\n }\n };\nfunction done( error ) {\n if ( error ) {\n     throw error;\n }\n console.log( 'Done.' );\n };\nvar opts = { 'series': true };\nvar arr = [ 1000, 2500, 3000 ];\nforEachRightAsync( arr, opts, onDuration, done )\n"
forEachRightAsync.factory,"function onDuration( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next();\n }\n };\nvar opts = { 'series': true };\nvar f = forEachRightAsync.factory( opts, onDuration );\nfunction done( error ) {\n if ( error ) {\n     throw error;\n }\n console.log( 'Done.' );\n };\nvar arr = [ 1000, 2500, 3000 ];\nf( arr, done )\narr = [ 1000, 1500, 2000 ];\nf( arr, done )\n"
forIn,"function logger( v, k ) { console.log( '%s: %d', k, v ); };\nfunction Foo() { return this; };\nFoo.prototype.beep = 'boop';\nvar obj = new Foo();\nforIn( obj, logger )\n"
forOwn,"function logger( v, k ) { console.log( '%s: %d', k, v ); };\nvar obj = { 'a': 1, 'b': 2, 'c': 3, 'd': 4 };\nforOwn( obj, logger )\n"
FOURTH_PI,"FOURTH_PI\n"
FOURTH_ROOT_EPS,"FOURTH_ROOT_EPS\n"
FRB_SF_WAGE_RIGIDITY,"var data = FRB_SF_WAGE_RIGIDITY()\n"
fromCodePoint,"var out = fromCodePoint( 9731 )\nout = fromCodePoint( [ 9731 ] )\nout = fromCodePoint( 97, 98, 99 )\nout = fromCodePoint( [ 97, 98, 99 ] )\n"
functionName,"var v = functionName( String )\nv = functionName( function foo(){} )\nv = functionName( function(){} )\n"
functionSequence,"function a( x ) { return 2 * x; };\nfunction b( x ) { return x + 3; };\nfunction c( x ) { return x / 5; };\nvar f = functionSequence( a, b, c );\nvar z = f( 6 )\n"
functionSequenceAsync,"function a( x, next ) {\nsetTimeout( onTimeout, 0 );\nfunction onTimeout() {\n    next( null, 2*x );\n}\n };\nfunction b( x, next ) {\nsetTimeout( onTimeout, 0 );\nfunction onTimeout() {\n    next( null, x+3 );\n}\n };\nfunction c( x, next ) {\nsetTimeout( onTimeout, 0 );\nfunction onTimeout() {\n    next( null, x/5 );\n}\n };\nvar f = functionSequenceAsync( a, b, c );\nfunction done( error, result ) {\nif ( error ) {\n    throw error;\n}\nconsole.log( result );\n };\nf( 6, done )\n"
GAMMA_LANCZOS_G,"GAMMA_LANCZOS_G\n"
getegid,"var gid = getegid()\n"
geteuid,"var uid = geteuid()\n"
getgid,"var gid = getgid()\n"
getGlobal,"var g = getGlobal()\n"
getPrototypeOf,"var proto = getPrototypeOf( {} )\n"
getuid,"var uid = getuid()\n"
GLAISHER,"GLAISHER\n"
group,"var collection = [ 'beep', 'boop', 'foo', 'bar' ];\nvar groups = [ 'b', 'b', 'f', 'b' ];\nvar out = group( collection, groups )\ngroups = [ 1, 1, 2, 1 ];\nout = group( collection, groups )\ngroups = [ 'b', 'b', 'f', 'b' ];\nvar opts = { 'returns': 'indices' };\nout = group( collection, opts, groups )\nopts = { 'returns': '*' };\nout = group( collection, opts, groups )\n"
groupBy,"function indicator( v ) {\n if ( v[ 0 ] === 'b' ) {\n     return 'b';\n }\n return 'other';\n };\nvar collection = [ 'beep', 'boop', 'foo', 'bar' ];\nvar out = groupBy( collection, indicator )\nvar opts = { 'returns': 'indices' };\nout = groupBy( collection, opts, indicator )\nopts = { 'returns': '*' };\nout = groupBy( collection, opts, indicator )\n"
groupByAsync,"function indicator( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar arr = [ 3000, 2500, 1000 ];\ngroupByAsync( arr, indicator, done )\nvar opts = { 'returns': 'indices' };\ngroupByAsync( arr, opts, indicator, done )\nopts = { 'returns': '*' };\ngroupByAsync( arr, opts, indicator, done )\nfunction indicator( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 3000, 2500, 1000 ];\ngroupByAsync( arr, opts, indicator, done )\nfunction indicator( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar opts = { 'series': true };\nvar arr = [ 3000, 2500, 1000 ];\ngroupByAsync( arr, opts, indicator, done )\n"
groupByAsync.factory,"function indicator( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) );\n }\n };\nvar opts = { 'series': true };\nvar f = groupByAsync.factory( opts, indicator );\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar arr = [ 3000, 2500, 1000 ];\nf( arr, done )\narr = [ 2000, 1500, 1000 ];\nf( arr, done )\n"
groupIn,"function indicator( v ) {\n if ( v[ 0 ] === 'b' ) {\n     return 'b';\n }\n return 'other';\n };\nfunction Foo() { this.a = 'beep'; this.b = 'boop'; return this; };\nFoo.prototype = Object.create( null );\nFoo.prototype.c = 'foo';\nFoo.prototype.d = 'bar';\nvar obj = new Foo();\nvar out = groupIn( obj, indicator )\nvar opts = { 'returns': 'keys' };\nout = groupIn( obj, opts, indicator )\nopts = { 'returns': '*' };\nout = groupIn( obj, opts, indicator )\n"
groupOwn,"function indicator( v ) {\n if ( v[ 0 ] === 'b' ) {\n     return 'b';\n }\n return 'other';\n };\nvar obj = { 'a': 'beep', 'b': 'boop', 'c': 'foo', 'd': 'bar' };\nvar out = groupOwn( obj, indicator )\nvar opts = { 'returns': 'keys' };\nout = groupOwn( obj, opts, indicator )\nopts = { 'returns': '*' };\nout = groupOwn( obj, opts, indicator )\n"
HALF_LN2,"HALF_LN2\n"
HALF_PI,"HALF_PI\n"
HARRISON_BOSTON_HOUSE_PRICES,"var data = HARRISON_BOSTON_HOUSE_PRICES()\n"
HARRISON_BOSTON_HOUSE_PRICES_CORRECTED,"var data = HARRISON_BOSTON_HOUSE_PRICES_CORRECTED()\n"
hasArrayBufferSupport,"var bool = hasArrayBufferSupport()\n"
hasAsyncAwaitSupport,"var bool = hasAsyncAwaitSupport()\n"
hasAsyncIteratorSymbolSupport,"var bool = hasAsyncIteratorSymbolSupport()\n"
hasClassSupport,"var bool = hasClassSupport()\n"
hasDefinePropertiesSupport,"var bool = hasDefinePropertiesSupport()\n"
hasDefinePropertySupport,"var bool = hasDefinePropertySupport()\n"
hasFloat32ArraySupport,"var bool = hasFloat32ArraySupport()\n"
hasFloat64ArraySupport,"var bool = hasFloat64ArraySupport()\n"
hasFunctionNameSupport,"var bool = hasFunctionNameSupport()\n"
hasGeneratorSupport,"var bool = hasGeneratorSupport()\n"
hasGlobalThisSupport,"var bool = hasGlobalThisSupport()\n"
hasInt8ArraySupport,"var bool = hasInt8ArraySupport()\n"
hasInt16ArraySupport,"var bool = hasInt16ArraySupport()\n"
hasInt32ArraySupport,"var bool = hasInt32ArraySupport()\n"
hasIteratorSymbolSupport,"var bool = hasIteratorSymbolSupport()\n"
hasMapSupport,"var bool = hasMapSupport()\n"
hasNodeBufferSupport,"var bool = hasNodeBufferSupport()\n"
hasOwnProp,"var beep = { 'boop': true };\nvar bool = hasOwnProp( beep, 'boop' )\nbool = hasOwnProp( beep, 'bop' )\n"
hasProp,"var beep = { 'boop': true };\nvar bool = hasProp( beep, 'boop' )\nbool = hasProp( beep, 'toString' )\nbool = hasProp( beep, 'bop' )\n"
hasProxySupport,"var bool = hasProxySupport()\n"
hasSetSupport,"var bool = hasSetSupport()\n"
hasSharedArrayBufferSupport,"var bool = hasSharedArrayBufferSupport()\n"
hasSymbolSupport,"var bool = hasSymbolSupport()\n"
hasToStringTagSupport,"var bool = hasToStringTagSupport()\n"
hasUint8ArraySupport,"var bool = hasUint8ArraySupport()\n"
hasUint8ClampedArraySupport,"var bool = hasUint8ClampedArraySupport()\n"
hasUint16ArraySupport,"var bool = hasUint16ArraySupport()\n"
hasUint32ArraySupport,"var bool = hasUint32ArraySupport()\n"
hasWeakMapSupport,"var bool = hasWeakMapSupport()\n"
hasWeakSetSupport,"var bool = hasWeakSetSupport()\n"
hasWebAssemblySupport,"var bool = hasWebAssemblySupport()\n"
HERNDON_VENUS_SEMIDIAMETERS,"var d = HERNDON_VENUS_SEMIDIAMETERS()\n"
homedir,"var home = homedir()\n"
HOURS_IN_DAY,"var days = 3.14;\nvar hrs = days * HOURS_IN_DAY\n"
HOURS_IN_WEEK,"var wks = 3.14;\nvar hrs = wks * HOURS_IN_WEEK\n"
hoursInMonth,"var num = hoursInMonth()\nnum = hoursInMonth( 2 )\nnum = hoursInMonth( 2, 2016 )\nnum = hoursInMonth( 2, 2017 )\nnum = hoursInMonth( 'feb', 2016 )\nnum = hoursInMonth( 'february', 2016 )\n"
hoursInYear,"var num = hoursInYear()\nnum = hoursInYear( 2016 )\nnum = hoursInYear( 2017 )\n"
httpServer,"var createServer = httpServer()\nfunction onRequest( request, response ) {\nconsole.log( request.url );\nresponse.end( 'OK' );\n };\ncreateServer = httpServer( onRequest )\nvar opts = { 'port': 7331 };\ncreateServer = httpServer( opts )\n"
identity,"var v = identity( 3.14 )\n"
ifelse,"var z = ifelse( true, 1.0, -1.0 )\nz = ifelse( false, 1.0, -1.0 )\n"
ifelseAsync,"function predicate( clbk ) {\n setTimeout( onTimeout, 0 );\n function onTimeout() {\n     clbk( null, true );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nifelseAsync( predicate, 'beep', 'boop', done )\n"
ifthen,"function x() { return 1.0; };\nfunction y() { return -1.0; };\nvar z = ifthen( true, x, y )\nz = ifthen( false, x, y )\n"
ifthenAsync,"function predicate( clbk ) {\n setTimeout( onTimeout, 0 );\n function onTimeout() {\n     clbk( null, false );\n }\n };\nfunction x( clbk ) {\n setTimeout( onTimeout, 0 );\n function onTimeout() {\n     clbk( null, 'beep' );\n }\n };\nfunction y( clbk ) {\n setTimeout( onTimeout, 0 );\n function onTimeout() {\n     clbk( null, 'boop' );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nifthenAsync( predicate, x, y, done )\n"
imag,"var z = new Complex128( 5.0, 3.0 );\nvar im = imag( z )\n"
IMG_ACANTHUS_MOLLIS,"var img = IMG_ACANTHUS_MOLLIS()\n"
IMG_AIRPLANE_FROM_ABOVE,"var img = IMG_AIRPLANE_FROM_ABOVE()\n"
IMG_ALLIUM_OREOPHILUM,"var img = IMG_ALLIUM_OREOPHILUM()\n"
IMG_BLACK_CANYON,"var img = IMG_BLACK_CANYON()\n"
IMG_DUST_BOWL_HOME,"var img = IMG_DUST_BOWL_HOME()\n"
IMG_FRENCH_ALPINE_LANDSCAPE,"var img = IMG_FRENCH_ALPINE_LANDSCAPE()\n"
IMG_LOCOMOTION_HOUSE_CAT,"var img = IMG_LOCOMOTION_HOUSE_CAT()\n"
IMG_LOCOMOTION_NUDE_MALE,"var img = IMG_LOCOMOTION_NUDE_MALE()\n"
IMG_MARCH_PASTORAL,"var img = IMG_MARCH_PASTORAL()\n"
IMG_NAGASAKI_BOATS,"var img = IMG_NAGASAKI_BOATS()\n"
incrapcorr,"var accumulator = incrapcorr();\nvar ar = accumulator()\nar = accumulator( 2.0, 1.0 )\nar = accumulator( -5.0, 3.14 )\nar = accumulator()\n"
incrcount,"var accumulator = incrcount();\nvar v = accumulator()\nv = accumulator( 2.0 )\nv = accumulator( -5.0 )\nv = accumulator()\n"
incrcovariance,"var accumulator = incrcovariance();\nvar v = accumulator()\nv = accumulator( 2.0, 1.0 )\nv = accumulator( -5.0, 3.14 )\nv = accumulator()\n"
incrcovmat,"var accumulator = incrcovmat( 2 );\nvar out = accumulator()\nvar vec = ndarray( 'float64', 1 );\nvar buf = new Float64Array( 2 );\nvar shape = [ 2 ];\nvar strides = [ 1 ];\nvar v = vec( buf, shape, strides, 0, 'row-major' );\nv.set( 0, 2.0 );\nv.set( 1, 1.0 );\nout = accumulator( v )\nv.set( 0, -5.0 );\nv.set( 1, 3.14 );\nout = accumulator( v )\nout = accumulator()\n"
incrcv,"var accumulator = incrcv();\nvar cv = accumulator()\ncv = accumulator( 2.0 )\ncv = accumulator( 1.0 )\ncv = accumulator()\n"
increwmean,"var accumulator = increwmean( 0.5 );\nvar v = accumulator()\nv = accumulator( 2.0 )\nv = accumulator( -5.0 )\nv = accumulator()\n"
increwstdev,"var accumulator = increwstdev( 0.5 );\nvar s = accumulator()\ns = accumulator( 2.0 )\ns = accumulator( -5.0 )\ns = accumulator()\n"
increwvariance,"var accumulator = increwvariance( 0.5 );\nvar v = accumulator()\nv = accumulator( 2.0 )\nv = accumulator( -5.0 )\nv = accumulator()\n"
incrgmean,"var accumulator = incrgmean();\nvar v = accumulator()\nv = accumulator( 2.0 )\nv = accumulator( 5.0 )\nv = accumulator()\n"
incrgrubbs,"var acc = incrgrubbs();\nvar res = acc()\nfor ( var i = 0; i < 200; i++ ) {\n res = acc( base.random.normal( 10.0, 5.0 ) );\n };\nres.print()\n"
incrhmean,"var accumulator = incrhmean();\nvar v = accumulator()\nv = accumulator( 2.0 )\nv = accumulator( 5.0 )\nv = accumulator()\n"
incrkmeans,"var accumulator = incrkmeans( 5, 2 );\nvar vec = ndarray( 'float64', 1 );\nvar buf = new Float64Array( 2 );\nvar shape = [ 2 ];\nvar strides = [ 1 ];\nvar v = vec( buf, shape, strides, 0, 'row-major' );\nv.set( 0, 2.0 );\nv.set( 1, 1.0 );\nout = accumulator( v );\nv.set( 0, -5.0 );\nv.set( 1, 3.14 );\nout = accumulator( v );\n"
incrkurtosis,"var accumulator = incrkurtosis();\nvar v = accumulator( 2.0 )\nv = accumulator( 2.0 )\nv = accumulator( -4.0 )\nv = accumulator( -4.0 )\n"
incrmaape,"var accumulator = incrmaape();\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( 5.0, 2.0 )\nm = accumulator()\n"
incrmae,"var accumulator = incrmae();\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( -5.0, 2.0 )\nm = accumulator()\n"
incrmapcorr,"var accumulator = incrmapcorr( 3 );\nvar ar = accumulator()\nar = accumulator( 2.0, 1.0 )\nar = accumulator( -5.0, 3.14 )\nar = accumulator( 3.0, -1.0 )\nar = accumulator( 5.0, -9.5 )\nar = accumulator()\n"
incrmape,"var accumulator = incrmape();\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( 5.0, 2.0 )\nm = accumulator()\n"
incrmax,"var accumulator = incrmax();\nvar m = accumulator()\nm = accumulator( 3.14 )\nm = accumulator( -5.0 )\nm = accumulator( 10.1 )\nm = accumulator()\n"
incrmaxabs,"var accumulator = incrmaxabs();\nvar m = accumulator()\nm = accumulator( 3.14 )\nm = accumulator( -5.0 )\nm = accumulator( 10.1 )\nm = accumulator()\n"
incrmcovariance,"var accumulator = incrmcovariance( 3 );\nvar v = accumulator()\nv = accumulator( 2.0, 1.0 )\nv = accumulator( -5.0, 3.14 )\nv = accumulator( 3.0, -1.0 )\nv = accumulator( 5.0, -9.5 )\nv = accumulator()\n"
incrmcv,"var accumulator = incrmcv( 3 );\nvar cv = accumulator()\ncv = accumulator( 2.0 )\ncv = accumulator( 1.0 )\ncv = accumulator( 3.0 )\ncv = accumulator( 7.0 )\ncv = accumulator()\n"
incrmda,"var accumulator = incrmda();\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( -5.0, 4.0 )\nm = accumulator()\n"
incrme,"var accumulator = incrme();\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( -5.0, 2.0 )\nm = accumulator()\n"
incrmean,"var accumulator = incrmean();\nvar mu = accumulator()\nmu = accumulator( 2.0 )\nmu = accumulator( -5.0 )\nmu = accumulator()\n"
incrmeanabs,"var accumulator = incrmeanabs();\nvar mu = accumulator()\nmu = accumulator( 2.0 )\nmu = accumulator( -5.0 )\nmu = accumulator()\n"
incrmeanabs2,"var accumulator = incrmeanabs2();\nvar mu = accumulator()\nmu = accumulator( 2.0 )\nmu = accumulator( -5.0 )\nmu = accumulator()\n"
incrmeanstdev,"var accumulator = incrmeanstdev();\nvar ms = accumulator()\nms = accumulator( 2.0 )\nms = accumulator( -5.0 )\nms = accumulator( 3.0 )\nms = accumulator( 5.0 )\nms = accumulator()\n"
incrmeanvar,"var accumulator = incrmeanvar();\nvar mv = accumulator()\nmv = accumulator( 2.0 )\nmv = accumulator( -5.0 )\nmv = accumulator( 3.0 )\nmv = accumulator( 5.0 )\nmv = accumulator()\n"
incrmgmean,"var accumulator = incrmgmean( 3 );\nvar v = accumulator()\nv = accumulator( 2.0 )\nv = accumulator( 5.0 )\nv = accumulator( 3.0 )\nv = accumulator( 5.0 )\nv = accumulator()\n"
incrmgrubbs,"var acc = incrmgrubbs( 20 );\nvar res = acc()\nfor ( var i = 0; i < 200; i++ ) {\n res = acc( base.random.normal( 10.0, 5.0 ) );\n };\nres.print()\n"
incrmhmean,"var accumulator = incrmhmean( 3 );\nvar v = accumulator()\nv = accumulator( 2.0 )\nv = accumulator( 5.0 )\nv = accumulator( 3.0 )\nv = accumulator( 5.0 )\nv = accumulator()\n"
incrmidrange,"var accumulator = incrmidrange();\nvar v = accumulator()\nv = accumulator( 3.14 )\nv = accumulator( -5.0 )\nv = accumulator( 10.1 )\nv = accumulator()\n"
incrmin,"var accumulator = incrmin();\nvar m = accumulator()\nm = accumulator( 3.14 )\nm = accumulator( -5.0 )\nm = accumulator( 10.1 )\nm = accumulator()\n"
incrminabs,"var accumulator = incrminabs();\nvar m = accumulator()\nm = accumulator( 3.14 )\nm = accumulator( -5.0 )\nm = accumulator( 10.1 )\nm = accumulator()\n"
incrminmax,"var accumulator = incrminmax();\nvar mm = accumulator()\nmm = accumulator( 2.0 )\nmm = accumulator( -5.0 )\nmm = accumulator( 3.0 )\nmm = accumulator( 5.0 )\nmm = accumulator()\n"
incrminmaxabs,"var accumulator = incrminmaxabs();\nvar mm = accumulator()\nmm = accumulator( 2.0 )\nmm = accumulator( -5.0 )\nmm = accumulator( 3.0 )\nmm = accumulator( 5.0 )\nmm = accumulator()\n"
incrmmaape,"var accumulator = incrmmaape( 3 );\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( 5.0, 2.0 )\nm = accumulator( 3.0, 2.0 )\nm = accumulator( 2.0, 5.0 )\nm = accumulator()\n"
incrmmae,"var accumulator = incrmmae( 3 );\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( -5.0, 2.0 )\nm = accumulator( 3.0, 2.0 )\nm = accumulator( 5.0, -2.0 )\nm = accumulator()\n"
incrmmape,"var accumulator = incrmmape( 3 );\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( 5.0, 2.0 )\nm = accumulator( 3.0, 2.0 )\nm = accumulator( 2.0, 5.0 )\nm = accumulator()\n"
incrmmax,"var accumulator = incrmmax( 3 );\nvar m = accumulator()\nm = accumulator( 2.0 )\nm = accumulator( -5.0 )\nm = accumulator( 3.0 )\nm = accumulator( 5.0 )\nm = accumulator()\n"
incrmmaxabs,"var accumulator = incrmmaxabs( 3 );\nvar m = accumulator()\nm = accumulator( 2.0 )\nm = accumulator( -5.0 )\nm = accumulator( 3.0 )\nm = accumulator( 5.0 )\nm = accumulator()\n"
incrmmda,"var accumulator = incrmmda( 3 );\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( 5.0, 2.0 )\nm = accumulator( 3.0, 2.0 )\nm = accumulator( 4.0, 5.0 )\nm = accumulator()\n"
incrmme,"var accumulator = incrmme( 3 );\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( -5.0, 2.0 )\nm = accumulator( 3.0, 2.0 )\nm = accumulator( 5.0, -2.0 )\nm = accumulator()\n"
incrmmean,"var accumulator = incrmmean( 3 );\nvar mu = accumulator()\nmu = accumulator( 2.0 )\nmu = accumulator( -5.0 )\nmu = accumulator( 3.0 )\nmu = accumulator( 5.0 )\nmu = accumulator()\n"
incrmmeanabs,"var accumulator = incrmmeanabs( 3 );\nvar mu = accumulator()\nmu = accumulator( 2.0 )\nmu = accumulator( -5.0 )\nmu = accumulator( 3.0 )\nmu = accumulator( 5.0 )\nmu = accumulator()\n"
incrmmeanabs2,"var accumulator = incrmmeanabs2( 3 );\nvar m = accumulator()\nm = accumulator( 2.0 )\nm = accumulator( -5.0 )\nm = accumulator( 3.0 )\nm = accumulator( 5.0 )\nm = accumulator()\n"
incrmmeanstdev,"var accumulator = incrmmeanstdev( 3 );\nvar v = accumulator()\nv = accumulator( 2.0 )\nv = accumulator( -5.0 )\nv = accumulator( 3.0 )\nv = accumulator( 5.0 )\nv = accumulator()\n"
incrmmeanvar,"var accumulator = incrmmeanvar( 3 );\nvar v = accumulator()\nv = accumulator( 2.0 )\nv = accumulator( -5.0 )\nv = accumulator( 3.0 )\nv = accumulator( 5.0 )\nv = accumulator()\n"
incrmmidrange,"var accumulator = incrmmidrange( 3 );\nvar mr = accumulator()\nmr = accumulator( 2.0 )\nmr = accumulator( -5.0 )\nmr = accumulator( 3.0 )\nmr = accumulator( 5.0 )\nmr = accumulator()\n"
incrmmin,"var accumulator = incrmmin( 3 );\nvar m = accumulator()\nm = accumulator( 2.0 )\nm = accumulator( -5.0 )\nm = accumulator( 3.0 )\nm = accumulator( 5.0 )\nm = accumulator()\n"
incrmminabs,"var accumulator = incrmminabs( 3 );\nvar m = accumulator()\nm = accumulator( 2.0 )\nm = accumulator( -5.0 )\nm = accumulator( 3.0 )\nm = accumulator( 5.0 )\nm = accumulator()\n"
incrmminmax,"var accumulator = incrmminmax( 3 );\nvar mm = accumulator()\nmm = accumulator( 2.0 )\nmm = accumulator( -5.0 )\nmm = accumulator( 3.0 )\nmm = accumulator( 5.0 )\nmm = accumulator()\n"
incrmminmaxabs,"var accumulator = incrmminmaxabs( 3 );\nvar mm = accumulator()\nmm = accumulator( 2.0 )\nmm = accumulator( -5.0 )\nmm = accumulator( 3.0 )\nmm = accumulator( 5.0 )\nmm = accumulator()\n"
incrmmpe,"var accumulator = incrmmpe( 3 );\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( 5.0, 2.0 )\nm = accumulator( 3.0, 2.0 )\nm = accumulator( 2.0, 5.0 )\nm = accumulator()\n"
incrmmse,"var accumulator = incrmmse( 3 );\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( -5.0, 2.0 )\nm = accumulator( 3.0, 2.0 )\nm = accumulator( 5.0, -2.0 )\nm = accumulator()\n"
incrmpcorr,"var accumulator = incrmpcorr( 3 );\nvar r = accumulator()\nr = accumulator( 2.0, 1.0 )\nr = accumulator( -5.0, 3.14 )\nr = accumulator( 3.0, -1.0 )\nr = accumulator( 5.0, -9.5 )\nr = accumulator()\n"
incrmpcorr2,"var accumulator = incrmpcorr2( 3 );\nvar r2 = accumulator()\nr2 = accumulator( 2.0, 1.0 )\nr2 = accumulator( -5.0, 3.14 )\nr2 = accumulator( 3.0, -1.0 )\nr2 = accumulator( 5.0, -9.5 )\nr2 = accumulator()\n"
incrmpcorrdist,"var accumulator = incrmpcorrdist( 3 );\nvar d = accumulator()\nd = accumulator( 2.0, 1.0 )\nd = accumulator( -5.0, 3.14 )\nd = accumulator( 3.0, -1.0 )\nd = accumulator( 5.0, -9.5 )\nd = accumulator()\n"
incrmpe,"var accumulator = incrmpe();\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( 5.0, 2.0 )\nm = accumulator()\n"
incrmprod,"var accumulator = incrmprod( 3 );\nvar p = accumulator()\np = accumulator( 2.0 )\np = accumulator( -5.0 )\np = accumulator( 3.0 )\np = accumulator( 5.0 )\np = accumulator()\n"
incrmrange,"var accumulator = incrmrange( 3 );\nvar r = accumulator()\nr = accumulator( 2.0 )\nr = accumulator( -5.0 )\nr = accumulator( 3.0 )\nr = accumulator( 5.0 )\nr = accumulator()\n"
incrmrmse,"var accumulator = incrmrmse( 3 );\nvar r = accumulator()\nr = accumulator( 2.0, 3.0 )\nr = accumulator( -5.0, 2.0 )\nr = accumulator( 3.0, 2.0 )\nr = accumulator( 5.0, -2.0 )\nr = accumulator()\n"
incrmrss,"var accumulator = incrmrss( 3 );\nvar r = accumulator()\nr = accumulator( 2.0, 3.0 )\nr = accumulator( -5.0, 2.0 )\nr = accumulator( 3.0, 2.0 )\nr = accumulator( 5.0, -2.0 )\nr = accumulator()\n"
incrmse,"var accumulator = incrmse();\nvar m = accumulator()\nm = accumulator( 2.0, 3.0 )\nm = accumulator( -5.0, 2.0 )\nm = accumulator()\n"
incrmstdev,"var accumulator = incrmstdev( 3 );\nvar s = accumulator()\ns = accumulator( 2.0 )\ns = accumulator( -5.0 )\ns = accumulator( 3.0 )\ns = accumulator( 5.0 )\ns = accumulator()\n"
incrmsum,"var accumulator = incrmsum( 3 );\nvar s = accumulator()\ns = accumulator( 2.0 )\ns = accumulator( -5.0 )\ns = accumulator( 3.0 )\ns = accumulator( 5.0 )\ns = accumulator()\n"
incrmsumabs,"var accumulator = incrmsumabs( 3 );\nvar s = accumulator()\ns = accumulator( 2.0 )\ns = accumulator( -5.0 )\ns = accumulator( 3.0 )\ns = accumulator( -5.0 )\ns = accumulator()\n"
incrmsumabs2,"var accumulator = incrmsumabs2( 3 );\nvar s = accumulator()\ns = accumulator( 2.0 )\ns = accumulator( -5.0 )\ns = accumulator( 3.0 )\ns = accumulator( -5.0 )\ns = accumulator()\n"
incrmsummary,"var accumulator = incrmsummary( 3 );\nvar s = accumulator()\ns = accumulator( 2.0 )\ns = accumulator( -5.0 )\ns = accumulator()\n"
incrmsumprod,"var accumulator = incrmsumprod( 3 );\nvar s = accumulator()\ns = accumulator( 2.0, 3.0 )\ns = accumulator( -5.0, 2.0 )\ns = accumulator( 3.0, -2.0 )\ns = accumulator( 5.0, 3.0 )\ns = accumulator()\n"
incrmvariance,"var accumulator = incrmvariance( 3 );\nvar s2 = accumulator()\ns2 = accumulator( 2.0 )\ns2 = accumulator( -5.0 )\ns2 = accumulator( 3.0 )\ns2 = accumulator( 5.0 )\ns2 = accumulator()\n"
incrmvmr,"var accumulator = incrmvmr( 3 );\nvar F = accumulator()\nF = accumulator( 2.0 )\nF = accumulator( 1.0 )\nF = accumulator( 3.0 )\nF = accumulator( 7.0 )\nF = accumulator()\n"
incrpcorr,"var accumulator = incrpcorr();\nvar r = accumulator()\nr = accumulator( 2.0, 1.0 )\nr = accumulator( -5.0, 3.14 )\nr = accumulator()\n"
incrpcorr2,"var accumulator = incrpcorr2();\nvar r2 = accumulator()\nr2 = accumulator( 2.0, 1.0 )\nr2 = accumulator( -5.0, 3.14 )\nr2 = accumulator()\n"
incrpcorrdist,"var accumulator = incrpcorrdist();\nvar d = accumulator()\nd = accumulator( 2.0, 1.0 )\nd = accumulator( -5.0, 3.14 )\nd = accumulator()\n"
incrpcorrdistmat,"var accumulator = incrpcorrdistmat( 2 );\nvar out = accumulator()\nvar vec = ndarray( 'float64', 1 );\nvar buf = new Float64Array( 2 );\nvar shape = [ 2 ];\nvar strides = [ 1 ];\nvar v = vec( buf, shape, strides, 0, 'row-major' );\nv.set( 0, 2.0 );\nv.set( 1, 1.0 );\nout = accumulator( v )\nv.set( 0, -5.0 );\nv.set( 1, 3.14 );\nout = accumulator( v )\nout = accumulator()\n"
incrpcorrmat,"var accumulator = incrpcorrmat( 2 );\nvar out = accumulator()\nvar vec = ndarray( 'float64', 1 );\nvar buf = new Float64Array( 2 );\nvar shape = [ 2 ];\nvar strides = [ 1 ];\nvar v = vec( buf, shape, strides, 0, 'row-major' );\nv.set( 0, 2.0 );\nv.set( 1, 1.0 );\nout = accumulator( v )\nv.set( 0, -5.0 );\nv.set( 1, 3.14 );\nout = accumulator( v )\nout = accumulator()\n"
incrprod,"var accumulator = incrprod();\nvar v = accumulator()\nv = accumulator( 2.0 )\nv = accumulator( -5.0 )\nv = accumulator()\n"
incrrange,"var accumulator = incrrange();\nvar v = accumulator()\nv = accumulator( -2.0 )\nv = accumulator( 1.0 )\nv = accumulator( 3.0 )\nv = accumulator()\n"
incrrmse,"var accumulator = incrrmse();\nvar r = accumulator()\nr = accumulator( 2.0, 3.0 )\nr = accumulator( -5.0, 2.0 )\nr = accumulator()\n"
incrrss,"var accumulator = incrrss();\nvar r = accumulator()\nr = accumulator( 2.0, 3.0 )\nr = accumulator( -5.0, 2.0 )\nr = accumulator()\n"
incrskewness,"var accumulator = incrskewness();\nvar v = accumulator( 2.0 )\nv = accumulator( -5.0 )\nv = accumulator( -10.0 )\nv = accumulator()\n"
incrspace,"var arr = incrspace( 0, 11, 2 )\n"
incrstdev,"var accumulator = incrstdev();\nvar s = accumulator()\ns = accumulator( 2.0 )\ns = accumulator( -5.0 )\ns = accumulator()\n"
incrsum,"var accumulator = incrsum();\nvar s = accumulator()\ns = accumulator( 2.0 )\ns = accumulator( -5.0 )\ns = accumulator()\n"
incrsumabs,"var accumulator = incrsumabs();\nvar s = accumulator()\ns = accumulator( 2.0 )\ns = accumulator( -5.0 )\ns = accumulator()\n"
incrsumabs2,"var accumulator = incrsumabs2();\nvar s = accumulator()\ns = accumulator( 2.0 )\ns = accumulator( -5.0 )\ns = accumulator()\n"
incrsummary,"var accumulator = incrsummary();\nvar s = accumulator()\ns = accumulator( 2.0 )\ns = accumulator( -5.0 )\ns = accumulator()\n"
incrsumprod,"var accumulator = incrsumprod();\nvar s = accumulator()\ns = accumulator( 2.0, 3.0 )\ns = accumulator( -5.0, 2.0 )\ns = accumulator()\n"
incrvariance,"var accumulator = incrvariance();\nvar s2 = accumulator()\ns2 = accumulator( 2.0 )\ns2 = accumulator( -5.0 )\ns2 = accumulator()\n"
incrvmr,"var accumulator = incrvmr();\nvar D = accumulator()\nD = accumulator( 2.0 )\nD = accumulator( 1.0 )\nD = accumulator()\n"
incrwmean,"var accumulator = incrwmean();\nvar mu = accumulator()\nmu = accumulator( 2.0, 1.0 )\nmu = accumulator( 2.0, 0.5 )\nmu = accumulator( 3.0, 1.5 )\nmu = accumulator()\n"
ind2sub,"var d = [ 3, 3, 3 ];\nvar s = ind2sub( d, 17 )\nvar out = new Array( d.length );\ns = ind2sub( out, d, 17 )\nvar bool = ( s === out )\n"
indexOf,"var arr = [ 4, 3, 2, 1 ];\nvar idx = indexOf( arr, 3 )\narr = [ 4, 3, 2, 1 ];\nidx = indexOf( arr, 5 )\narr = [ 1, 2, 3, 4, 5, 2, 6 ];\nidx = indexOf( arr, 2, 3 )\narr = [ 1, 2, 3, 4, 2, 5 ];\nidx = indexOf( arr, 2, 10 )\narr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\nidx = indexOf( arr, 2, -4 )\nidx = indexOf( arr, 2, -1 )\narr = [ 1, 2, 3, 4, 5, 2, 6 ];\nidx = indexOf( arr, 2, -10 )\nvar str = 'bebop';\nidx = indexOf( str, 'o' )\n"
inherit,"function Foo() { return this; };\nFoo.prototype.beep = function beep() { return 'boop'; };\nfunction Bar() { Foo.call( this ); return this; };\ninherit( Bar, Foo );\nvar bar = new Bar();\nvar v = bar.beep()\n"
inheritedEnumerableProperties,"var props = inheritedEnumerableProperties( {} )\n"
inheritedEnumerablePropertySymbols,"var symbols = inheritedEnumerablePropertySymbols( [] )\n"
inheritedKeys,"var keys = inheritedKeys( {} )\n"
inheritedNonEnumerableProperties,"var props = inheritedNonEnumerableProperties( {} )\n"
inheritedNonEnumerablePropertyNames,"var keys = inheritedNonEnumerablePropertyNames( {} )\n"
inheritedNonEnumerablePropertySymbols,"var symbols = inheritedNonEnumerablePropertySymbols( [] )\n"
inheritedProperties,"var symbols = inheritedProperties( [] )\n"
inheritedPropertyDescriptor,"var desc = inheritedPropertyDescriptor( {}, 'toString' )\n"
inheritedPropertyDescriptors,"function Foo() { this.beep = 'boop'; return this; };\nFoo.prototype.foo = 'bar';\nvar obj = new Foo();\nvar desc = inheritedPropertyDescriptors( obj )\n"
inheritedPropertyNames,"var keys = inheritedPropertyNames( [] )\n"
inheritedPropertySymbols,"var symbols = inheritedPropertySymbols( [] )\n"
inheritedWritableProperties,"var props = inheritedWritableProperties( {} )\n"
inheritedWritablePropertyNames,"var keys = inheritedWritablePropertyNames( {} )\n"
inheritedWritablePropertySymbols,"var symbols = inheritedWritablePropertySymbols( [] )\n"
inmap,"function foo( v, i ) { return v * i; };\nvar arr = [ 1.0, 2.0, 3.0 ];\nvar out = inmap( arr, foo )\nvar bool = ( out === arr )\n"
inmapAsync,"function fcn( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, value*index );\n }\n };\nfunction done( error, collection ) {\n if ( error ) {\n     throw error;\n }\n console.log( collection === arr );\n console.log( collection );\n };\nvar arr = [ 3000, 2500, 1000 ];\ninmapAsync( arr, fcn, done )\nfunction fcn( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, value*index );\n }\n };\nfunction done( error, collection ) {\n if ( error ) {\n     throw error;\n }\n console.log( collection === arr );\n console.log( collection );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 3000, 2500, 1000 ];\ninmapAsync( arr, opts, fcn, done )\nfunction fcn( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, value*index );\n }\n };\nfunction done( error, collection ) {\n if ( error ) {\n     throw error;\n }\n console.log( collection === arr );\n console.log( collection );\n };\nvar opts = { 'series': true };\nvar arr = [ 3000, 2500, 1000 ];\ninmapAsync( arr, opts, fcn, done )\n"
inmapAsync.factory,"function fcn( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, value*index );\n }\n };\nvar opts = { 'series': true };\nvar f = inmapAsync.factory( opts, fcn );\nfunction done( error, collection ) {\n if ( error ) {\n     throw error;\n }\n console.log( collection === arr );\n console.log( collection );\n };\nvar arr = [ 3000, 2500, 1000 ];\nf( arr, done )\narr = [ 2000, 1500, 1000 ];\nf( arr, done )\n"
inmapRight,"function foo( v, i ) { console.log( '%s: %d', i, v ); return v * i; };\nvar arr = [ 1.0, 2.0, 3.0 ];\nvar out = inmapRight( arr, foo )\nvar bool = ( out === arr )\n"
inmapRightAsync,"function fcn( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, value*index );\n }\n };\nfunction done( error, collection ) {\n if ( error ) {\n     throw error;\n }\n console.log( collection === arr );\n console.log( collection );\n };\nvar arr = [ 1000, 2500, 3000 ];\ninmapRightAsync( arr, fcn, done )\nfunction fcn( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, value*index );\n }\n };\nfunction done( error, collection ) {\n if ( error ) {\n     throw error;\n }\n console.log( collection === arr );\n console.log( collection );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 1000, 2500, 3000 ];\ninmapRightAsync( arr, opts, fcn, done )\nfunction fcn( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, value*index );\n }\n };\nfunction done( error, collection ) {\n if ( error ) {\n     throw error;\n }\n console.log( collection === arr );\n console.log( collection );\n };\nvar opts = { 'series': true };\nvar arr = [ 1000, 2500, 3000 ];\ninmapRightAsync( arr, opts, fcn, done )\n"
inmapRightAsync.factory,"function fcn( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, value*index );\n }\n };\nvar opts = { 'series': true };\nvar f = inmapRightAsync.factory( opts, fcn );\nfunction done( error, collection ) {\n if ( error ) {\n     throw error;\n }\n console.log( collection === arr );\n console.log( collection );\n };\nvar arr = [ 1000, 2500, 3000 ];\nf( arr, done )\narr = [ 1000, 1500, 2000 ];\nf( arr, done )\n"
inspectSinkStream,"function clbk( chunk, idx ) { console.log( chunk.toString() ); };\nvar s = inspectSinkStream( clbk );\ns.write( 'a' );\ns.write( 'b' );\ns.write( 'c' );\ns.end();\n"
inspectSinkStream.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = inspectSinkStream.factory( opts );\nfunction clbk( chunk, idx ) { console.log( chunk.toString() ); };\nvar s = createStream( clbk );\ns.write( 'a' );\ns.write( 'b' );\ns.write( 'c' );\ns.end();\n"
inspectSinkStream.objectMode,"function clbk( chunk, idx ) { console.log( chunk.toString() ); };\nvar s = inspectSinkStream.objectMode( clbk );\ns.write( { 'value': 'a' } );\ns.write( { 'value': 'b' } );\ns.write( { 'value': 'c' } );\ns.end();\n"
inspectStream,"function clbk( chunk, idx ) { console.log( chunk.toString() ); };\nvar s = inspectStream( clbk );\ns.write( 'a' );\ns.write( 'b' );\ns.write( 'c' );\ns.end();\n"
inspectStream.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = inspectStream.factory( opts );\nfunction clbk( chunk, idx ) { console.log( chunk.toString() ); };\nvar s = createStream( clbk );\ns.write( 'a' );\ns.write( 'b' );\ns.write( 'c' );\ns.end();\n"
inspectStream.objectMode,"function clbk( chunk, idx ) { console.log( chunk.toString() ); };\nvar s = inspectStream.objectMode( clbk );\ns.write( { 'value': 'a' } );\ns.write( { 'value': 'b' } );\ns.write( { 'value': 'c' } );\ns.end();\n"
instanceOf,"var bool = instanceOf( [], Array )\nbool = instanceOf( {}, Object )\nbool = instanceOf( null, Object )\n"
INT8_MAX,"INT8_MAX\n"
INT8_MIN,"INT8_MIN\n"
INT8_NUM_BYTES,"INT8_NUM_BYTES\n"
Int8Array,"var arr = new Int8Array()\nvar arr = new Int8Array( 5 )\nvar arr1 = new Int32Array( [ 5, 5, 5 ] );\nvar arr2 = new Int8Array( arr1 )\nvar arr1 = [ 5.0, 5.0, 5.0 ];\nvar arr2 = new Int8Array( arr1 )\nvar buf = new ArrayBuffer( 4 );\nvar arr = new Int8Array( buf, 0, 4 )\n"
Int8Array.from,"function mapFcn( v ) { return v * 2; };\nvar arr = Int8Array.from( [ 1, 2 ], mapFcn )\n"
Int8Array.of,"var arr = Int8Array.of( 1, 2 )\n"
Int8Array.BYTES_PER_ELEMENT,"Int8Array.BYTES_PER_ELEMENT\n"
Int8Array.name,"Int8Array.name\n"
Int8Array.prototype.buffer,"var arr = new Int8Array( 5 );\narr.buffer\n"
Int8Array.prototype.byteLength,"var arr = new Int8Array( 5 );\narr.byteLength\n"
Int8Array.prototype.byteOffset,"var arr = new Int8Array( 5 );\narr.byteOffset\n"
Int8Array.prototype.BYTES_PER_ELEMENT,"var arr = new Int8Array( 5 );\narr.BYTES_PER_ELEMENT\n"
Int8Array.prototype.length,"var arr = new Int8Array( 5 );\narr.length\n"
Int8Array.prototype.copyWithin,"var arr = new Int8Array( [ 1, 2, 3, 4, 5 ] );\narr.copyWithin( 3, 0, 2 );\narr[ 3 ]\narr[ 4 ]\n"
Int8Array.prototype.entries,"var arr = new Int8Array( [ 1, 2 ] );\nit = arr.entries();\nit.next().value\nit.next().value\nit.next().done\n"
Int8Array.prototype.every,"var arr = new Int8Array( [ 1, 2 ] );\nfunction predicate( v ) { return ( v <= 1 ); };\narr.every( predicate )\n"
Int8Array.prototype.fill,"var arr = new Int8Array( [ 1, 2 ] );\narr.fill( 3 );\narr[ 0 ]\narr[ 1 ]\n"
Int8Array.prototype.filter,"var arr1 = new Int8Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 1 ); };\nvar arr2 = arr1.filter( predicate );\narr2.length\n"
Int8Array.prototype.find,"var arr = new Int8Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar v = arr.find( predicate )\n"
Int8Array.prototype.findIndex,"var arr = new Int8Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar idx = arr.findIndex( predicate )\n"
Int8Array.prototype.forEach,"var arr = new Int8Array( [ 3, 2, 1 ] );\nvar str = ' ';\nfunction fcn( v, i ) { str += i + ':' + v + ' '; };\narr.forEach( fcn );\nstr\n"
Int8Array.prototype.includes,"var arr = new Int8Array( [ 1, 2, 3 ] );\nvar bool = arr.includes( 4 )\nbool = arr.includes( 3 )\n"
Int8Array.prototype.indexOf,"var arr = new Int8Array( [ 1, 2, 3 ] );\nvar idx = arr.indexOf( 4 )\nidx = arr.indexOf( 3 )\n"
Int8Array.prototype.join,"var arr = new Int8Array( [ 1, 2, 3 ] );\narr.join( '|' )\n"
Int8Array.prototype.keys,"var arr = new Int8Array( [ 1, 2 ] );\nit = arr.keys();\nit.next().value\nit.next().value\nit.next().done\n"
Int8Array.prototype.lastIndexOf,"var arr = new Int8Array( [ 1, 0, 2, 0, 1 ] );\nvar idx = arr.lastIndexOf( 3 )\nidx = arr.lastIndexOf( 0 )\n"
Int8Array.prototype.map,"var arr1 = new Int8Array( [ 1, 2, 3 ] );\nfunction fcn( v ) { return v * 2; };\nvar arr2 = arr1.map( fcn );\n"
Int8Array.prototype.reduce,"var arr = new Int8Array( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduce( fcn, 0 )\n"
Int8Array.prototype.reduceRight,"var arr = new Int8Array( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduceRight( fcn, 0 )\n"
Int8Array.prototype.reverse,"var arr = new Int8Array( [ 1, 2, 3 ] )\narr.reverse()\n"
Int8Array.prototype.set,"var arr = new Int8Array( [ 1, 2, 3 ] );\narr.set( [ 4, 4 ], 1 );\narr[ 1 ]\narr[ 2 ]\n"
Int8Array.prototype.slice,"var arr1 = new Int8Array( [ 1, 2, 3 ] );\nvar arr2 = arr1.slice( 1 );\narr2.length\narr2[ 0 ]\narr2[ 1 ]\n"
Int8Array.prototype.some,"var arr = new Int8Array( [ 1, 2 ] );\nfunction predicate( v ) { return ( v > 1 ); };\narr.some( predicate )\n"
Int8Array.prototype.sort,"var arr = new Int8Array( [ 1, 2, 0, 2, 1 ] );\narr.sort()\n"
Int8Array.prototype.subarray,"var arr1 = new Int8Array( [ 1, 2, 3, 4, 5 ] );\nvar arr2 = arr1.subarray( 2 )\n"
Int8Array.prototype.toLocaleString,"var arr = new Int8Array( [ 1, 2, 3 ] );\narr.toLocaleString()\n"
Int8Array.prototype.toString,"var arr = new Int8Array( [ 1, 2, 3 ] );\narr.toString()\n"
Int8Array.prototype.values,"var arr = new Int8Array( [ 1, 2 ] );\nit = arr.values();\nit.next().value\nit.next().value\nit.next().done\n"
INT16_MAX,"INT16_MAX\n"
INT16_MIN,"INT16_MIN\n"
INT16_NUM_BYTES,"INT16_NUM_BYTES\n"
Int16Array,"var arr = new Int16Array()\nvar arr = new Int16Array( 5 )\nvar arr1 = new Int32Array( [ 5, 5, 5 ] );\nvar arr2 = new Int16Array( arr1 )\nvar arr1 = [ 5.0, 5.0, 5.0 ];\nvar arr2 = new Int16Array( arr1 )\nvar buf = new ArrayBuffer( 8 );\nvar arr = new Int16Array( buf, 0, 4 )\n"
Int16Array.from,"function mapFcn( v ) { return v * 2; };\nvar arr = Int16Array.from( [ 1, 2 ], mapFcn )\n"
Int16Array.of,"var arr = Int16Array.of( 1, 2 )\n"
Int16Array.BYTES_PER_ELEMENT,"Int16Array.BYTES_PER_ELEMENT\n"
Int16Array.name,"Int16Array.name\n"
Int16Array.prototype.buffer,"var arr = new Int16Array( 5 );\narr.buffer\n"
Int16Array.prototype.byteLength,"var arr = new Int16Array( 5 );\narr.byteLength\n"
Int16Array.prototype.byteOffset,"var arr = new Int16Array( 5 );\narr.byteOffset\n"
Int16Array.prototype.BYTES_PER_ELEMENT,"var arr = new Int16Array( 5 );\narr.BYTES_PER_ELEMENT\n"
Int16Array.prototype.length,"var arr = new Int16Array( 5 );\narr.length\n"
Int16Array.prototype.copyWithin,"var arr = new Int16Array( [ 1, 2, 3, 4, 5 ] );\narr.copyWithin( 3, 0, 2 );\narr[ 3 ]\narr[ 4 ]\n"
Int16Array.prototype.entries,"var arr = new Int16Array( [ 1, 2 ] );\nit = arr.entries();\nit.next().value\nit.next().value\nit.next().done\n"
Int16Array.prototype.every,"var arr = new Int16Array( [ 1, 2 ] );\nfunction predicate( v ) { return ( v <= 1 ); };\narr.every( predicate )\n"
Int16Array.prototype.fill,"var arr = new Int16Array( [ 1, 2 ] );\narr.fill( 3 );\narr[ 0 ]\narr[ 1 ]\n"
Int16Array.prototype.filter,"var arr1 = new Int16Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 1 ); };\nvar arr2 = arr1.filter( predicate );\narr2.length\n"
Int16Array.prototype.find,"var arr = new Int16Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar v = arr.find( predicate )\n"
Int16Array.prototype.findIndex,"var arr = new Int16Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar idx = arr.findIndex( predicate )\n"
Int16Array.prototype.forEach,"var arr = new Int16Array( [ 3, 2, 1 ] );\nvar str = ' ';\nfunction fcn( v, i ) { str += i + ':' + v + ' '; };\narr.forEach( fcn );\nstr\n"
Int16Array.prototype.includes,"var arr = new Int16Array( [ 1, 2, 3 ] );\nvar bool = arr.includes( 4 )\nbool = arr.includes( 3 )\n"
Int16Array.prototype.indexOf,"var arr = new Int16Array( [ 1, 2, 3 ] );\nvar idx = arr.indexOf( 4 )\nidx = arr.indexOf( 3 )\n"
Int16Array.prototype.join,"var arr = new Int16Array( [ 1, 2, 3 ] );\narr.join( '|' )\n"
Int16Array.prototype.keys,"var arr = new Int16Array( [ 1, 2 ] );\nit = arr.keys();\nit.next().value\nit.next().value\nit.next().done\n"
Int16Array.prototype.lastIndexOf,"var arr = new Int16Array( [ 1, 0, 2, 0, 1 ] );\nvar idx = arr.lastIndexOf( 3 )\nidx = arr.lastIndexOf( 0 )\n"
Int16Array.prototype.map,"var arr1 = new Int16Array( [ 1, 2, 3 ] );\nfunction fcn( v ) { return v * 2; };\nvar arr2 = arr1.map( fcn );\n"
Int16Array.prototype.reduce,"var arr = new Int16Array( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduce( fcn, 0 )\n"
Int16Array.prototype.reduceRight,"var arr = new Int16Array( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduceRight( fcn, 0 )\n"
Int16Array.prototype.reverse,"var arr = new Int16Array( [ 1, 2, 3 ] )\narr.reverse()\n"
Int16Array.prototype.set,"var arr = new Int16Array( [ 1, 2, 3 ] );\narr.set( [ 4, 4 ], 1 );\narr[ 1 ]\narr[ 2 ]\n"
Int16Array.prototype.slice,"var arr1 = new Int16Array( [ 1, 2, 3 ] );\nvar arr2 = arr1.slice( 1 );\narr2.length\narr2[ 0 ]\narr2[ 1 ]\n"
Int16Array.prototype.some,"var arr = new Int16Array( [ 1, 2 ] );\nfunction predicate( v ) { return ( v > 1 ); };\narr.some( predicate )\n"
Int16Array.prototype.sort,"var arr = new Int16Array( [ 1, 2, 0, 2, 1 ] );\narr.sort()\n"
Int16Array.prototype.subarray,"var arr1 = new Int16Array( [ 1, 2, 3, 4, 5 ] );\nvar arr2 = arr1.subarray( 2 )\n"
Int16Array.prototype.toLocaleString,"var arr = new Int16Array( [ 1, 2, 3 ] );\narr.toLocaleString()\n"
Int16Array.prototype.toString,"var arr = new Int16Array( [ 1, 2, 3 ] );\narr.toString()\n"
Int16Array.prototype.values,"var arr = new Int16Array( [ 1, 2 ] );\nit = arr.values();\nit.next().value\nit.next().value\nit.next().done\n"
INT32_MAX,"INT32_MAX\n"
INT32_MIN,"INT32_MIN\n"
INT32_NUM_BYTES,"INT32_NUM_BYTES\n"
Int32Array,"var arr = new Int32Array()\nvar arr = new Int32Array( 5 )\nvar arr1 = new Int16Array( [ 5, 5, 5 ] );\nvar arr2 = new Int32Array( arr1 )\nvar arr1 = [ 5.0, 5.0, 5.0 ];\nvar arr2 = new Int32Array( arr1 )\nvar buf = new ArrayBuffer( 16 );\nvar arr = new Int32Array( buf, 0, 4 )\n"
Int32Array.from,"function mapFcn( v ) { return v * 2; };\nvar arr = Int32Array.from( [ 1, 2 ], mapFcn )\n"
Int32Array.of,"var arr = Int32Array.of( 1, 2 )\n"
Int32Array.BYTES_PER_ELEMENT,"Int32Array.BYTES_PER_ELEMENT\n"
Int32Array.name,"Int32Array.name\n"
Int32Array.prototype.buffer,"var arr = new Int32Array( 5 );\narr.buffer\n"
Int32Array.prototype.byteLength,"var arr = new Int32Array( 5 );\narr.byteLength\n"
Int32Array.prototype.byteOffset,"var arr = new Int32Array( 5 );\narr.byteOffset\n"
Int32Array.prototype.BYTES_PER_ELEMENT,"var arr = new Int32Array( 5 );\narr.BYTES_PER_ELEMENT\n"
Int32Array.prototype.length,"var arr = new Int32Array( 5 );\narr.length\n"
Int32Array.prototype.copyWithin,"var arr = new Int32Array( [ 1, 2, 3, 4, 5 ] );\narr.copyWithin( 3, 0, 2 );\narr[ 3 ]\narr[ 4 ]\n"
Int32Array.prototype.entries,"var arr = new Int32Array( [ 1, 2 ] );\nit = arr.entries();\nit.next().value\nit.next().value\nit.next().done\n"
Int32Array.prototype.every,"var arr = new Int32Array( [ 1, 2 ] );\nfunction predicate( v ) { return ( v <= 1 ); };\narr.every( predicate )\n"
Int32Array.prototype.fill,"var arr = new Int32Array( [ 1, 2 ] );\narr.fill( 3 );\narr[ 0 ]\narr[ 1 ]\n"
Int32Array.prototype.filter,"var arr1 = new Int32Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 1 ); };\nvar arr2 = arr1.filter( predicate );\narr2.length\n"
Int32Array.prototype.find,"var arr = new Int32Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar v = arr.find( predicate )\n"
Int32Array.prototype.findIndex,"var arr = new Int32Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar idx = arr.findIndex( predicate )\n"
Int32Array.prototype.forEach,"var arr = new Int32Array( [ 3, 2, 1 ] );\nvar str = ' ';\nfunction fcn( v, i ) { str += i + ':' + v + ' '; };\narr.forEach( fcn );\nstr\n"
Int32Array.prototype.includes,"var arr = new Int32Array( [ 1, 2, 3 ] );\nvar bool = arr.includes( 4 )\nbool = arr.includes( 3 )\n"
Int32Array.prototype.indexOf,"var arr = new Int32Array( [ 1, 2, 3 ] );\nvar idx = arr.indexOf( 4 )\nidx = arr.indexOf( 3 )\n"
Int32Array.prototype.join,"var arr = new Int32Array( [ 1, 2, 3 ] );\narr.join( '|' )\n"
Int32Array.prototype.keys,"var arr = new Int32Array( [ 1, 2 ] );\nit = arr.keys();\nit.next().value\nit.next().value\nit.next().done\n"
Int32Array.prototype.lastIndexOf,"var arr = new Int32Array( [ 1, 0, 2, 0, 1 ] );\nvar idx = arr.lastIndexOf( 3 )\nidx = arr.lastIndexOf( 0 )\n"
Int32Array.prototype.map,"var arr1 = new Int32Array( [ 1, 2, 3 ] );\nfunction fcn( v ) { return v * 2; };\nvar arr2 = arr1.map( fcn );\n"
Int32Array.prototype.reduce,"var arr = new Int32Array( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduce( fcn, 0 )\n"
Int32Array.prototype.reduceRight,"var arr = new Int32Array( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduceRight( fcn, 0 )\n"
Int32Array.prototype.reverse,"var arr = new Int32Array( [ 1, 2, 3 ] )\narr.reverse()\n"
Int32Array.prototype.set,"var arr = new Int32Array( [ 1, 2, 3 ] );\narr.set( [ 4, 4 ], 1 );\narr[ 1 ]\narr[ 2 ]\n"
Int32Array.prototype.slice,"var arr1 = new Int32Array( [ 1, 2, 3 ] );\nvar arr2 = arr1.slice( 1 );\narr2.length\narr2[ 0 ]\narr2[ 1 ]\n"
Int32Array.prototype.some,"var arr = new Int32Array( [ 1, 2 ] );\nfunction predicate( v ) { return ( v > 1 ); };\narr.some( predicate )\n"
Int32Array.prototype.sort,"var arr = new Int32Array( [ 1, 2, 0, 2, 1 ] );\narr.sort()\n"
Int32Array.prototype.subarray,"var arr1 = new Int32Array( [ 1, 2, 3, 4, 5 ] );\nvar arr2 = arr1.subarray( 2 )\n"
Int32Array.prototype.toLocaleString,"var arr = new Int32Array( [ 1, 2, 3 ] );\narr.toLocaleString()\n"
Int32Array.prototype.toString,"var arr = new Int32Array( [ 1, 2, 3 ] );\narr.toString()\n"
Int32Array.prototype.values,"var arr = new Int32Array( [ 1, 2 ] );\nit = arr.values();\nit.next().value\nit.next().value\nit.next().done\n"
IS_BIG_ENDIAN,"IS_BIG_ENDIAN\n"
IS_BROWSER,"IS_BROWSER\n"
IS_DARWIN,"IS_DARWIN\n"
IS_ELECTRON,"IS_ELECTRON\n"
IS_ELECTRON_MAIN,"IS_ELECTRON_MAIN\n"
IS_ELECTRON_RENDERER,"IS_ELECTRON_RENDERER\n"
IS_LITTLE_ENDIAN,"IS_LITTLE_ENDIAN\n"
IS_NODE,"IS_NODE\n"
IS_WEB_WORKER,"IS_WEB_WORKER\n"
IS_WINDOWS,"IS_WINDOWS\n"
isAbsolutePath,"var bool = isAbsolutePath( 'C:\\foo\\bar\\baz' )\nbool = isAbsolutePath( '/foo/bar/baz' )\n"
isAbsolutePath.posix,"var bool = isAbsolutePath.posix( '/foo/bar/baz' )\nbool = isAbsolutePath.posix( 'foo/bar/baz' )\n"
isAbsolutePath.win32,"var bool = isAbsolutePath.win32( 'C:\\foo\\bar\\baz' )\nbool = isAbsolutePath.win32( 'foo\\bar\\baz' )\n"
isAccessorProperty,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.get = function getter() { return 'beep'; };\ndefineProperty( obj, 'beep', desc );\nvar bool = isAccessorProperty( obj, 'boop' )\nbool = isAccessorProperty( obj, 'beep' )\n"
isAccessorPropertyIn,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.get = function getter() { return 'beep'; };\ndefineProperty( obj, 'beep', desc );\nvar bool = isAccessorPropertyIn( obj, 'boop' )\nbool = isAccessorPropertyIn( obj, 'beep' )\n"
isAlphagram,"var out = isAlphagram( 'beep' )\nout = isAlphagram( 'zba' )\nout = isAlphagram( '' )\n"
isAlphaNumeric,"var bool = isAlphaNumeric( 'abc0123456789' )\nbool = isAlphaNumeric( 'abcdef' )\nbool = isAlphaNumeric( '0xff' )\nbool = isAlphaNumeric( '' )\n"
isAnagram,"var str1 = 'I am a weakish speller';\nvar str2 = 'William Shakespeare';\nvar bool = isAnagram( str1, str2 )\nbool = isAnagram( 'bat', 'tabba' )\n"
isArguments,"function foo() { return arguments; };\nvar bool = isArguments( foo() )\nbool = isArguments( [] )\n"
isArray,"var bool = isArray( [] )\nbool = isArray( {} )\n"
isArrayArray,"var bool = isArrayArray( [ [], [] ] )\nbool = isArrayArray( [ {}, {} ] )\nbool = isArrayArray( [] )\n"
isArrayBuffer,"var bool = isArrayBuffer( new ArrayBuffer( 10 ) )\nbool = isArrayBuffer( [] )\n"
isArrayLength,"var bool = isArrayLength( 5 )\nbool = isArrayLength( 2.0e200 )\nbool = isArrayLength( -3.14 )\nbool = isArrayLength( null )\n"
isArrayLike,"var bool = isArrayLike( [] )\nbool = isArrayLike( { 'length': 10 } )\nbool = isArrayLike( 'beep' )\nbool = isArrayLike( null )\n"
isArrayLikeObject,"var bool = isArrayLikeObject( [] )\nbool = isArrayLikeObject( { 'length': 10 } )\nbool = isArrayLikeObject( 'beep' )\n"
isASCII,"var str = 'beep boop';\nvar bool = isASCII( str )\nbool = isASCII( fromCodePoint( 130 ) )\n"
isBetween,"var bool = isBetween( 3.14, 3.0, 4.0 )\nbool = isBetween( 3.0, 3.0, 4.0 )\nbool = isBetween( 4.0, 3.0, 4.0 )\nbool = isBetween( 3.0, 3.14, 4.0 )\nbool = isBetween( 3.14, 3.14, 4.0, 'open', 'closed' )\nbool = isBetween( 3.14, 3.0, 3.14, 'closed', 'open' )\n"
isBetweenArray,"var arr = [ 3.0, 3.14, 4.0 ];\nvar bool = isBetweenArray( arr, 3.0, 4.0 )\nbool = isBetweenArray( arr, 3.14, 4.0 )\nbool = isBetweenArray( arr, 3.0, 3.14 )\nbool = isBetweenArray( arr, 3.0, 4.0, 'open', 'closed' )\nbool = isBetweenArray( arr, 3.0, 4.0, 'closed', 'open' )\n"
isBinaryString,"var bool = isBinaryString( '1000101' )\nbool = isBinaryString( 'beep' )\nbool = isBinaryString( '' )\n"
isBoolean,"var bool = isBoolean( false )\nbool = isBoolean( new Boolean( false ) )\n"
isBoolean.isPrimitive,"var bool = isBoolean.isPrimitive( true )\nbool = isBoolean.isPrimitive( false )\nbool = isBoolean.isPrimitive( new Boolean( true ) )\n"
isBoolean.isObject,"var bool = isBoolean.isObject( true )\nbool = isBoolean.isObject( new Boolean( false ) )\n"
isBooleanArray,"var bool = isBooleanArray( [ true, false, true ] )\nbool = isBooleanArray( [ true, 'abc', false ] )\n"
isBooleanArray.primitives,"var bool = isBooleanArray.primitives( [ true, false ] )\nbool = isBooleanArray.primitives( [ false, new Boolean( true ) ] )\n"
isBooleanArray.objects,"var bool = isBooleanArray.objects( [ new Boolean( false ), true ] )\nbool = isBooleanArray.objects( [ new Boolean( false ), new Boolean( true ) ] )\n"
isBoxedPrimitive,"var bool = isBoxedPrimitive( new Boolean( false ) )\nbool = isBoxedPrimitive( true )\n"
isBuffer,"var bool = isBuffer( new Buffer( 'beep' ) )\nbool = isBuffer( new Buffer( [ 1, 2, 3, 4 ] ) )\nbool = isBuffer( {} )\nbool = isBuffer( [] )\n"
isCapitalized,"var bool = isCapitalized( 'Hello' )\nbool = isCapitalized( 'world' )\n"
isCentrosymmetricMatrix,"var mat = ndarray( 'generic', 2 );\nvar M = mat( [ 2, 1, 1, 2 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\nvar bool = isCentrosymmetricMatrix( M )\nbool = isCentrosymmetricMatrix( [ 1, 2, 3, 4 ] )\nbool = isCentrosymmetricMatrix( 3.14 )\nbool = isCentrosymmetricMatrix( {} )\n"
isCircular,"var obj = { 'beep': 'boop' };\nobj.self = obj;\nvar bool = isCircular( obj )\nbool = isCircular( {} )\nbool = isCircular( null )\n"
isCircularArray,"var arr = [ 1, 2, 3 ];\narr.push( arr );\nvar bool = isCircularArray( arr )\nbool = isCircularArray( [] )\nbool = isCircularArray( null )\n"
isCircularPlainObject,"var obj = { 'beep': 'boop' };\nobj.self = obj;\nvar bool = isCircularPlainObject( obj )\nbool = isCircularPlainObject( {} )\nbool = isCircularPlainObject( null )\n"
isCollection,"var bool = isCollection( [] )\nbool = isCollection( { 'length': 0 } )\nbool = isCollection( {} )\n"
isComplex,"var bool = isComplex( new Complex64( 2.0, 2.0 ) )\nbool = isComplex( new Complex128( 3.0, 1.0 ) )\nbool = isComplex( 3.14 )\nbool = isComplex( {} )\n"
isComplex64,"var bool = isComplex64( new Complex64( 2.0, 2.0 ) )\nbool = isComplex64( new Complex128( 3.0, 1.0 ) )\nbool = isComplex64( 3.14 )\nbool = isComplex64( {} )\n"
isComplex64Array,"var bool = isComplex64Array( new Complex64Array( 10 ) )\nbool = isComplex64Array( [] )\n"
isComplex128,"var bool = isComplex128( new Complex128( 3.0, 1.0 ) )\nbool = isComplex128( new Complex64( 2.0, 2.0 ) )\nbool = isComplex128( 3.14 )\nbool = isComplex128( {} )\n"
isComplex128Array,"var bool = isComplex128Array( new Complex128Array( 10 ) )\nbool = isComplex128Array( [] )\n"
isComplexLike,"var bool = isComplexLike( new Complex64( 2.0, 2.0 ) )\nbool = isComplexLike( new Complex128( 3.0, 1.0 ) )\nbool = isComplexLike( 3.14 )\nbool = isComplexLike( {} )\n"
isComplexTypedArray,"var bool = isComplexTypedArray( new Complex64Array( 10 ) )\n"
isConfigurableProperty,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = true;\ndesc.writable = true;\ndesc.value = true;\ndefineProperty( obj, 'beep', desc );\nvar bool = isConfigurableProperty( obj, 'boop' )\nbool = isConfigurableProperty( obj, 'beep' )\n"
isConfigurablePropertyIn,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = true;\ndesc.writable = true;\ndesc.value = true;\ndefineProperty( obj, 'beep', desc );\nvar bool = isConfigurablePropertyIn( obj, 'boop' )\nbool = isConfigurablePropertyIn( obj, 'beep' )\n"
isDataProperty,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.get = function getter() { return 'beep'; };\ndefineProperty( obj, 'beep', desc );\nvar bool = isDataProperty( obj, 'boop' )\nbool = isDataProperty( obj, 'beep' )\n"
isDataPropertyIn,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.get = function getter() { return 'beep'; };\ndefineProperty( obj, 'beep', desc );\nvar bool = isDataPropertyIn( obj, 'boop' )\nbool = isDataPropertyIn( obj, 'beep' )\n"
isDateObject,"var bool = isDateObject( new Date() )\nbool = isDateObject( '2017-01-01' )\n"
isDigitString,"var bool = isDigitString( '0123456789' )\nbool = isDigitString( 'abcdef' )\nbool = isDigitString( '0xff' )\nbool = isDigitString( '' )\n"
isEmailAddress,"var bool = isEmailAddress( 'beep@boop.com' )\nbool = isEmailAddress( 'beep' )\nbool = isEmailAddress( null )\n"
isEmptyArray,"var bool = isEmptyArray( [] )\nbool = isEmptyArray( [ 1, 2, 3 ] )\nbool = isEmptyArray( {} )\n"
isEmptyObject,"var bool = isEmptyObject( {} )\nbool = isEmptyObject( { 'beep': 'boop' } )\nbool = isEmptyObject( [] )\n"
isEmptyString,"var bool = isEmptyString( '' )\nbool = isEmptyString( new String( '' ) )\nbool = isEmptyString( 'beep' )\nbool = isEmptyString( [] )\n"
isEmptyString.isPrimitive,"var bool = isEmptyString.isPrimitive( '' )\nbool = isEmptyString.isPrimitive( new String( '' ) )\n"
isEmptyString.isObject,"var bool = isEmptyString.isObject( new String( '' ) )\nbool = isEmptyString.isObject( '' )\n"
isEnumerableProperty,"var beep = { 'boop': true };\nvar bool = isEnumerableProperty( beep, 'boop' )\nbool = isEnumerableProperty( beep, 'hasOwnProperty' )\n"
isEnumerablePropertyIn,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = true;\ndesc.enumerable = false;\ndesc.writable = true;\ndesc.value = true;\ndefineProperty( obj, 'beep', desc );\nvar bool = isEnumerablePropertyIn( obj, 'boop' )\nbool = isEnumerablePropertyIn( obj, 'beep' )\n"
isError,"var bool = isError( new Error( 'beep' ) )\nbool = isError( {} )\n"
isEvalError,"var bool = isEvalError( new EvalError( 'beep' ) )\nbool = isEvalError( {} )\n"
isEven,"var bool = isEven( 4.0 )\nbool = isEven( new Number( 4.0 ) )\nbool = isEven( 3.0 )\nbool = isEven( -3.14 )\nbool = isEven( null )\n"
isEven.isPrimitive,"var bool = isEven.isPrimitive( -4.0 )\nbool = isEven.isPrimitive( new Number( -4.0 ) )\n"
isEven.isObject,"var bool = isEven.isObject( 4.0 )\nbool = isEven.isObject( new Number( 4.0 ) )\n"
isFalsy,"var bool = isFalsy( false )\nbool = isFalsy( '' )\nbool = isFalsy( 0 )\nbool = isFalsy( null )\nbool = isFalsy( void 0 )\nbool = isFalsy( NaN )\nbool = isFalsy( {} )\nbool = isFalsy( [] )\n"
isFalsyArray,"var bool = isFalsyArray( [ null, '' ] )\nbool = isFalsyArray( [ {}, [] ] )\nbool = isFalsyArray( [] )\n"
isFinite,"var bool = isFinite( 5.0 )\nbool = isFinite( new Number( 5.0 ) )\nbool = isFinite( 1.0/0.0 )\nbool = isFinite( null )\n"
isFinite.isPrimitive,"var bool = isFinite.isPrimitive( -3.0 )\nbool = isFinite.isPrimitive( new Number( -3.0 ) )\n"
isFinite.isObject,"var bool = isFinite.isObject( 3.0 )\nbool = isFinite.isObject( new Number( 3.0 ) )\n"
isFiniteArray,"var bool = isFiniteArray( [ -3.0, new Number(0.0), 2.0 ] )\nbool = isFiniteArray( [ -3.0, 1.0/0.0 ] )\n"
isFiniteArray.primitives,"var bool = isFiniteArray.primitives( [ -1.0, 10.0 ] )\nbool = isFiniteArray.primitives( [ -1.0, 0.0, 5.0 ] )\nbool = isFiniteArray.primitives( [ -3.0, new Number(-1.0) ] )\n"
isFiniteArray.objects,"var bool = isFiniteArray.objects( [ new Number(1.0), new Number(3.0) ] )\nbool = isFiniteArray.objects( [ -1.0, 0.0, 3.0 ] )\nbool = isFiniteArray.objects( [ 3.0, new Number(-1.0) ] )\n"
isFloat32Array,"var bool = isFloat32Array( new Float32Array( 10 ) )\nbool = isFloat32Array( [] )\n"
isFloat64Array,"var bool = isFloat64Array( new Float64Array( 10 ) )\nbool = isFloat64Array( [] )\n"
isFunction,"function beep() {};\nvar bool = isFunction( beep )\nbool = isFunction( {} )\n"
isFunctionArray,"function beep() {};\nfunction boop() {};\nvar bool = isFunctionArray( [ beep, boop ] )\nbool = isFunctionArray( [ {}, beep ] )\nbool = isFunctionArray( [] )\n"
isGeneratorObject,"function* generateID() {\n var idx = 0;\n while ( idx < idx+1 ) {\n     yield idx;\n     idx += 1;\n }\n };\nvar bool = isGeneratorObject( generateID() )\nbool = isGeneratorObject( generateID )\nbool = isGeneratorObject( {} )\nbool = isGeneratorObject( null )\n"
isGeneratorObjectLike,"var obj = {\n 'next': function noop() {},\n 'return': function noop() {},\n 'throw': function noop() {}\n };\nvar bool = isGeneratorObjectLike( obj )\nbool = isGeneratorObjectLike( {} )\nbool = isGeneratorObjectLike( null )\n"
isHexString,"var bool = isHexString( '0123456789abcdefABCDEF' )\nbool = isHexString( '0xffffff' )\nbool = isHexString( 'x' )\nbool = isHexString( '' )\n"
isInfinite,"var bool = isInfinite( 1.0/0.0 )\nbool = isInfinite( new Number( -1.0/0.0 ) )\nbool = isInfinite( 5.0 )\nbool = isInfinite( '1.0/0.0' )\n"
isInfinite.isPrimitive,"var bool = isInfinite.isPrimitive( -1.0/0.0 )\nbool = isInfinite.isPrimitive( new Number( -1.0/0.0 ) )\n"
isInfinite.isObject,"var bool = isInfinite.isObject( 1.0/0.0 )\nbool = isInfinite.isObject( new Number( 1.0/0.0 ) )\n"
isInheritedProperty,"var beep = { 'boop': true };\nvar bool = isInheritedProperty( beep, 'boop' )\nbool = isInheritedProperty( beep, 'toString' )\nbool = isInheritedProperty( beep, 'bop' )\n"
isInt8Array,"var bool = isInt8Array( new Int8Array( 10 ) )\nbool = isInt8Array( [] )\n"
isInt16Array,"var bool = isInt16Array( new Int16Array( 10 ) )\nbool = isInt16Array( [] )\n"
isInt32Array,"var bool = isInt32Array( new Int32Array( 10 ) )\nbool = isInt32Array( [] )\n"
isInteger,"var bool = isInteger( 5.0 )\nbool = isInteger( new Number( 5.0 ) )\nbool = isInteger( -3.14 )\nbool = isInteger( null )\n"
isInteger.isPrimitive,"var bool = isInteger.isPrimitive( -3.0 )\nbool = isInteger.isPrimitive( new Number( -3.0 ) )\n"
isInteger.isObject,"var bool = isInteger.isObject( 3.0 )\nbool = isInteger.isObject( new Number( 3.0 ) )\n"
isIntegerArray,"var bool = isIntegerArray( [ -3.0, new Number(0.0), 2.0 ] )\nbool = isIntegerArray( [ -3.0, '3.0' ] )\n"
isIntegerArray.primitives,"var bool = isIntegerArray.primitives( [ -1.0, 10.0 ] )\nbool = isIntegerArray.primitives( [ -1.0, 0.0, 5.0 ] )\nbool = isIntegerArray.primitives( [ -3.0, new Number(-1.0) ] )\n"
isIntegerArray.objects,"var bool = isIntegerArray.objects( [ new Number(1.0), new Number(3.0) ] )\nbool = isIntegerArray.objects( [ -1.0, 0.0, 3.0 ] )\nbool = isIntegerArray.objects( [ 3.0, new Number(-1.0) ] )\n"
isIterableLike,"var bool = isIterableLike( [ 1, 2, 3 ] )\nbool = isIterableLike( {} )\nbool = isIterableLike( null )\n"
isIteratorLike,"var obj = {\n 'next': function noop() {}\n };\nvar bool = isIteratorLike( obj )\nbool = isIteratorLike( {} )\nbool = isIteratorLike( null )\n"
isJSON,"var bool = isJSON( '{\"a\":5}' )\nbool = isJSON( '{a\":5}' )\n"
isLeapYear,"var bool = isLeapYear( new Date() )\nbool = isLeapYear( 1996 )\nbool = isLeapYear( 2001 )\n"
isLowercase,"var bool = isLowercase( 'hello' )\nbool = isLowercase( 'World' )\n"
isMatrixLike,"var M = {};\nM.data = [ 0, 0, 0, 0 ];\nM.ndims = 2;\nM.shape = [ 2, 2 ];\nM.strides = [ 2, 1 ];\nM.offset = 0;\nM.order = 'row-major';\nM.dtype = 'generic';\nM.length = 4;\nM.flags = {};\nM.get = function get( i, j ) {};\nM.set = function set( i, j ) {};\nvar bool = isMatrixLike( M )\nbool = isMatrixLike( [ 1, 2, 3, 4 ] )\nbool = isMatrixLike( 3.14 )\nbool = isMatrixLike( {} )\n"
isMethod,"var beep = { 'boop': function beep() { return 'beep'; } };\nvar bool = isMethod( beep, 'boop' )\nbool = isMethod( beep, 'toString' )\n"
isMethodIn,"var beep = { 'boop': true };\nvar bool = isMethodIn( beep, 'toString' )\nbool = isMethodIn( beep, 'boop' )\nbool = isMethodIn( beep, 'bop' )\n"
isNamedTypedTupleLike,"var Point = namedtypedtuple( [ 'x', 'y' ] );\nvar p = new Point();\nvar bool = isNamedTypedTupleLike( p )\nbool = isNamedTypedTupleLike( [ 1, 2, 3, 4 ] )\nbool = isNamedTypedTupleLike( 3.14 )\nbool = isNamedTypedTupleLike( {} )\n"
isnan,"var bool = isnan( NaN )\nbool = isnan( new Number( NaN ) )\nbool = isnan( 3.14 )\nbool = isnan( null )\n"
isnan.isPrimitive,"var bool = isnan.isPrimitive( NaN )\nbool = isnan.isPrimitive( 3.14 )\nbool = isnan.isPrimitive( new Number( NaN ) )\n"
isnan.isObject,"var bool = isnan.isObject( NaN )\nbool = isnan.isObject( new Number( NaN ) )\n"
isNaNArray,"var bool = isNaNArray( [ NaN, NaN, NaN ] )\nbool = isNaNArray( [ NaN, 2 ] )\n"
isNaNArray.primitives,"var bool = isNaNArray.primitives( [ NaN, new Number( NaN ) ] )\nbool = isNaNArray.primitives( [ NaN, NaN, NaN ] )\n"
isNaNArray.objects,"var bool = isNaNArray.objects( [ new Number( NaN ), new Number( NaN ) ] )\nbool = isNaNArray.objects( [ NaN, new Number( NaN ), new Number( NaN ) ] )\nbool = isNaNArray.objects( [ NaN, NaN, NaN ] )\n"
isNativeFunction,"var bool = isNativeFunction( Date )\nfunction beep() {};\nbool = isNativeFunction( beep )\nbool = isNativeFunction( {} )\n"
isndarrayLike,"var M = {};\nM.data = [ 0, 0, 0, 0 ];\nM.ndims = 2;\nM.shape = [ 2, 2 ];\nM.strides = [ 2, 1 ];\nM.offset = 0;\nM.order = 'row-major';\nM.dtype = 'generic';\nM.length = 4;\nM.flags = {};\nM.get = function get( i, j ) {};\nM.set = function set( i, j ) {};\nvar bool = isndarrayLike( M )\nbool = isndarrayLike( [ 1, 2, 3, 4 ] )\nbool = isndarrayLike( 3.14 )\nbool = isndarrayLike( {} )\n"
isNegativeInteger,"var bool = isNegativeInteger( -5.0 )\nbool = isNegativeInteger( new Number( -5.0 ) )\nbool = isNegativeInteger( 5.0 )\nbool = isNegativeInteger( -3.14 )\nbool = isNegativeInteger( null )\n"
isNegativeInteger.isPrimitive,"var bool = isNegativeInteger.isPrimitive( -3.0 )\nbool = isNegativeInteger.isPrimitive( new Number( -3.0 ) )\n"
isNegativeInteger.isObject,"var bool = isNegativeInteger.isObject( -3.0 )\nbool = isNegativeInteger.isObject( new Number( -3.0 ) )\n"
isNegativeIntegerArray,"var bool = isNegativeIntegerArray( [ -3.0, new Number(-3.0) ] )\nbool = isNegativeIntegerArray( [ -3.0, '-3.0' ] )\n"
isNegativeIntegerArray.primitives,"var bool = isNegativeIntegerArray.primitives( [ -1.0, -10.0 ] )\nbool = isNegativeIntegerArray.primitives( [ -1.0, 0.0, -10.0 ] )\nbool = isNegativeIntegerArray.primitives( [ -3.0, new Number(-1.0) ] )\n"
isNegativeIntegerArray.objects,"var bool = isNegativeIntegerArray.objects( [ new Number(-1.0), new Number(-10.0) ] )\nbool = isNegativeIntegerArray.objects( [ -1.0, 0.0, -10.0 ] )\nbool = isNegativeIntegerArray.objects( [ -3.0, new Number(-1.0) ] )\n"
isNegativeNumber,"var bool = isNegativeNumber( -5.0 )\nbool = isNegativeNumber( new Number( -5.0 ) )\nbool = isNegativeNumber( -3.14 )\nbool = isNegativeNumber( 5.0 )\nbool = isNegativeNumber( null )\n"
isNegativeNumber.isPrimitive,"var bool = isNegativeNumber.isPrimitive( -3.0 )\nbool = isNegativeNumber.isPrimitive( new Number( -3.0 ) )\n"
isNegativeNumber.isObject,"var bool = isNegativeNumber.isObject( -3.0 )\nbool = isNegativeNumber.isObject( new Number( -3.0 ) )\n"
isNegativeNumberArray,"var bool = isNegativeNumberArray( [ -3.0, new Number(-3.0) ] )\nbool = isNegativeNumberArray( [ -3.0, '-3.0' ] )\n"
isNegativeNumberArray.primitives,"var bool = isNegativeNumberArray.primitives( [ -1.0, -10.0 ] )\nbool = isNegativeNumberArray.primitives( [ -1.0, 0.0, -10.0 ] )\nbool = isNegativeNumberArray.primitives( [ -3.0, new Number(-1.0) ] )\n"
isNegativeNumberArray.objects,"var bool = isNegativeNumberArray.objects( [ new Number(-1.0), new Number(-10.0) ] )\nbool = isNegativeNumberArray.objects( [ -1.0, 0.0, -10.0 ] )\nbool = isNegativeNumberArray.objects( [ -3.0, new Number(-1.0) ] )\n"
isNegativeZero,"var bool = isNegativeZero( -0.0 )\nbool = isNegativeZero( new Number( -0.0 ) )\nbool = isNegativeZero( -3.14 )\nbool = isNegativeZero( 0.0 )\nbool = isNegativeZero( null )\n"
isNegativeZero.isPrimitive,"var bool = isNegativeZero.isPrimitive( -0.0 )\nbool = isNegativeZero.isPrimitive( new Number( -0.0 ) )\n"
isNegativeZero.isObject,"var bool = isNegativeZero.isObject( -0.0 )\nbool = isNegativeZero.isObject( new Number( -0.0 ) )\n"
isNodeBuiltin,"var bool = isNodeBuiltin( 'cluster' )\nbool = isNodeBuiltin( 'crypto' )\nbool = isNodeBuiltin( 'fs-extra' )\nbool = isNodeBuiltin( '' )\n"
isNodeDuplexStreamLike,"var Stream = require( 'stream' ).Duplex;\ns = new Stream();\nvar bool = isNodeDuplexStreamLike( s )\nbool = isNodeDuplexStreamLike( {} )\n"
isNodeReadableStreamLike,"var Stream = require( 'stream' ).Readable;\ns = new Stream();\nvar bool = isNodeReadableStreamLike( s )\nbool = isNodeReadableStreamLike( {} )\n"
isNodeREPL,"var bool = isNodeREPL()\n"
isNodeStreamLike,"var Stream = require( 'stream' ).Stream;\ns = new Stream();\nvar bool = isNodeStreamLike( s )\nbool = isNodeStreamLike( {} )\n"
isNodeTransformStreamLike,"var Stream = require( 'stream' ).Transform;\ns = new Stream();\nvar bool = isNodeTransformStreamLike( s )\nbool = isNodeTransformStreamLike( {} )\n"
isNodeWritableStreamLike,"var Stream = require( 'stream' ).Writable;\ns = new Stream();\nvar bool = isNodeWritableStreamLike( s )\nbool = isNodeWritableStreamLike( {} )\n"
isNonConfigurableProperty,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = true;\ndesc.writable = true;\ndesc.value = 'beep';\ndefineProperty( obj, 'beep', desc );\nvar bool = isNonConfigurableProperty( obj, 'boop' )\nbool = isNonConfigurableProperty( obj, 'beep' )\n"
isNonConfigurablePropertyIn,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = true;\ndesc.writable = true;\ndesc.value = true;\ndefineProperty( obj, 'beep', desc );\nvar bool = isNonConfigurablePropertyIn( obj, 'boop' )\nbool = isNonConfigurablePropertyIn( obj, 'beep' )\n"
isNonEnumerableProperty,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.writable = true;\ndesc.value = 'beep';\ndefineProperty( obj, 'beep', desc );\nvar bool = isNonEnumerableProperty( obj, 'boop' )\nbool = isNonEnumerableProperty( obj, 'beep' )\n"
isNonEnumerablePropertyIn,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = true;\ndesc.enumerable = false;\ndesc.writable = true;\ndesc.value = true;\ndefineProperty( obj, 'beep', desc );\nvar bool = isNonEnumerablePropertyIn( obj, 'boop' )\nbool = isNonEnumerablePropertyIn( obj, 'beep' )\n"
isNonNegativeInteger,"var bool = isNonNegativeInteger( 5.0 )\nbool = isNonNegativeInteger( new Number( 5.0 ) )\nbool = isNonNegativeInteger( 3.14 )\nbool = isNonNegativeInteger( -5.0 )\nbool = isNonNegativeInteger( null )\n"
isNonNegativeInteger.isPrimitive,"var bool = isNonNegativeInteger.isPrimitive( 3.0 )\nbool = isNonNegativeInteger.isPrimitive( new Number( 3.0 ) )\n"
isNonNegativeInteger.isObject,"var bool = isNonNegativeInteger.isObject( 3.0 )\nbool = isNonNegativeInteger.isObject( new Number( 3.0 ) )\n"
isNonNegativeIntegerArray,"var bool = isNonNegativeIntegerArray( [ 3.0, new Number(3.0) ] )\nbool = isNonNegativeIntegerArray( [ 3.0, '3.0' ] )\n"
isNonNegativeIntegerArray.primitives,"var bool = isNonNegativeIntegerArray.primitives( [ 1.0, 0.0, 10.0 ] )\nbool = isNonNegativeIntegerArray.primitives( [ 3.0, new Number(1.0) ] )\n"
isNonNegativeIntegerArray.objects,"var bool = isNonNegativeIntegerArray.objects( [ new Number(1.0), new Number(10.0) ] )\nbool = isNonNegativeIntegerArray.objects( [ 1.0, 0.0, 10.0 ] )\nbool = isNonNegativeIntegerArray.objects( [ 3.0, new Number(1.0) ] )\n"
isNonNegativeNumber,"var bool = isNonNegativeNumber( 5.0 )\nbool = isNonNegativeNumber( new Number( 5.0 ) )\nbool = isNonNegativeNumber( 3.14 )\nbool = isNonNegativeNumber( -5.0 )\nbool = isNonNegativeNumber( null )\n"
isNonNegativeNumber.isPrimitive,"var bool = isNonNegativeNumber.isPrimitive( 3.0 )\nbool = isNonNegativeNumber.isPrimitive( new Number( 3.0 ) )\n"
isNonNegativeNumber.isObject,"var bool = isNonNegativeNumber.isObject( 3.0 )\nbool = isNonNegativeNumber.isObject( new Number( 3.0 ) )\n"
isNonNegativeNumberArray,"var bool = isNonNegativeNumberArray( [ 3.0, new Number(3.0) ] )\nbool = isNonNegativeNumberArray( [ 3.0, '3.0' ] )\n"
isNonNegativeNumberArray.primitives,"var bool = isNonNegativeNumberArray.primitives( [ 1.0, 0.0, 10.0 ] )\nbool = isNonNegativeNumberArray.primitives( [ 3.0, new Number(1.0) ] )\n"
isNonNegativeNumberArray.objects,"var bool = isNonNegativeNumberArray.objects( [ new Number(1.0), new Number(10.0) ] )\nbool = isNonNegativeNumberArray.objects( [ 1.0, 0.0, 10.0 ] )\nbool = isNonNegativeNumberArray.objects( [ 3.0, new Number(1.0) ] )\n"
isNonPositiveInteger,"var bool = isNonPositiveInteger( -5.0 )\nbool = isNonPositiveInteger( new Number( -5.0 ) )\nbool = isNonPositiveInteger( 5.0 )\nbool = isNonPositiveInteger( -3.14 )\nbool = isNonPositiveInteger( null )\n"
isNonPositiveInteger.isPrimitive,"var bool = isNonPositiveInteger.isPrimitive( -3.0 )\nbool = isNonPositiveInteger.isPrimitive( new Number( -3.0 ) )\n"
isNonPositiveInteger.isObject,"var bool = isNonPositiveInteger.isObject( -3.0 )\nbool = isNonPositiveInteger.isObject( new Number( -3.0 ) )\n"
isNonPositiveIntegerArray,"var bool = isNonPositiveIntegerArray( [ -3.0, new Number(-3.0) ] )\nbool = isNonPositiveIntegerArray( [ -3.0, '-3.0' ] )\n"
isNonPositiveIntegerArray.primitives,"var bool = isNonPositiveIntegerArray.primitives( [ -1.0, 0.0, -10.0 ] )\nbool = isNonPositiveIntegerArray.primitives( [ -3.0, new Number(-1.0) ] )\n"
isNonPositiveIntegerArray.objects,"var bool = isNonPositiveIntegerArray.objects( [ new Number(-1.0), new Number(-10.0) ] )\nbool = isNonPositiveIntegerArray.objects( [ -1.0, 0.0, -10.0 ] )\nbool = isNonPositiveIntegerArray.objects( [ -3.0, new Number(-1.0) ] )\n"
isNonPositiveNumber,"var bool = isNonPositiveNumber( -5.0 )\nbool = isNonPositiveNumber( new Number( -5.0 ) )\nbool = isNonPositiveNumber( -3.14 )\nbool = isNonPositiveNumber( 5.0 )\nbool = isNonPositiveNumber( null )\n"
isNonPositiveNumber.isPrimitive,"var bool = isNonPositiveNumber.isPrimitive( -3.0 )\nbool = isNonPositiveNumber.isPrimitive( new Number( -3.0 ) )\n"
isNonPositiveNumber.isObject,"var bool = isNonPositiveNumber.isObject( -3.0 )\nbool = isNonPositiveNumber.isObject( new Number( -3.0 ) )\n"
isNonPositiveNumberArray,"var bool = isNonPositiveNumberArray( [ -3.0, new Number(-3.0) ] )\nbool = isNonPositiveNumberArray( [ -3.0, '-3.0' ] )\n"
isNonPositiveNumberArray.primitives,"var bool = isNonPositiveNumberArray.primitives( [ -1.0, 0.0, -10.0 ] )\nbool = isNonPositiveNumberArray.primitives( [ -3.0, new Number(-1.0) ] )\n"
isNonPositiveNumberArray.objects,"var bool = isNonPositiveNumberArray.objects( [ new Number(-1.0), new Number(-10.0) ] )\nbool = isNonPositiveNumberArray.objects( [ -1.0, 0.0, -10.0 ] )\nbool = isNonPositiveNumberArray.objects( [ -3.0, new Number(-1.0) ] )\n"
isNonSymmetricMatrix,"var mat = ndarray( 'generic', 2 );\nvar M = mat( [ 1, 2, 3, 4 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\nvar bool = isNonSymmetricMatrix( M )\nbool = isNonSymmetricMatrix( [ 1, 2, 3, 4 ] )\nbool = isNonSymmetricMatrix( 3.14 )\nbool = isNonSymmetricMatrix( {} )\n"
isNull,"var bool = isNull( null )\nbool = isNull( true )\n"
isNullArray,"var bool = isNullArray( [ null, null, null ] )\nbool = isNullArray( [ NaN, 2, null ] )\n"
isNumber,"var bool = isNumber( 3.14 )\nbool = isNumber( new Number( 3.14 ) )\nbool = isNumber( NaN )\nbool = isNumber( null )\n"
isNumber.isPrimitive,"var bool = isNumber.isPrimitive( 3.14 )\nbool = isNumber.isPrimitive( NaN )\nbool = isNumber.isPrimitive( new Number( 3.14 ) )\n"
isNumber.isObject,"var bool = isNumber.isObject( 3.14 )\nbool = isNumber.isObject( new Number( 3.14 ) )\n"
isNumberArray,"var bool = isNumberArray( [ 1, 2, 3 ] )\nbool = isNumberArray( [ '1', 2, 3 ] )\n"
isNumberArray.primitives,"var arr = [ 1, 2, 3 ];\nvar bool = isNumberArray.primitives( arr )\narr = [ 1, new Number( 2 ) ];\nbool = isNumberArray.primitives( arr )\n"
isNumberArray.objects,"var arr = [ new Number( 1 ), new Number( 2 ) ];\nvar bool = isNumberArray.objects( arr )\narr = [ new Number( 1 ), 2 ];\nbool = isNumberArray.objects( arr )\n"
isNumericArray,"var bool = isNumericArray( new Int8Array( 10 ) )\nbool = isNumericArray( [ 1, 2, 3 ] )\nbool = isNumericArray( [ '1', '2', '3' ] )\n"
isObject,"var bool = isObject( {} )\nbool = isObject( true )\n"
isObjectArray,"var bool = isObjectArray( [ {}, new Number(3.0) ] )\nbool = isObjectArray( [ {}, { 'beep': 'boop' } ] )\nbool = isObjectArray( [ {}, '3.0' ] )\n"
isObjectLike,"var bool = isObjectLike( {} )\nbool = isObjectLike( [] )\nbool = isObjectLike( null )\n"
isOdd,"var bool = isOdd( 5.0 )\nbool = isOdd( new Number( 5.0 ) )\nbool = isOdd( 4.0 )\nbool = isOdd( new Number( 4.0 ) )\nbool = isOdd( -3.14 )\nbool = isOdd( null )\n"
isOdd.isPrimitive,"var bool = isOdd.isPrimitive( -5.0 )\nbool = isOdd.isPrimitive( new Number( -5.0 ) )\n"
isOdd.isObject,"var bool = isOdd.isObject( 5.0 )\nbool = isOdd.isObject( new Number( 5.0 ) )\n"
isoWeeksInYear,"var num = isoWeeksInYear()\nnum = isoWeeksInYear( 2015 )\nnum = isoWeeksInYear( 2017 )\n"
isPersymmetricMatrix,"var mat = ndarray( 'generic', 2 );\nvar M = mat( [ 1, 2, 3, 1 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\nvar bool = isPersymmetricMatrix( M )\nbool = isPersymmetricMatrix( [ 1, 2, 3, 4 ] )\nbool = isPersymmetricMatrix( 3.14 )\nbool = isPersymmetricMatrix( {} )\n"
isPlainObject,"var bool = isPlainObject( {} )\nbool = isPlainObject( null )\n"
isPlainObjectArray,"var bool = isPlainObjectArray( [ {}, { 'beep': 'boop' } ] )\nbool = isPlainObjectArray( [ {}, new Number(3.0) ] )\nbool = isPlainObjectArray( [ {}, '3.0' ] )\n"
isPositiveInteger,"var bool = isPositiveInteger( 5.0 )\nbool = isPositiveInteger( new Number( 5.0 ) )\nbool = isPositiveInteger( 3.14 )\nbool = isPositiveInteger( -5.0 )\nbool = isPositiveInteger( null )\n"
isPositiveInteger.isPrimitive,"var bool = isPositiveInteger.isPrimitive( 3.0 )\nbool = isPositiveInteger.isPrimitive( new Number( 3.0 ) )\n"
isPositiveInteger.isObject,"var bool = isPositiveInteger.isObject( 3.0 )\nbool = isPositiveInteger.isObject( new Number( 3.0 ) )\n"
isPositiveIntegerArray,"var bool = isPositiveIntegerArray( [ 3.0, new Number(3.0) ] )\nbool = isPositiveIntegerArray( [ 3.0, '3.0' ] )\n"
isPositiveIntegerArray.primitives,"var bool = isPositiveIntegerArray.primitives( [ 1.0, 10.0 ] )\nbool = isPositiveIntegerArray.primitives( [ 1.0, 0.0, 10.0 ] )\nbool = isPositiveIntegerArray.primitives( [ 3.0, new Number(1.0) ] )\n"
isPositiveIntegerArray.objects,"var bool = isPositiveIntegerArray.objects( [ new Number(1.0), new Number(10.0) ] )\nbool = isPositiveIntegerArray.objects( [ 1.0, 2.0, 10.0 ] )\nbool = isPositiveIntegerArray.objects( [ 3.0, new Number(1.0) ] )\n"
isPositiveNumber,"var bool = isPositiveNumber( 5.0 )\nbool = isPositiveNumber( new Number( 5.0 ) )\nbool = isPositiveNumber( 3.14 )\nbool = isPositiveNumber( -5.0 )\nbool = isPositiveNumber( null )\n"
isPositiveNumber.isPrimitive,"var bool = isPositiveNumber.isPrimitive( 3.0 )\nbool = isPositiveNumber.isPrimitive( new Number( 3.0 ) )\n"
isPositiveNumber.isObject,"var bool = isPositiveNumber.isObject( 3.0 )\nbool = isPositiveNumber.isObject( new Number( 3.0 ) )\n"
isPositiveNumberArray,"var bool = isPositiveNumberArray( [ 3.0, new Number(3.0) ] )\nbool = isPositiveNumberArray( [ 3.0, '3.0' ] )\n"
isPositiveNumberArray.primitives,"var bool = isPositiveNumberArray.primitives( [ 1.0, 10.0 ] )\nbool = isPositiveNumberArray.primitives( [ 1.0, 0.0, 10.0 ] )\nbool = isPositiveNumberArray.primitives( [ 3.0, new Number(1.0) ] )\n"
isPositiveNumberArray.objects,"var bool = isPositiveNumberArray.objects( [ new Number(1.0), new Number(10.0) ] )\nbool = isPositiveNumberArray.objects( [ 1.0, 2.0, 10.0 ] )\nbool = isPositiveNumberArray.objects( [ 3.0, new Number(1.0) ] )\n"
isPositiveZero,"var bool = isPositiveZero( 0.0 )\nbool = isPositiveZero( new Number( 0.0 ) )\nbool = isPositiveZero( -3.14 )\nbool = isPositiveZero( -0.0 )\nbool = isPositiveZero( null )\n"
isPositiveZero.isPrimitive,"var bool = isPositiveZero.isPrimitive( 0.0 )\nbool = isPositiveZero.isPrimitive( new Number( 0.0 ) )\n"
isPositiveZero.isObject,"var bool = isPositiveZero.isObject( 0.0 )\nbool = isPositiveZero.isObject( new Number( 0.0 ) )\n"
isPrimitive,"var bool = isPrimitive( true )\nbool = isPrimitive( {} )\n"
isPrimitiveArray,"var bool = isPrimitiveArray( [ '3', 2, null ] )\nbool = isPrimitiveArray( [ {}, 2, 1 ] )\nbool = isPrimitiveArray( [ new String('abc'), '3.0' ] )\n"
isPRNGLike,"var bool = isPRNGLike( base.random.randu )\nbool = isPRNGLike( [ 1, 2, 3, 4 ] )\nbool = isPRNGLike( 3.14 )\nbool = isPRNGLike( {} )\n"
isProbability,"var bool = isProbability( 0.5 )\nbool = isProbability( new Number( 0.5 ) )\nbool = isProbability( 3.14 )\nbool = isProbability( -5.0 )\nbool = isProbability( null )\n"
isProbability.isPrimitive,"var bool = isProbability.isPrimitive( 0.3 )\nbool = isProbability.isPrimitive( new Number( 0.3 ) )\n"
isProbability.isObject,"var bool = isProbability.isObject( 0.77 )\nbool = isProbability.isObject( new Number( 0.77 ) )\n"
isProbabilityArray,"var bool = isProbabilityArray( [ 0.5, new Number(0.8) ] )\nbool = isProbabilityArray( [ 0.8, 1.2 ] )\nbool = isProbabilityArray( [ 0.8, '0.2' ] )\n"
isProbabilityArray.primitives,"var bool = isProbabilityArray.primitives( [ 1.0, 0.0, 0.5 ] )\nbool = isProbabilityArray.primitives( [ 0.3, new Number(0.4) ] )\n"
isProbabilityArray.objects,"var bool = isProbabilityArray.objects( [ new Number(0.7), new Number(1.0) ] )\nbool = isProbabilityArray.objects( [ 1.0, 0.0, new Number(0.7) ] )\n"
isPrototypeOf,"function Foo() { return this; };\nfunction Bar() { return this; };\ninherit( Bar, Foo );\nvar bar = new Bar();\nvar bool = isPrototypeOf( bar, Foo.prototype )\n"
isRangeError,"var bool = isRangeError( new RangeError( 'beep' ) )\nbool = isRangeError( {} )\n"
isReadableProperty,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.set = function setter( v ) { obj.boop = v; };\ndefineProperty( obj, 'beep', desc );\nvar bool = isReadableProperty( obj, 'boop' )\nbool = isReadableProperty( obj, 'beep' )\n"
isReadablePropertyIn,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.set = function setter( v ) { obj.boop = v; };\ndefineProperty( obj, 'beep', desc );\nvar bool = isReadablePropertyIn( obj, 'boop' )\nbool = isReadablePropertyIn( obj, 'beep' )\n"
isReadOnlyProperty,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = true;\ndesc.writable = false;\ndesc.value = true;\ndefineProperty( obj, 'beep', desc );\nvar bool = isReadOnlyProperty( obj, 'boop' )\nbool = isReadOnlyProperty( obj, 'beep' )\n"
isReadOnlyPropertyIn,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = true;\ndesc.writable = false;\ndesc.value = true;\ndefineProperty( obj, 'beep', desc );\nvar bool = isReadOnlyPropertyIn( obj, 'boop' )\nbool = isReadOnlyPropertyIn( obj, 'beep' )\n"
isReadWriteProperty,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.set = function setter( v ) { obj.boop = v; };\ndefineProperty( obj, 'beep', desc );\nvar bool = isReadWriteProperty( obj, 'boop' )\nbool = isReadWriteProperty( obj, 'beep' )\n"
isReadWritePropertyIn,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.set = function setter( v ) { obj.boop = v; };\ndefineProperty( obj, 'beep', desc );\nvar bool = isReadWritePropertyIn( obj, 'boop' )\nbool = isReadWritePropertyIn( obj, 'beep' )\n"
isReferenceError,"var bool = isReferenceError( new ReferenceError( 'beep' ) )\nbool = isReferenceError( {} )\n"
isRegExp,"var bool = isRegExp( /\.+/ )\nbool = isRegExp( {} )\n"
isRegExpString,"var bool = isRegExpString( '/beep/' )\nbool = isRegExpString( 'beep' )\nbool = isRegExpString( '' )\nbool = isRegExpString( null )\n"
isRelativePath,"var bool = isRelativePath( 'foo\\bar\\baz' )\nbool = isRelativePath( './foo/bar/baz' )\n"
isRelativePath.posix,"var bool = isRelativePath.posix( './foo/bar/baz' )\nbool = isRelativePath.posix( '/foo/../bar/baz' )\n"
isRelativePath.win32,"var bool = isRelativePath( 'foo\\bar\\baz' )\nbool = isRelativePath( 'C:\\foo\\..\\bar\\baz' )\n"
isSafeInteger,"var bool = isSafeInteger( 5.0 )\nbool = isSafeInteger( new Number( 5.0 ) )\nbool = isSafeInteger( 2.0e200 )\nbool = isSafeInteger( -3.14 )\nbool = isSafeInteger( null )\n"
isSafeInteger.isPrimitive,"var bool = isSafeInteger.isPrimitive( -3.0 )\nbool = isSafeInteger.isPrimitive( new Number( -3.0 ) )\n"
isSafeInteger.isObject,"var bool = isSafeInteger.isObject( 3.0 )\nbool = isSafeInteger.isObject( new Number( 3.0 ) )\n"
isSafeIntegerArray,"var arr = [ -3.0, new Number(0.0), 2.0 ];\nvar bool = isSafeIntegerArray( arr )\narr = [ -3.0, '3.0' ];\nbool = isSafeIntegerArray( arr )\n"
isSafeIntegerArray.primitives,"var arr = [ -1.0, 10.0 ];\nvar bool = isSafeIntegerArray.primitives( arr )\narr = [ -1.0, 0.0, 5.0 ];\nbool = isSafeIntegerArray.primitives( arr )\narr = [ -3.0, new Number(-1.0) ];\nbool = isSafeIntegerArray.primitives( arr )\n"
isSafeIntegerArray.objects,"var arr = [ new Number(1.0), new Number(3.0) ];\nvar bool = isSafeIntegerArray.objects( arr )\narr = [ -1.0, 0.0, 3.0 ];\nbool = isSafeIntegerArray.objects( arr )\narr = [ 3.0, new Number(-1.0) ];\nbool = isSafeIntegerArray.objects( arr )\n"
isSameValue,"var bool = isSameValue( true, true )\nbool = isSameValue( {}, {} )\nbool = isSameValue( -0.0, -0.0 )\nbool = isSameValue( -0.0, 0.0 )\nbool = isSameValue( NaN, NaN )\n"
isSameValueZero,"var bool = isSameValueZero( true, true )\nbool = isSameValueZero( {}, {} )\nbool = isSameValueZero( -0.0, -0.0 )\nbool = isSameValueZero( -0.0, 0.0 )\nbool = isSameValueZero( NaN, NaN )\n"
isSharedArrayBuffer,"var bool = isSharedArrayBuffer( new SharedArrayBuffer( 10 ) )\nbool = isSharedArrayBuffer( [] )\n"
isSkewCentrosymmetricMatrix,"var mat = ndarray( 'generic', 2 );\nvar M = mat( [ 2, 1, -1, -2 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\nvar bool = isSkewCentrosymmetricMatrix( M )\nbool = isSkewCentrosymmetricMatrix( [ 1, 2, 3, 4 ] )\nbool = isSkewCentrosymmetricMatrix( 3.14 )\nbool = isSkewCentrosymmetricMatrix( {} )\n"
isSkewPersymmetricMatrix,"var mat = ndarray( 'generic', 2 );\nvar M = mat( [ 1, 0, 0, -1 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\nvar bool = isSkewPersymmetricMatrix( M )\nbool = isSkewPersymmetricMatrix( [ 1, 2, 3, 4 ] )\nbool = isSkewPersymmetricMatrix( 3.14 )\nbool = isSkewPersymmetricMatrix( {} )\n"
isSkewSymmetricMatrix,"var mat = ndarray( 'generic', 2 );\nvar M = mat( [ 0, -1, 1, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\nvar bool = isSkewSymmetricMatrix( M )\nbool = isSkewSymmetricMatrix( [ 1, 2, 3, 4 ] )\nbool = isSkewSymmetricMatrix( 3.14 )\nbool = isSkewSymmetricMatrix( {} )\n"
isSquareMatrix,"var mat = ndarray( 'generic', 2 );\nvar M = mat( [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\nvar bool = isSquareMatrix( M )\nbool = isSquareMatrix( [ 1, 2, 3, 4 ] )\nbool = isSquareMatrix( 3.14 )\nbool = isSquareMatrix( {} )\n"
isStrictEqual,"var bool = isStrictEqual( true, true )\nbool = isStrictEqual( {}, {} )\nbool = isStrictEqual( -0.0, -0.0 )\nbool = isStrictEqual( -0.0, 0.0 )\nbool = isStrictEqual( NaN, NaN )\n"
isString,"var bool = isString( 'beep' )\nbool = isString( new String( 'beep' ) )\nbool = isString( 5 )\n"
isString.isPrimitive,"var bool = isString.isPrimitive( 'beep' )\nbool = isString.isPrimitive( new String( 'beep' ) )\n"
isString.isObject,"var bool = isString.isObject( new String( 'beep' ) )\nbool = isString.isObject( 'beep' )\n"
isStringArray,"var bool = isStringArray( [ 'abc', 'def' ] )\nbool = isStringArray( [ 'abc', 123 ] )\n"
isStringArray.primitives,"var arr = [ 'abc', 'def' ];\nvar bool = isStringArray.primitives( arr )\narr = [ 'abc', new String( 'def' ) ];\nbool = isStringArray.primitives( arr )\n"
isStringArray.objects,"var arr = [ new String( 'ab' ), new String( 'cd' ) ];\nvar bool = isStringArray.objects( arr )\narr = [ new String( 'abc' ), 'def' ];\nbool = isStringArray.objects( arr )\n"
isSymbol,"var bool = isSymbol( Symbol( 'beep' ) )\nbool = isSymbol( Object( Symbol( 'beep' ) ) )\nbool = isSymbol( {} )\nbool = isSymbol( null )\nbool = isSymbol( true )\n"
isSymbolArray,"var bool = isSymbolArray( [ Symbol( 'beep' ), Symbol( 'boop' ) ] )\nbool = isSymbolArray( Symbol( 'beep' ) )\nbool = isSymbolArray( [] )\nbool = isSymbolArray( {} )\nbool = isSymbolArray( null )\nbool = isSymbolArray( true )\n"
isSymbolArray.primitives,"var bool = isSymbolArray.primitives( [ Symbol( 'beep' ) ] )\nbool = isSymbolArray.primitives( [ Object( Symbol( 'beep' ) ) ] )\nbool = isSymbolArray.primitives( [] )\nbool = isSymbolArray.primitives( {} )\nbool = isSymbolArray.primitives( null )\nbool = isSymbolArray.primitives( true )\n"
isSymbolArray.objects,"var bool = isSymbolArray.objects( [ Object( Symbol( 'beep' ) ) ] )\nbool = isSymbolArray.objects( [ Symbol( 'beep' ) ] )\nbool = isSymbolArray.objects( [] )\nbool = isSymbolArray.objects( {} )\nbool = isSymbolArray.objects( null )\nbool = isSymbolArray.objects( true )\n"
isSymmetricMatrix,"var mat = ndarray( 'generic', 2 );\nvar M = mat( [ 0, 1, 1, 2 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\nvar bool = isSymmetricMatrix( M )\nbool = isSymmetricMatrix( [ 1, 2, 3, 4 ] )\nbool = isSymmetricMatrix( 3.14 )\nbool = isSymmetricMatrix( {} )\n"
isSyntaxError,"var bool = isSyntaxError( new SyntaxError( 'beep' ) )\nbool = isSyntaxError( {} )\n"
isTruthy,"var bool = isTruthy( true )\nbool = isTruthy( {} )\nbool = isTruthy( [] )\nbool = isTruthy( false )\nbool = isTruthy( '' )\nbool = isTruthy( 0 )\nbool = isTruthy( null )\nbool = isTruthy( void 0 )\nbool = isTruthy( NaN )\n"
isTruthyArray,"var bool = isTruthyArray( [ {}, [] ] )\nbool = isTruthyArray( [ null, '' ] )\nbool = isTruthyArray( [] )\n"
isTypedArray,"var bool = isTypedArray( new Int8Array( 10 ) )\n"
isTypedArrayLength,"var bool = isTypedArrayLength( 5 )\nbool = isTypedArrayLength( 2.0e200 )\nbool = isTypedArrayLength( -3.14 )\nbool = isTypedArrayLength( null )\n"
isTypedArrayLike,"var bool = isTypedArrayLike( new Int16Array() )\nbool = isTypedArrayLike({\n'length': 10,\n'byteOffset': 0,\n'byteLength': 10,\n'BYTES_PER_ELEMENT': 4\n })\n"
isTypeError,"var bool = isTypeError( new TypeError( 'beep' ) )\nbool = isTypeError( {} )\n"
isUint8Array,"var bool = isUint8Array( new Uint8Array( 10 ) )\nbool = isUint8Array( [] )\n"
isUint8ClampedArray,"var bool = isUint8ClampedArray( new Uint8ClampedArray( 10 ) )\nbool = isUint8ClampedArray( [] )\n"
isUint16Array,"var bool = isUint16Array( new Uint16Array( 10 ) )\nbool = isUint16Array( [] )\n"
isUint32Array,"var bool = isUint32Array( new Uint32Array( 10 ) )\nbool = isUint32Array( [] )\n"
isUNCPath,"var bool = isUNCPath( '\\\\server\\share\\foo\\bar\\baz' )\nbool = isUNCPath( '/foo/bar/baz' )\n"
isUndefined,"var bool = isUndefined( void 0 )\nbool = isUndefined( null )\n"
isUndefinedOrNull,"var bool = isUndefinedOrNull( void 0 )\nbool = isUndefinedOrNull( null )\nbool = isUndefinedOrNull( false )\n"
isUnityProbabilityArray,"var bool = isUnityProbabilityArray( [ 0.25, 0.5, 0.25 ] )\nbool = isUnityProbabilityArray( new Uint8Array( [ 0, 1 ] ) )\nbool = isUnityProbabilityArray( [ 0.4, 0.4, 0.4 ] )\nbool = isUnityProbabilityArray( [ 3.14, 0.0 ] )\n"
isUppercase,"var bool = isUppercase( 'HELLO' )\nbool = isUppercase( 'World' )\n"
isURI,"var bool = isURI( 'http://google.com' )\nbool = isURI( 'http://localhost/' )\nbool = isURI( 'http://example.w3.org/path%20with%20spaces.html' )\nbool = isURI( 'ftp://ftp.is.co.za/rfc/rfc1808.txt' )\nbool = isURI( '' )\nbool = isURI( 'foo@bar' )\nbool = isURI( '://foo/' )\nbool = isURI( 'http://<foo>' )\nbool = isURI( 'http:////foo.html' )\nbool = isURI( 'http://example.w3.org/%a' )\n"
isURIError,"var bool = isURIError( new URIError( 'beep' ) )\nbool = isURIError( {} )\n"
isVectorLike,"var M = {};\nM.data = [ 0, 0, 0, 0 ];\nM.ndims = 1;\nM.shape = [ 4 ];\nM.strides = [ 1 ];\nM.offset = 0;\nM.order = 'row-major';\nM.dtype = 'generic';\nM.length = 4;\nM.flags = {};\nM.get = function get( i, j ) {};\nM.set = function set( i, j ) {};\nvar bool = isVectorLike( M )\nbool = isVectorLike( [ 1, 2, 3, 4 ] )\nbool = isVectorLike( 3.14 )\nbool = isVectorLike( {} )\n"
isWhitespace,"var bool = isWhitespace( '       ' )\nbool = isWhitespace( 'abcdef' )\nbool = isWhitespace( '' )\n"
isWritableProperty,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.writable = false;\ndesc.value = 'beep';\ndefineProperty( obj, 'beep', desc );\nvar bool = isWritableProperty( obj, 'boop' )\nbool = isWritableProperty( obj, 'beep' )\n"
isWritablePropertyIn,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.writable = false;\ndesc.value = 'beep';\ndefineProperty( obj, 'beep', desc );\nvar bool = isWritablePropertyIn( obj, 'boop' )\nbool = isWritablePropertyIn( obj, 'beep' )\n"
isWriteOnlyProperty,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = true;\ndesc.set = function setter( v ) { obj.boop = v; };\ndefineProperty( obj, 'beep', desc );\nvar bool = isWriteOnlyProperty( obj, 'boop' )\nbool = isWriteOnlyProperty( obj, 'beep' )\n"
isWriteOnlyPropertyIn,"var obj = { 'boop': true };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = true;\ndesc.set = function setter( v ) { obj.boop = v; };\ndefineProperty( obj, 'beep', desc );\nvar bool = isWriteOnlyPropertyIn( obj, 'boop' )\nbool = isWriteOnlyPropertyIn( obj, 'beep' )\n"
iterAdd,"var it1 = array2iterator( [ 1.0, 2.0 ] );\nvar it2 = array2iterator( [ 3.0, 4.0 ] );\nvar it = iterAdd( it1, it2 );\nvar v = it.next().value\nv = it.next().value\nvar bool = it.next().done\n"
iterAdvance,"var arr = array2iterator( [ 0, 0, 0, 0, 1 ] );\nvar it = iterAdvance( arr, 4 );\nvar v = it.next().value\nvar bool = it.next().done\n"
iterAny,"var arr = array2iterator( [ 0, 0, 0, 0, 1 ] );\nvar bool = iterAny( arr )\n"
iterAnyBy,"var arr = array2iterator( [ 0, 0, 0, 0, 1 ] );\nfunction fcn( v ) { return ( v === 1 ); };\nvar bool = iterAnyBy( arr, fcn )\n"
iterator2array,"var opts = { 'iter': 10 };\nvar arr = iterator2array( random.iterators.randu( opts ) )\n"
iterator2arrayview,"var it = random.iterators.randu({ 'iter': 10 });\nvar out = new Float64Array( 20 );\nvar arr = iterator2arrayview( it, out, 5, 15 )\n"
iterator2arrayviewRight,"var it = random.iterators.randu({ 'iter': 10 });\nvar out = new Float64Array( 20 );\nvar arr = iterator2arrayviewRight( it, out, 5, 15 )\n"
iteratorStream,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar it = random.iterators.randu( opts );\nvar s = iteratorStream( it );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
iteratorStream.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = iteratorStream.factory( opts );\n"
iteratorStream.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar it = random.iterators.randu( opts );\nvar s = iteratorStream.objectMode( it );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
IteratorSymbol,"var s = IteratorSymbol\n"
iterawgn,"var src = iterSineWave();\nvar it = iterawgn( src, 0.5 );\nvar v = it.next().value\nv = it.next().value\n"
iterawln,"var src = iterSineWave();\nvar it = iterawln( src, 0.5 );\nvar v = it.next().value\nv = it.next().value\n"
iterawun,"var src = iterSineWave();\nvar it = iterawun( src, 0.5 );\nvar v = it.next().value\nv = it.next().value\n"
iterBartlettHannPulse,"var it = iterBartlettHannPulse();\nvar v = it.next().value\nv = it.next().value\n"
iterBartlettPulse,"var it = iterBartlettPulse();\nvar v = it.next().value\nv = it.next().value\n"
iterConcat,"var it1 = array2iterator( [ 1, 2 ] );\nvar it2 = array2iterator( [ 3, 4 ] );\nvar it = iterConcat( it1, it2 );\nvar v = it.next().value\nv = it.next().value\nv = it.next().value\nv = it.next().value\nvar bool = it.next().done\n"
iterConstant,"var it = iterConstant( 3.14 );\nvar v = it.next().value\nv = it.next().value\n"
iterCosineWave,"var it = iterCosineWave();\nvar v = it.next().value\nv = it.next().value\n"
iterCounter,"var it = iterCounter( random.iterators.randu() );\nvar v = it.next().value\nv = it.next().value\n"
itercugmean,"var arr = array2iterator( [ 2.0, 5.0, 3.0, 5.0 ] );\nvar it = itercugmean( arr );\nvar v = it.next().value\nv = it.next().value\nv = it.next().value\nv = it.next().value\n"
itercuhmean,"var arr = array2iterator( [ 2.0, 5.0, 3.0, 5.0 ] );\nvar it = itercuhmean( arr );\nvar v = it.next().value\nv = it.next().value\nv = it.next().value\nv = it.next().value\n"
itercumax,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itercumax( arr );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itercumaxabs,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itercumaxabs( arr );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itercumean,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itercumean( arr );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itercumeanabs,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itercumeanabs( arr );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itercumeanabs2,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itercumeanabs2( arr );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itercumidrange,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itercumidrange( arr );\nvar v = it.next().value\nv = it.next().value\nv = it.next().value\nv = it.next().value\n"
itercumin,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itercumin( arr );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itercuminabs,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itercuminabs( arr );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itercuprod,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itercuprod( arr );\nvar p = it.next().value\np = it.next().value\np = it.next().value\np = it.next().value\n"
itercurange,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itercurange( arr );\nvar r = it.next().value\nr = it.next().value\nr = it.next().value\nr = it.next().value\n"
itercusum,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itercusum( arr );\nvar s = it.next().value\ns = it.next().value\ns = it.next().value\ns = it.next().value\n"
itercusumabs,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itercusumabs( arr );\nvar s = it.next().value\ns = it.next().value\ns = it.next().value\ns = it.next().value\n"
itercusumabs2,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itercusumabs2( arr );\nvar s = it.next().value\ns = it.next().value\ns = it.next().value\ns = it.next().value\n"
iterDedupe,"var arr = array2iterator( [ 1, 1, 2, 3, 3 ] );\nvar it = iterDedupe( arr );\nvar v = it.next().value\nv = it.next().value\nv = it.next().value\n"
iterDedupeBy,"var arr = array2iterator( [ 1, 1, 2, 3, 3 ] );\nfunction fcn( v ) { return v; };\nvar it = iterDedupeBy( arr, fcn );\nvar v = it.next().value\nv = it.next().value\nv = it.next().value\n"
iterDiracComb,"var it = iterDiracComb();\nvar v = it.next().value\nv = it.next().value\n"
iterDivide,"var it1 = array2iterator( [ 3.0, 2.0 ] );\nvar it2 = array2iterator( [ 1.0, 4.0 ] );\nvar it = iterDivide( it1, it2 );\nvar v = it.next().value\nv = it.next().value\nvar bool = it.next().done\n"
iterEmpty,"var it = iterEmpty();\nvar bool = it.next().done\n"
iterEvery,"var arr = array2iterator( [ 1, 1, 1, 1, 0 ] );\nvar bool = iterEvery( arr )\n"
iterEveryBy,"var arr = array2iterator( [ 1, 1, 1, 1, 1 ] );\nfunction fcn( v ) { return ( v > 0 ); };\nvar bool = iterEveryBy( arr, fcn )\n"
iterFibonacci,"var it = iterFibonacci();\nvar v = it.next().value\nv = it.next().value\n"
iterFill,"var it = iterFill( random.iterators.randu(), 3.14, 0, 2 );\nvar r = it.next().value\nr = it.next().value\nr = it.next().value\n"
iterFilter,"function f( v ) { return ( v > 2 ); };\nvar it1 = array2iterator( [ 1, 3, 2, 4 ] );\nvar it2 = iterFilter( it1, f );\nvar v = it2.next().value\nv = it2.next().value\n"
iterFilterMap,"function f( v ) { if ( v > 2 ) { return v * 10 }; };\nvar it1 = array2iterator( [ 1, 3, 2, 4 ] );\nvar it2 = iterFilterMap( it1, f );\nvar v = it2.next().value\nv = it2.next().value\n"
iterFirst,"var arr = array2iterator( [ 1, 0, 0, 0, 0 ] );\nvar v = iterFirst( arr )\n"
iterFlatTopPulse,"var it = iterFlatTopPulse();\nvar v = it.next().value\nv = it.next().value\n"
iterFlow,"var o = {};\no.head = iterHead;\no.some = iterSome;\nvar fiter = iterFlow( o )\n"
iterForEach,"function f( v ) { if ( v !== v ) { throw new Error( 'beep' ); } };\nvar it = iterForEach( random.iterators.randu(), f );\nvar r = it.next().value\nr = it.next().value\n"
iterHannPulse,"var it = iterHannPulse();\nvar v = it.next().value\nv = it.next().value\n"
iterHead,"var it = iterHead( random.iterators.randu(), 5 );\nvar r = it.next().value\nr = it.next().value\n"
iterIntersection,"var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\nvar it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\nvar it = iterIntersection( it1, it2 );\nvar v = it.next().value\nv = it.next().value\nvar bool = it.next().done\n"
iterIntersectionByHash,"var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\nvar it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\nfunction f( v ) { return v.toString(); };\nvar it = iterIntersectionByHash( it1, it2, f );\nvar v = it.next().value\nv = it.next().value\nvar bool = it.next().done\n"
iterLanczosPulse,"var it = iterLanczosPulse();\nvar v = it.next().value\nv = it.next().value\n"
iterLast,"var arr = array2iterator( [ 0, 0, 0, 0, 1 ] );\nvar v = iterLast( arr )\n"
iterLength,"var arr = array2iterator( [ 0, 0, 0, 0, 1 ] );\nvar len = iterLength( arr )\n"
iterMap,"function f( v ) { return v * 10.0; };\nvar it = iterMap( random.iterators.randu(), f );\nvar r = it.next().value\nr = it.next().value\n"
iterMapN,"var it1 = array2iterator( [ 1.0, 2.0 ] );\nvar it2 = array2iterator( [ 3.0, 4.0 ] );\nfunction fcn( x, y ) { return x + y; };\nvar it = iterMapN( it1, it2, fcn );\nvar v = it.next().value\nv = it.next().value\nvar bool = it.next().done\n"
itermax,"var arr = array2iterator( [ 1.0, -2.0, 3.0, -4.0 ] );\nvar m = itermax( arr )\n"
itermaxabs,"var arr = array2iterator( [ 1.0, -2.0, 3.0, -4.0 ] );\nvar m = itermaxabs( arr )\n"
itermean,"var arr = array2iterator( [ 1.0, 2.0, 3.0, 4.0 ] );\nvar m = itermean( arr )\n"
itermeanabs,"var arr = array2iterator( [ 1.0, -2.0, -3.0, 4.0 ] );\nvar m = itermeanabs( arr )\n"
itermeanabs2,"var arr = array2iterator( [ 1.0, -2.0, -3.0, 4.0 ] );\nvar m = itermeanabs2( arr )\n"
itermidrange,"var arr = array2iterator( [ 1.0, -2.0, 3.0, -4.0 ] );\nvar v = itermidrange( arr )\n"
itermin,"var arr = array2iterator( [ 1.0, -2.0, -3.0, 4.0 ] );\nvar m = itermin( arr )\n"
iterminabs,"var arr = array2iterator( [ 1.0, -2.0, 3.0, -4.0 ] );\nvar m = iterminabs( arr )\n"
itermmax,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itermmax( arr, 3 );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itermmaxabs,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itermmaxabs( arr, 3 );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itermmean,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itermmean( arr, 3 );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itermmeanabs,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itermmeanabs( arr, 3 );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itermmeanabs2,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itermmeanabs2( arr, 3 );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itermmidrange,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itermmidrange( arr, 3 );\nvar v = it.next().value\nv = it.next().value\nv = it.next().value\nv = it.next().value\n"
itermmin,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itermmin( arr, 3 );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itermminabs,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itermminabs( arr, 3 );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
iterMod,"var it1 = array2iterator( [ 3.0, 2.0 ] );\nvar it2 = array2iterator( [ 1.0, 4.0 ] );\nvar it = iterMod( it1, it2 );\nvar v = it.next().value\nv = it.next().value\nvar bool = it.next().done\n"
itermprod,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itermprod( arr, 3 );\nvar p = it.next().value\np = it.next().value\np = it.next().value\np = it.next().value\n"
itermrange,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itermrange( arr, 3 );\nvar m = it.next().value\nm = it.next().value\nm = it.next().value\nm = it.next().value\n"
itermsum,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itermsum( arr, 3 );\nvar s = it.next().value\ns = it.next().value\ns = it.next().value\ns = it.next().value\n"
itermsumabs,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itermsumabs( arr, 3 );\nvar s = it.next().value\ns = it.next().value\ns = it.next().value\ns = it.next().value\n"
itermsumabs2,"var arr = array2iterator( [ 2.0, -5.0, 3.0, 5.0 ] );\nvar it = itermsumabs2( arr, 3 );\nvar s = it.next().value\ns = it.next().value\ns = it.next().value\ns = it.next().value\n"
iterMultiply,"var it1 = array2iterator( [ 1.0, 2.0 ] );\nvar it2 = array2iterator( [ 3.0, 4.0 ] );\nvar it = iterMultiply( it1, it2 );\nvar v = it.next().value\nv = it.next().value\nvar bool = it.next().done\n"
iterNone,"var arr = array2iterator( [ 0, 0, 0, 0, 1 ] );\nvar bool = iterNone( arr )\n"
iterNoneBy,"var arr = array2iterator( [ 1, 1, 1, 1, 1 ] );\nfunction fcn( v ) { return ( v <= 0 ); };\nvar bool = iterNoneBy( arr, fcn )\n"
iterNonFibonacci,"var it = iterNonFibonacci();\nvar v = it.next().value\nv = it.next().value\n"
iterNth,"var arr = array2iterator( [ 0, 0, 1, 0, 0 ] );\nvar v = iterNth( arr, 3 )\n"
iterPeriodicSinc,"var it = iterPeriodicSinc( 7 );\nvar v = it.next().value\nv = it.next().value\n"
iterPipeline,"var it1 = iterThunk( iterHead, 100 );\nfunction f( r ) { return ( r > 0.95 ); };\nvar it2 = iterThunk( iterSomeBy, 5, f );\nvar p = iterPipeline( it1, it2 );\nvar bool = p( random.iterators.randu() )\n"
iterPop,"var it1 = array2iterator( [ 1, 2 ] );\nvar it2 = iterPop( it1 );\nvar v = it2.next().value\nvar bool = it2.next().done\n"
iterprod,"var arr = array2iterator( [ 1.0, 2.0, 3.0, 4.0 ] );\nvar s = iterprod( arr )\n"
iterPulse,"var it = iterPulse();\nvar v = it.next().value\nv = it.next().value\n"
iterPush,"var it1 = array2iterator( [ 1, 2 ] );\nvar it2 = iterPush( it1, 3, 4 );\nvar v = it2.next().value\nv = it2.next().value\nv = it2.next().value\nv = it2.next().value\nvar bool = it2.next().done\n"
iterrange,"var arr = array2iterator( [ 1.0, -2.0, 3.0, -4.0 ] );\nvar v = iterrange( arr )\n"
iterReject,"function f( v ) { return ( v > 2 ); };\nvar it1 = array2iterator( [ 1, 3, 2, 4 ] );\nvar it2 = iterReject( it1, f );\nvar v = it2.next().value\nv = it2.next().value\n"
iterReplicate,"var it1 = array2iterator( [ 1, 2, 3, 4 ] );\nvar it2 = iterReplicate( it1, 2 );\nvar v = it2.next().value\nv = it2.next().value\nv = it2.next().value\nv = it2.next().value\n"
iterReplicateBy,"var it1 = array2iterator( [ 1, 2, 3, 4 ] );\nfunction f( v, i ) { return i + 1; };\nvar it2 = iterReplicateBy( it1, f );\nvar v = it2.next().value\nv = it2.next().value\nv = it2.next().value\nv = it2.next().value\nv = it2.next().value\nv = it2.next().value\nv = it2.next().value\n"
iterSawtoothWave,"var it = iterSawtoothWave();\nvar v = it.next().value\nv = it.next().value\n"
iterShift,"var it1 = array2iterator( [ 1, 2 ] );\nvar it2 = iterShift( it1 );\nvar v = it2.next().value\nvar bool = it2.next().done\n"
iterSineWave,"var it = iterSineWave();\nvar v = it.next().value\nv = it.next().value\n"
iterSlice,"var it = iterSlice( random.iterators.randu(), 5, 10 );\nvar r = it.next().value\nr = it.next().value\n"
iterSome,"var arr = array2iterator( [ 0, 0, 1, 1, 1 ] );\nvar bool = iterSome( arr, 3 )\n"
iterSomeBy,"var arr = array2iterator( [ 1, 1, 0, 0, 1 ] );\nfunction fcn( v ) { return ( v > 0 ); };\nvar bool = iterSomeBy( arr, 3, fcn )\n"
iterSquareWave,"var it = iterSquareWave();\nvar v = it.next().value\nv = it.next().value\n"
iterstdev,"var arr = array2iterator( [ 2.0, -5.0 ] );\nvar m = iterstdev( arr )\n"
iterSubtract,"var it1 = array2iterator( [ 1.0, 5.0 ] );\nvar it2 = array2iterator( [ 3.0, 4.0 ] );\nvar it = iterSubtract( it1, it2 );\nvar v = it.next().value\nv = it.next().value\nvar bool = it.next().done\n"
itersum,"var arr = array2iterator( [ 1.0, 2.0, 3.0, 4.0 ] );\nvar s = itersum( arr )\n"
itersumabs,"var arr = array2iterator( [ -1.0, 2.0, -3.0, 4.0 ] );\nvar s = itersumabs( arr )\n"
itersumabs2,"var arr = array2iterator( [ -1.0, 2.0, -3.0, 4.0 ] );\nvar s = itersumabs2( arr )\n"
iterThunk,"var fcn = iterThunk( iterSome, 3 );\nvar arr = array2iterator( [ 0, 0, 1, 1, 1 ] );\nvar bool = fcn( arr )\n"
iterTriangleWave,"var it = iterTriangleWave();\nvar v = it.next().value\nv = it.next().value\n"
iterUnion,"var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\nvar it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\nvar it = iterUnion( it1, it2 );\nvar v = it.next().value\nv = it.next().value\nv = it.next().value\nv = it.next().value\nv = it.next().value\nvar bool = it.next().done\n"
iterUnique,"var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\nvar it2 = iterUnique( it1 );\nvar v = it2.next().value\nv = it2.next().value\nv = it2.next().value\nvar bool = it2.next().done\n"
iterUniqueBy,"var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\nfunction f( a, b ) { return ( a !== b ); };\nvar it2 = iterUniqueBy( it1, f );\nvar v = it2.next().value\nv = it2.next().value\nv = it2.next().value\nvar bool = it2.next().done\n"
iterUniqueByHash,"var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\nfunction f( v ) { return v.toString(); };\nvar it2 = iterUniqueByHash( it1, f );\nvar v = it2.next().value\nv = it2.next().value\nv = it2.next().value\nvar bool = it2.next().done\n"
iterUnshift,"var it1 = array2iterator( [ 1, 2 ] );\nvar it2 = iterUnshift( it1, 3, 4 );\nvar v = it2.next().value\nv = it2.next().value\nv = it2.next().value\nv = it2.next().value\nvar bool = it2.next().done\n"
itervariance,"var arr = array2iterator( [ 2.0, -5.0 ] );\nvar s2 = itervariance( arr )\n"
joinStream,"var s = joinStream();\ns.write( 'a' );\ns.write( 'b' );\ns.write( 'c' );\ns.end();\n"
joinStream.factory,"var opts = { 'highWaterMark': 64 };\nvar createStream = joinStream.factory( opts );\nvar s = createStream();\ns.write( 'a' );\ns.write( 'b' );\ns.write( 'c' );\ns.end();\n"
joinStream.objectMode,"var s = joinStream.objectMode();\ns.write( { 'value': 'a' } );\ns.write( { 'value': 'b' } );\ns.write( { 'value': 'c' } );\ns.end();\n"
keyBy,"function toKey( v ) { return v.a; };\nvar arr = [ { 'a': 1 }, { 'a': 2 } ];\nkeyBy( arr, toKey )\n"
keyByRight,"function toKey( v ) { return v.a; };\nvar arr = [ { 'a': 1 }, { 'a': 2 } ];\nkeyByRight( arr, toKey )\n"
keysIn,"function Foo() { this.beep = 'boop'; return this; };\nFoo.prototype.foo = 'bar';\nvar obj = new Foo();\nvar keys = keysIn( obj )\n"
kruskalTest,"var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\nvar y = [ 3.8, 2.7, 4.0, 2.4 ];\nvar z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\nvar out = kruskalTest( x, y, z )\nvar arr = [ 2.9, 3.0, 2.5, 2.6, 3.2,\n 3.8, 2.7, 4.0, 2.4,\n 2.8, 3.4, 3.7, 2.2, 2.0\n ];\nvar groups = [\n 'a', 'a', 'a', 'a', 'a',\n 'b', 'b', 'b', 'b',\n 'c', 'c', 'c', 'c', 'c'\n ];\nout = kruskalTest( arr, { 'groups': groups })\n"
kstest,"var rnorm = base.random.normal.factory({ 'seed': 4839 });\nvar x = new Array( 100 );\nfor ( var i = 0; i < 100; i++ ) { x[ i ] = rnorm( 3.0, 1.0 ); }\nvar out = kstest( x, 'normal', 0.0, 1.0 )\nout = kstest( x, 'normal', 3.0, 1.0 )\nrunif = base.random.uniform.factory( 0.0, 1.0, { 'seed': 8798 })\nx = new Array( 100 );\nfor ( i = 0; i < x.length; i++ ) { x[ i ] = runif(); }\nout = kstest( x, 'uniform', 0.0, 1.0 )\nout.print()\nout = kstest( x, 'uniform', 0.0, 1.0, { 'alpha': 0.1 })\nrunif = base.random.uniform.factory( 0.0, 1.0, { 'seed': 8798 });\nx = new Array( 100 );\nfor ( i = 0; i < x.length; i++ ) { x[ i ] = runif(); }\nout = kstest( x, 'uniform', 0.0, 1.0, { 'alternative': 'less' })\nout = kstest( x, 'uniform', 0.0, 1.0, { 'alternative': 'greater' })\nx = [ 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 ];\nout = kstest( x, 'uniform', 0.0, 1.0, { 'sorted': true })\n"
LinkedList,"var list = LinkedList();\nlist.push( 'foo' ).push( 'bar' );\nlist.length\nlist.pop()\nlist.length\nlist.pop()\nlist.length\n"
linspace,"var arr = linspace( 0, 100, 6 )\n"
LIU_NEGATIVE_OPINION_WORDS_EN,"var list = LIU_NEGATIVE_OPINION_WORDS_EN()\n"
LIU_POSITIVE_OPINION_WORDS_EN,"var list = LIU_POSITIVE_OPINION_WORDS_EN()\n"
LN_HALF,"LN_HALF\n"
LN_PI,"LN_PI\n"
LN_SQRT_TWO_PI,"LN_SQRT_TWO_PI\n"
LN_TWO_PI,"LN_TWO_PI\n"
LN2,"LN2\n"
LN10,"LN10\n"
LOG2E,"LOG2E\n"
LOG10E,"LOG10E\n"
logspace,"var arr = logspace( 0, 2, 6 )\n"
lowercase,"var out = lowercase( 'bEEp' )\n"
lowercaseKeys,"var obj = { 'A': 1, 'B': 2 };\nvar out = lowercaseKeys( obj )\n"
lowess,"var x = new Float64Array( 100 );\nvar y = new Float64Array( x.length );\nfor ( var i = 0; i < x.length; i++ ) {\n x[ i ] = i;\n y[ i ] = ( 0.5*i ) + ( 10.0*base.random.randn() );\n }\nvar out = lowess( x, y );\nvar yhat = out.y;\nvar h = Plot( [ x, x ], [ y, yhat ] );\nh.lineStyle = [ 'none', '-' ];\nh.symbols = [ 'closed-circle', 'none' ];\nh.view( 'window' );\n"
lpad,"var out = lpad( 'a', 5 )\nout = lpad( 'beep', 10, 'b' )\nout = lpad( 'boop', 12, 'beep' )\n"
ltrim,"var out = ltrim( ' \r\n\t  Beep \t\t\n  ' )\n"
MALE_FIRST_NAMES_EN,"var list = MALE_FIRST_NAMES_EN()\n"
mapFun,"function fcn( i ) { return i; };\nvar arr = mapFun( fcn, 5 )\n"
mapFunAsync,"function fcn( i, next ) {\n setTimeout( onTimeout, 0 );\n function onTimeout() {\n     next( null, i );\n }\n };\nfunction done( error, arr ) {\n if ( error ) {\n     throw error;\n }\n console.log( arr );\n };\nmapFunAsync( fcn, 10, done )\nfunction fcn( i, next ) {\n setTimeout( onTimeout, 0 );\n function onTimeout() {\n     next( null, i );\n }\n };\nfunction done( error, arr ) {\n if ( error ) {\n     throw error;\n }\n console.log( arr );\n };\nvar opts = { 'limit': 2 };\nmapFunAsync( fcn, 10, opts, done )\nfunction fcn( i, next ) {\n setTimeout( onTimeout, 0 );\n function onTimeout() {\n     next( null, i );\n }\n };\nfunction done( error, arr ) {\n if ( error ) {\n     throw error;\n }\n console.log( arr );\n };\nvar opts = { 'series': true };\nmapFunAsync( fcn, 10, opts, done )\n"
mapFunAsync.factory,"function fcn( i, next ) {\n setTimeout( onTimeout, 0 );\n function onTimeout() {\n     next( null, i );\n }\n };\nvar opts = { 'series': true };\nvar f = mapFunAsync.factory( opts, fcn );\nfunction done( error, arr ) {\n if ( error ) {\n     throw error;\n }\n console.log( arr );\n };\nf( 10, done )\n"
mapKeys,"function transform( key, value ) { return key + value; };\nvar obj = { 'a': 1, 'b': 2 };\nvar out = mapKeys( obj, transform )\n"
mapKeysAsync,"function transform( key, value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     next( null, key+':'+value );\n }\n };\nfunction done( error, out ) {\n if ( error ) {\n     throw error;\n }\n console.log( out );\n };\nvar obj = { 'a': 1, 'b': 2 };\nmapKeysAsync( obj, transform, done )\nfunction transform( key, value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     next( null, key+':'+value );\n }\n };\nfunction done( error, out ) {\n if ( error ) {\n     throw error;\n }\n console.log( out );\n };\nvar opts = { 'limit': 2 };\nvar obj = { 'a': 1, 'b': 2, 'c': 3 };\nmapKeysAsync( obj, opts, transform, done )\nfunction transform( key, value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     next( null, key+':'+value );\n }\n };\nfunction done( error, out ) {\n if ( error ) {\n     throw error;\n }\n console.log( out );\n };\nvar opts = { 'series': true };\nvar obj = { 'a': 1, 'b': 2, 'c': 3 };\nmapKeysAsync( obj, opts, transform, done )\n"
mapKeysAsync.factory,"function transform( key, value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     next( null, key+':'+value );\n }\n };\nvar opts = { 'series': true };\nvar f = mapKeysAsync.factory( opts, transform );\nfunction done( error, out ) {\n if ( error ) {\n     throw error;\n }\n console.log( out );\n };\nvar obj = { 'a': 1, 'b': 2, 'c': 3 };\nf( obj, done )\nobj = { 'beep': 'boop' };\nf( obj, done )\n"
mapValues,"function transform( value, key ) { return key + value; };\nvar obj = { 'a': 1, 'b': 2 };\nvar out = mapValues( obj, transform )\n"
mapValuesAsync,"function transform( value, key, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     next( null, key+':'+value );\n }\n };\nfunction done( error, out ) {\n if ( error ) {\n     throw error;\n }\n console.log( out );\n };\nvar obj = { 'a': 1, 'b': 2 };\nmapValuesAsync( obj, transform, done )\nfunction transform( value, key, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     next( null, key+':'+value );\n }\n };\nfunction done( error, out ) {\n if ( error ) {\n     throw error;\n }\n console.log( out );\n };\nvar opts = { 'limit': 2 };\nvar obj = { 'a': 1, 'b': 2, 'c': 3 };\nmapValuesAsync( obj, opts, transform, done )\nfunction transform( value, key, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     next( null, key+':'+value );\n }\n };\nfunction done( error, out ) {\n if ( error ) {\n     throw error;\n }\n console.log( out );\n };\nvar opts = { 'series': true };\nvar obj = { 'a': 1, 'b': 2, 'c': 3 };\nmapValuesAsync( obj, opts, transform, done )\n"
mapValuesAsync.factory,"function transform( value, key, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     next( null, key+':'+value );\n }\n };\nvar opts = { 'series': true };\nvar f = mapValuesAsync.factory( opts, transform );\nfunction done( error, out ) {\n if ( error ) {\n     throw error;\n }\n console.log( out );\n };\nvar obj = { 'a': 1, 'b': 2, 'c': 3 };\nf( obj, done )\nobj = { 'beep': 'boop' };\nf( obj, done )\n"
MAX_ARRAY_LENGTH,"MAX_ARRAY_LENGTH\n"
MAX_TYPED_ARRAY_LENGTH,"MAX_TYPED_ARRAY_LENGTH\n"
memoize,"function factorial( n ) {\n var prod;\n var i;\n prod = 1;\n for ( i = n; i > 1; i-- ) {\n     prod *= i;\n }\n return prod;\n };\nvar memoized = memoize( factorial );\nvar v = memoized( 5 )\nv = memoized( 5 )\n"
merge,"var target = { 'a': 'beep' };\nvar source = { 'a': 'boop', 'b': 'bap' };\nvar out = merge( target, source )\nvar bool = ( out === target )\n"
merge.factory,"var opts = {\n 'level': 100,\n 'copy': true,\n 'override': true,\n 'extend': true\n };\nvar merge = merge.factory( opts )\nmerge = merge.factory( { 'level': 2 } );\nvar target = {\n '1': { 'a': 'beep', '2': { '3': null, 'b': [ 5, 6, 7 ] } }\n };\nvar source = {\n '1': { 'b': 'boop', '2': { '3': [ 1, 2, 3 ] } }\n };\nvar out = merge( target, source )\nmerge = merge.factory( { 'copy': false } );\ntarget = {};\nsource = { 'a': [ 1, 2, 3 ] };\nout = merge( target, source );\nvar bool = ( out.a === source.a )\nmerge = merge.factory( { 'override': false } );\ntarget = { 'a': 'beep', 'b': 'boop' };\nsource = { 'a': null, 'c': 'bop' };\nout = merge( target, source )\nfunction strategy( a, b, key ) {\n // a => target value\n // b => source value\n // key => object key\n if ( key === 'a' ) {\n     return b;\n }\n if ( key === 'b' ) {\n     return a;\n }\n return 'bebop';\n };\nmerge = merge.factory( { 'override': strategy } );\ntarget = { 'a': 'beep', 'b': 'boop', 'c': 1234 };\nsource = { 'a': null, 'b': {}, 'c': 'bop' };\nout = merge( target, source )\nmerge = merge.factory( { 'extend': false } );\ntarget = { 'a': 'beep', 'b': 'boop' };\nsource = { 'b': 'hello', 'c': 'world' };\nout = merge( target, source )\n"
MILLISECONDS_IN_DAY,"var days = 3.14;\nvar ms = days * MILLISECONDS_IN_DAY\n"
MILLISECONDS_IN_HOUR,"var hrs = 3.14;\nvar ms = hrs * MILLISECONDS_IN_HOUR\n"
MILLISECONDS_IN_MINUTE,"var mins = 3.14;\nvar ms = mins * MILLISECONDS_IN_MINUTE\n"
MILLISECONDS_IN_SECOND,"var secs = 3.14;\nvar ms = secs * MILLISECONDS_IN_SECOND\n"
MILLISECONDS_IN_WEEK,"var weeks = 3.14;\nvar ms = weeks * MILLISECONDS_IN_WEEK\n"
MINARD_NAPOLEONS_MARCH,"var data = MINARD_NAPOLEONS_MARCH();\nvar army = data.army\nvar cities = data.cities\nvar labels = data.labels\nvar river = data.river\nvar t = data.temperature\n"
MINUTES_IN_DAY,"var days = 3.14;\nvar mins = days * MINUTES_IN_DAY\n"
MINUTES_IN_HOUR,"var hrs = 3.14;\nvar mins = hrs * MINUTES_IN_HOUR\n"
MINUTES_IN_WEEK,"var wks = 3.14;\nvar mins = wks * MINUTES_IN_WEEK\n"
minutesInMonth,"var num = minutesInMonth()\nnum = minutesInMonth( 2 )\nnum = minutesInMonth( 2, 2016 )\nnum = minutesInMonth( 2, 2017 )\nnum = minutesInMonth( 'feb', 2016 )\nnum = minutesInMonth( 'february', 2016 )\n"
minutesInYear,"var num = minutesInYear()\nnum = minutesInYear( 2016 )\nnum = minutesInYear( 2017 )\n"
MOBY_DICK,"var data = MOBY_DICK()\n"
MONTH_NAMES_EN,"var list = MONTH_NAMES_EN()\n"
MONTHS_IN_YEAR,"var yrs = 3.14;\nvar mons = yrs * MONTHS_IN_YEAR\n"
moveProperty,"var obj1 = { 'a': 'b' };\nvar obj2 = {};\nvar bool = moveProperty( obj1, 'a', obj2 )\nbool = moveProperty( obj1, 'c', obj2 )\n"
namedtypedtuple,"var opts = {};\nopts.name = 'Point';\nvar factory = namedtypedtuple( [ 'x', 'y' ], opts );\nvar tuple = factory();\n"
nativeClass,"var str = nativeClass( 'a' )\nstr = nativeClass( 5 )\nfunction Beep(){};\nstr = nativeClass( new Beep() )\n"
ndarray,"var ctor = ndarray( 'generic', 2 )\nvar b = [ 1.0, 2.0, 3.0, 4.0 ]; // underlying data buffer\nvar d = [ 2, 2 ]; // shape\nvar s = [ 2, 1 ]; // strides\nvar o = 0; // index offset\nvar arr = ctor( b, d, s, o, 'row-major' )\nvar v = arr.get( 1, 1 )\nv = arr.iget( 3 )\narr.set( 1, 1, 40.0 );\narr.get( 1, 1 )\narr.iset( 3, 99.0 );\narr.get( 1, 1 )\n"
ndarrayCastingModes,"var out = ndarrayCastingModes()\n"
ndarrayDataTypes,"var out = ndarrayDataTypes()\n"
ndarrayIndexModes,"var out = ndarrayIndexModes()\n"
ndarrayMemoized,"var ctor = ndarrayMemoized( 'generic', 2 )\nvar f = ndarrayMemoized( 'generic', 2 )\nvar bool = ( f === ctor )\nvar b = [ 1.0, 2.0, 3.0, 4.0 ]; // underlying data buffer\nvar d = [ 2, 2 ]; // shape\nvar s = [ 2, 1 ]; // strides\nvar o = 0; // index offset\nvar arr = ctor( b, d, s, o, 'row-major' )\nvar v = arr.get( 1, 1 )\nv = arr.iget( 3 )\narr.set( 1, 1, 40.0 );\narr.get( 1, 1 )\narr.iset( 3, 99.0 );\narr.get( 1, 1 )\n"
ndarrayMinDataType,"var dt = ndarrayMinDataType( 3.141592653589793 )\ndt = ndarrayMinDataType( 3 )\ndt = ndarrayMinDataType( -3 )\ndt = ndarrayMinDataType( '-3' )\n"
ndarrayNextDataType,"var out = ndarrayNextDataType( 'float32' )\n"
ndarrayOrders,"var out = ndarrayOrders()\n"
ndarrayPromotionRules,"var out = ndarrayPromotionRules( 'float32', 'int32' )\n"
ndarraySafeCasts,"var out = ndarraySafeCasts( 'float32' )\n"
ndarraySameKindCasts,"var out = ndarraySameKindCasts( 'float32' )\n"
NIGHTINGALES_ROSE,"var data = NIGHTINGALES_ROSE()\n"
NINF,"NINF\n"
NODE_VERSION,"NODE_VERSION\n"
none,"var arr = [ 0, 0, 0, 0, 0 ];\nvar bool = none( arr )\n"
noneBy,"function negative( v ) { return ( v < 0 ); };\nvar arr = [ 1, 2, 3, 4 ];\nvar bool = noneBy( arr, negative )\n"
noneByAsync,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 3000, 2500, 1000 ];\nnoneByAsync( arr, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 3000, 2500, 1000 ];\nnoneByAsync( arr, opts, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'series': true };\nvar arr = [ 3000, 2500, 1000 ];\nnoneByAsync( arr, opts, predicate, done )\n"
noneByAsync.factory,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nvar opts = { 'series': true };\nvar f = noneByAsync.factory( opts, predicate );\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 3000, 2500, 1000 ];\nf( arr, done )\narr = [ 2000, 1500, 1000 ];\nf( arr, done )\n"
noneByRight,"function positive( v ) { return ( v > 0 ); };\nvar arr = [ -1, -2, -3, -4 ];\nvar bool = noneByRight( arr, positive )\n"
noneByRightAsync,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 1000, 2500, 3000 ];\nnoneByRightAsync( arr, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 1000, 2500, 3000 ];\nnoneByRightAsync( arr, opts, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'series': true };\nvar arr = [ 1000, 2500, 3000 ];\nnoneByRightAsync( arr, opts, predicate, done )\n"
noneByRightAsync.factory,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nvar opts = { 'series': true };\nvar f = noneByRightAsync.factory( opts, predicate );\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 1000, 2500, 3000 ];\nf( arr, done )\narr = [ 1000, 1500, 2000 ];\nf( arr, done )\n"
nonEnumerableProperties,"var obj = {};\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.writable = false;\ndesc.value = 'boop';\ndefineProperty( obj, 'beep', desc );\nvar props = nonEnumerableProperties( obj )\n"
nonEnumerablePropertiesIn,"var props = nonEnumerablePropertiesIn( [] )\n"
nonEnumerablePropertyNames,"var obj = {};\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.writable = true;\ndesc.value = 'boop';\ndefineProperty( obj, 'beep', desc );\nvar keys = nonEnumerablePropertyNames( obj )\n"
nonEnumerablePropertyNamesIn,"var obj = {};\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.writable = true;\ndesc.value = 'boop';\ndefineProperty( obj, 'beep', desc );\nvar keys = nonEnumerablePropertyNamesIn( obj )\n"
nonEnumerablePropertySymbols,"var obj = {};\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.writable = true;\ndesc.value = 'boop';\nvar sym = ( Symbol ) ? Symbol( 'beep' ) : 'beep';\ndefineProperty( obj, sym, desc );\nvar symbols = nonEnumerablePropertySymbols( obj )\n"
nonEnumerablePropertySymbolsIn,"var obj = {};\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.writable = true;\ndesc.value = 'boop';\nvar sym = ( Symbol ) ? Symbol( 'beep' ) : 'beep';\ndefineProperty( obj, sym, desc );\nvar symbols = nonEnumerablePropertySymbolsIn( obj )\n"
noop,"noop();\n"
now,"var ts = now()\n"
NUM_CPUS,"NUM_CPUS\n"
Number,"var v = new Number( 5 )\n"
objectEntries,"var obj = { 'beep': 'boop', 'foo': 'bar' };\nvar entries = objectEntries( obj )\n"
objectEntriesIn,"function Foo() { this.beep = 'boop'; return this; };\nFoo.prototype.foo = 'bar';\nvar obj = new Foo();\nvar entries = objectEntriesIn( obj )\n"
objectFromEntries,"var entries = [ [ 'beep', 'boop' ], [ 'foo', 'bar' ] ];\nvar obj = objectFromEntries( entries )\n"
objectInverse,"var obj = { 'a': 'beep', 'b': 'boop' };\nvar out = objectInverse( obj )\nobj = { 'a': 'beep', 'b': 'beep' };\nout = objectInverse( obj )\nobj = {};\nobj.a = 'beep';\nobj.b = 'boop';\nobj.c = 'beep';\nout = objectInverse( obj, { 'duplicates': false } )\n"
objectInverseBy,"function transform( key, value ) { return key + value; };\nvar obj = { 'a': 'beep', 'b': 'boop' };\nvar out = objectInverseBy( obj, transform )\nfunction transform( key, value ) { return value; };\nobj = { 'a': 'beep', 'b': 'beep' };\nout = objectInverseBy( obj, transform )\nobj = {};\nobj.a = 'beep';\nobj.b = 'boop';\nobj.c = 'beep';\nout = objectInverseBy( obj, { 'duplicates': false }, transform )\n"
objectKeys,"function Foo() { this.beep = 'boop'; return this; };\nFoo.prototype.foo = 'bar';\nvar obj = new Foo();\nvar keys = objectKeys( obj )\n"
objectValues,"var obj = { 'beep': 'boop', 'foo': 'bar' };\nvar vals = objectValues( obj )\n"
objectValuesIn,"function Foo() { this.beep = 'boop'; return this; };\nFoo.prototype.foo = 'bar';\nvar obj = new Foo();\nvar values = objectValuesIn( obj )\n"
omit,"var obj1 = { 'a': 1, 'b': 2 };\nvar obj2 = omit( obj1, 'b' )\n"
omitBy,"function predicate( key, value ) { return ( value > 1 ); };\nvar obj1 = { 'a': 1, 'b': 2 };\nvar obj2 = omitBy( obj1, predicate )\n"
openURL,"var out = openURL( 'https://google.com' );\n"
PACE_BOSTON_HOUSE_PRICES,"var data = PACE_BOSTON_HOUSE_PRICES()\n"
pad,"var out = pad( 'a', 5 )\nout = pad( 'a', 10, { 'lpad': 'b' })\nout = pad( 'a', 12, { 'rpad': 'b' })\nvar opts = { 'lpad': 'a', 'rpad': 'c' };\nout = pad( 'b', 11, opts )\nopts.centerRight = false;\nout = pad( 'b', 10, opts )\nopts.centerRight = true;\nout = pad( 'b', 10, opts )\nopts = { 'lpad': 'boop', 'rpad': 'woot' };\nout = pad( 'beep', 10, opts )\nout = pad( 'beep', 2 )\nopts = { 'lpad': 'b' };\nout = pad( 'beep', 2, opts )\nopts = { 'lpad': '@', 'rpad': '!' };\nout = pad( 'beep', 2, opts )\nout = pad( 'abcdef', 3, opts )\nopts.centerRight = true;\nout = pad( 'abcdef', 3, opts )\n"
papply,"function add( x, y ) { return x + y; };\nvar add2 = papply( add, 2 );\nvar sum = add2( 3 )\n"
papplyRight,"function say( text, name ) { return text + ', ' + name + '.'; };\nvar toGrace = papplyRight( say, 'Grace Hopper' );\nvar str = toGrace( 'Hello' )\nstr = toGrace( 'Thank you' )\n"
parallel,"function done( error ) { if ( error ) { throw error; } };\nvar files = [ './a.js', './b.js' ];\nparallel( files, done );\nvar opts = { 'workers': 8 };\nparallel( files, opts, done );\n"
parseJSON,"var obj = parseJSON( '{\"beep\":\"boop\"}' )\nfunction reviver( key, value ) {\n if ( key === '' ) { return value; }\n if ( key === 'beep' ) { return value; }\n };\nvar str = '{\"beep\":\"boop\",\"a\":\"b\"}';\nvar out = parseJSON( str, reviver )\n"
PATH_DELIMITER,"PATH_DELIMITER\nvar path = '/usr/bin:/bin:/usr/sbin';\nvar parts = path.split( PATH_DELIMITER )\npath = 'C:\\Windows\\system32;C:\\Windows';\nparts = path.split( PATH_DELIMITER )\n"
PATH_DELIMITER_POSIX,"PATH_DELIMITER_POSIX\nvar PATH = '/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin';\nvar paths = PATH.split( PATH_DELIMITER_POSIX )\n"
PATH_DELIMITER_WIN32,"PATH_DELIMITER_WIN32\nvar PATH = 'C:\\Windows\\system32;C:\\Windows;C:\\Program Files\\node\\';\nvar paths = PATH.split( PATH_DELIMITER_WIN32 )\n"
PATH_SEP,"PATH_SEP\nvar parts = 'foo\\bar\\baz'.split( PATH_SEP )\nparts = 'foo/bar/baz'.split( PATH_SEP )\n"
PATH_SEP_POSIX,"PATH_SEP_POSIX\nvar parts = 'foo/bar/baz'.split( PATH_SEP_POSIX )\n"
PATH_SEP_WIN32,"PATH_SEP_WIN32\nvar parts = 'foo\\bar\\baz'.split( PATH_SEP_WIN32 )\n"
pcorrtest,"var rho = 0.5;\nvar x = new Array( 300 );\nvar y = new Array( 300 );\nfor ( var i = 0; i < 300; i++ ) {\nx[ i ] = base.random.normal( 0.0, 1.0 );\ny[ i ] = ( rho * x[ i ] ) + base.random.normal( 0.0,\nbase.sqrt( 1.0 - (rho*rho) ) );\n }\nvar out = pcorrtest( x, y )\nvar table = out.print()\n"
percentEncode,"var out = percentEncode( '☃' )\n"
PHI,"PHI\n"
PI,"PI\n"
PI_SQUARED,"PI_SQUARED\n"
pick,"var obj1 = { 'a': 1, 'b': 2 };\nvar obj2 = pick( obj1, 'b' )\n"
pickBy,"function predicate( key, value ) {\n return ( value > 1 );\n };\nvar obj1 = { 'a': 1, 'b': 2 };\nvar obj2 = pickBy( obj1, predicate )\n"
PINF,"PINF\n"
pkg2alias,"var v = pkg2alias( '@stdlib/math/base/special/sin' )\n"
pkg2related,"var v = pkg2related( '@stdlib/math/base/special/sin' )\n"
PLATFORM,"PLATFORM\n"
plot,"var plot = plot()\nvar x = [[0.10, 0.20, 0.30]];\nvar y = [[0.52, 0.79, 0.64]];\nplot = plot( x, y )\n"
Plot,"var plot = Plot()\nvar x = [[0.10, 0.20, 0.30]];\nvar y = [[0.52, 0.79, 0.64]];\nplot = Plot( x, y )\n"
pluck,"var arr = [\n { 'a': 1, 'b': 2 },\n { 'a': 0.5, 'b': 3 }\n ];\nvar out = pluck( arr, 'a' )\narr = [\n { 'a': 1, 'b': 2 },\n { 'a': 0.5, 'b': 3 }\n ];\nout = pluck( arr, 'a', { 'copy': false } )\nvar bool = ( arr[ 0 ] === out[ 0 ] )\n"
pop,"var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\nvar out = pop( arr )\narr = new Float64Array( [ 1.0, 2.0 ] );\nout = pop( arr )\narr = { 'length': 2, '0': 1.0, '1': 2.0 };\nout = pop( arr )\n"
porterStemmer,"var out = porterStemmer( 'walking' )\nout = porterStemmer( 'walked' )\nout = porterStemmer( 'walks' )\nout = porterStemmer( '' )\n"
prepend,"var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\narr = prepend( arr, [ 6.0, 7.0 ] )\narr = new Float64Array( [ 1.0, 2.0 ] );\narr = prepend( arr, [ 3.0, 4.0 ] )\narr = { 'length': 1, '0': 1.0 };\narr = prepend( arr, [ 2.0, 3.0 ] )\n"
properties,"function Foo() { this.beep = 'boop'; return this; };\nFoo.prototype.foo = 'bar';\nvar obj = new Foo();\nvar props = properties( obj )\n"
propertiesIn,"var props = propertiesIn( [] )\n"
propertyDescriptor,"var obj = { 'a': 'b' };\nvar desc = propertyDescriptor( obj, 'a' )\n"
propertyDescriptorIn,"var obj = { 'a': 'b' };\nvar desc = propertyDescriptorIn( obj, 'a' )\n"
propertyDescriptors,"var obj = { 'a': 'b' };\nvar desc = propertyDescriptors( obj )\n"
propertyDescriptorsIn,"function Foo() { this.beep = 'boop'; return this; };\nFoo.prototype.foo = 'bar';\nvar obj = new Foo();\nvar desc = propertyDescriptorsIn( obj )\n"
propertyNames,"function Foo() { this.beep = 'boop'; return this; };\nFoo.prototype.foo = 'bar';\nvar obj = new Foo();\nvar keys = propertyNames( obj )\n"
propertyNamesIn,"function Foo() { this.beep = 'boop'; return this; };\nFoo.prototype.foo = 'bar';\nvar obj = new Foo();\nvar keys = propertyNamesIn( obj )\n"
propertySymbols,"var s = propertySymbols( {} )\n"
propertySymbolsIn,"var s = propertySymbolsIn( [] )\n"
Proxy,"function get( obj, prop ) { return obj[ prop ] * 2.0 };\nvar h = { 'get': get };\nvar p = new Proxy( {}, h );\np.a = 3.14;\np.a\n"
Proxy.revocable,"function get( obj, prop ) { return obj[ prop ] * 2.0 };\nvar h = { 'get': get };\nvar p = Proxy.revocable( {}, h );\np.proxy.a = 3.14;\np.proxy.a\np.revoke();\n"
push,"var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\narr = push( arr, 6.0, 7.0 )\narr = new Float64Array( [ 1.0, 2.0 ] );\narr = push( arr, 3.0, 4.0 )\narr = { 'length': 0 };\narr = push( arr, 1.0, 2.0 )\n"
quarterOfYear,"var q = quarterOfYear( new Date() )\nq = quarterOfYear( 4 )\nq = quarterOfYear( 'June' )\nq = quarterOfYear( 'April' )\nq = quarterOfYear( 'apr' )\n"
random.iterators.arcsine,"var it = random.iterators.arcsine( 0.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.bernoulli,"var it = random.iterators.bernoulli( 0.3 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.beta,"var it = random.iterators.beta( 1.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.betaprime,"var it = random.iterators.betaprime( 1.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.binomial,"var it = random.iterators.binomial( 10, 0.3 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.boxMuller,"var it = random.iterators.boxMuller();\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.cauchy,"var it = random.iterators.cauchy( 0.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.chi,"var it = random.iterators.chi( 1.5 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.chisquare,"var it = random.iterators.chisquare( 1.5 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.cosine,"var it = random.iterators.cosine( 0.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.discreteUniform,"var it = random.iterators.discreteUniform( 0, 3 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.erlang,"var it = random.iterators.erlang( 1, 1.5 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.exponential,"var it = random.iterators.exponential( 1.5 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.f,"var it = random.iterators.f( 1.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.frechet,"var it = random.iterators.frechet( 1.0, 1.0, 0.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.gamma,"var it = random.iterators.gamma( 1.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.geometric,"var it = random.iterators.geometric( 0.3 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.gumbel,"var it = random.iterators.gumbel( 0.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.hypergeometric,"var it = random.iterators.hypergeometric( 20, 10, 7 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.improvedZiggurat,"var it = random.iterators.improvedZiggurat();\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.invgamma,"var it = random.iterators.invgamma( 1.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.kumaraswamy,"var it = random.iterators.kumaraswamy( 1.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.laplace,"var it = random.iterators.laplace( 0.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.levy,"var it = random.iterators.levy( 0.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.logistic,"var it = random.iterators.logistic( 0.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.lognormal,"var it = random.iterators.lognormal( 0.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.minstd,"var it = random.iterators.minstd();\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.minstdShuffle,"var it = random.iterators.minstdShuffle();\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.mt19937,"var it = random.iterators.mt19937();\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.negativeBinomial,"var it = random.iterators.negativeBinomial( 10, 0.3 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.normal,"var it = random.iterators.normal( 0.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.pareto1,"var it = random.iterators.pareto1( 1.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.poisson,"var it = random.iterators.poisson( 1.5 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.randi,"var it = random.iterators.randi();\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.randn,"var it = random.iterators.randn();\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.randu,"var it = random.iterators.randu();\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.rayleigh,"var it = random.iterators.rayleigh( 1.5 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.t,"var it = random.iterators.t( 1.5 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.triangular,"var it = random.iterators.triangular( 0.0, 1.0, 0.3 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.uniform,"var it = random.iterators.uniform( 0.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.iterators.weibull,"var it = random.iterators.weibull( 1.0, 1.0 );\nvar r = it.next().value\nr = it.next().value\n"
random.streams.arcsine,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.arcsine( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.arcsine.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.arcsine.factory( opts );\n"
random.streams.arcsine.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.arcsine.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.bernoulli,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.bernoulli( 0.5, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.bernoulli.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.bernoulli.factory( opts );\n"
random.streams.bernoulli.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.bernoulli.objectMode( 0.3, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.beta,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.beta( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.beta.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.beta.factory( opts );\n"
random.streams.beta.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.beta.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.betaprime,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.betaprime( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.betaprime.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.betaprime.factory( opts );\n"
random.streams.betaprime.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.betaprime.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.binomial,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.binomial( 20, 0.5, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.binomial.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.binomial.factory( opts );\n"
random.streams.binomial.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.binomial.objectMode( 20, 0.5, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.boxMuller,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.boxMuller( opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.boxMuller.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.boxMuller.factory( opts );\n"
random.streams.boxMuller.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.boxMuller.objectMode( opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.cauchy,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.cauchy( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.cauchy.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.cauchy.factory( opts );\n"
random.streams.cauchy.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.cauchy.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.chi,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.chi( 3.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.chi.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.chi.factory( opts );\n"
random.streams.chi.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.chi.objectMode( 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.chisquare,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.chisquare( 3.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.chisquare.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.chisquare.factory( opts );\n"
random.streams.chisquare.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.chisquare.objectMode( 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.cosine,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.cosine( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.cosine.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.cosine.factory( opts );\n"
random.streams.cosine.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.cosine.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.discreteUniform,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.discreteUniform( 2, 5, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.discreteUniform.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.discreteUniform.factory( opts );\n"
random.streams.discreteUniform.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.discreteUniform.objectMode( 2, 5, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.erlang,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.erlang( 2, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.erlang.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.erlang.factory( opts );\n"
random.streams.erlang.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.erlang.objectMode( 2, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.exponential,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.exponential( 3.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.exponential.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.exponential.factory( opts );\n"
random.streams.exponential.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.exponential.objectMode( 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.f,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.f( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.f.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.f.factory( opts );\n"
random.streams.f.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.f.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.frechet,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.frechet( 2.0, 5.0, 3.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.frechet.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.frechet.factory( opts );\n"
random.streams.frechet.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.frechet.objectMode( 2.0, 5.0, 3.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.gamma,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.gamma( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.gamma.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.gamma.factory( opts );\n"
random.streams.gamma.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.gamma.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.geometric,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.geometric( 0.5, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.geometric.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.geometric.factory( opts );\n"
random.streams.geometric.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.geometric.objectMode( 0.3, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.gumbel,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.gumbel( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.gumbel.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.gumbel.factory( opts );\n"
random.streams.gumbel.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.gumbel.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.hypergeometric,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.hypergeometric( 5, 3, 2, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.hypergeometric.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.hypergeometric.factory( opts );\n"
random.streams.hypergeometric.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.hypergeometric.objectMode( 5, 3, 2, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.improvedZiggurat,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.improvedZiggurat( opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.improvedZiggurat.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.improvedZiggurat.factory( opts );\n"
random.streams.improvedZiggurat.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.improvedZiggurat.objectMode( opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.invgamma,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.invgamma( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.invgamma.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.invgamma.factory( opts );\n"
random.streams.invgamma.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.invgamma.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.kumaraswamy,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.kumaraswamy( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.kumaraswamy.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.kumaraswamy.factory( opts );\n"
random.streams.kumaraswamy.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.kumaraswamy.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.laplace,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.laplace( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.laplace.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.laplace.factory( opts );\n"
random.streams.laplace.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.laplace.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.levy,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.levy( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.levy.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.levy.factory( opts );\n"
random.streams.levy.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.levy.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.logistic,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.logistic( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.logistic.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.logistic.factory( opts );\n"
random.streams.logistic.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.logistic.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.lognormal,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.lognormal( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.lognormal.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.lognormal.factory( opts );\n"
random.streams.lognormal.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.lognormal.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.minstd,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.minstd( opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.minstd.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.minstd.factory( opts );\n"
random.streams.minstd.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.minstd.objectMode( opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.minstdShuffle,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.minstdShuffle( opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.minstdShuffle.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.minstdShuffle.factory( opts );\n"
random.streams.minstdShuffle.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.minstdShuffle.objectMode( opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.mt19937,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.mt19937( opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.mt19937.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.mt19937.factory( opts );\n"
random.streams.mt19937.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.mt19937.objectMode( opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.negativeBinomial,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.negativeBinomial( 20.0, 0.5, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.negativeBinomial.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.negativeBinomial.factory( opts );\n"
random.streams.negativeBinomial.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.negativeBinomial.objectMode( 20.0, 0.5, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.normal,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.normal( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.normal.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.normal.factory( opts );\n"
random.streams.normal.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.normal.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.pareto1,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.pareto1( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.pareto1.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.pareto1.factory( opts );\n"
random.streams.pareto1.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.pareto1.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.poisson,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.poisson( 3.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.poisson.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.poisson.factory( opts );\n"
random.streams.poisson.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.poisson.objectMode( 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.randi,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.randi( opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.randi.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.randi.factory( opts );\n"
random.streams.randi.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.randi.objectMode( opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.randn,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.randn( opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.randn.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.randn.factory( opts );\n"
random.streams.randn.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.randn.objectMode( opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.randu,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.randu( opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.randu.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.randu.factory( opts );\n"
random.streams.randu.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.randu.objectMode( opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.rayleigh,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.rayleigh( 3.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.rayleigh.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.rayleigh.factory( opts );\n"
random.streams.rayleigh.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.rayleigh.objectMode( 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.t,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.t( 3.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.t.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.t.factory( opts );\n"
random.streams.t.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.t.objectMode( 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.triangular,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.triangular( 2.0, 5.0, 4.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.triangular.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.triangular.factory( opts );\n"
random.streams.triangular.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.triangular.objectMode( 2.0, 5.0, 4.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.uniform,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.uniform( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.uniform.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.uniform.factory( opts );\n"
random.streams.uniform.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.uniform.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
random.streams.weibull,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.weibull( 2.0, 5.0, opts );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
random.streams.weibull.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = random.streams.weibull.factory( opts );\n"
random.streams.weibull.objectMode,"function fcn( v ) { console.log( v ); };\nvar opts = { 'iter': 10 };\nvar s = random.streams.weibull.objectMode( 2.0, 5.0, opts );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
ranks,"var arr = [ 1.1, 2.0, 3.5, 0.0, 2.4 ] ;\nvar out = ranks( arr )\narr =  [ 2, 2, 1, 4, 3 ];\nout = ranks( arr )\narr = [ null, 2, 2, 1, 4, 3, NaN, NaN ];\nout = ranks( arr )\n"
RE_BASENAME.posix,"var base = RE_BASENAME.exec( '/foo/bar/index.js' )[ 1 ]\n"
RE_BASENAME.win32,"var base = RE_BASENAME.exec( 'C:\\foo\\bar\\index.js' )[ 1 ]\n"
RE_BASENAME_POSIX,"var base = RE_BASENAME_POSIX.exec( '/foo/bar/index.js' )[ 1 ]\nbase = RE_BASENAME_POSIX.exec( './foo/bar/.gitignore' )[ 1 ]\nbase = RE_BASENAME_POSIX.exec( 'foo/file.pdf' )[ 1 ]\nbase = RE_BASENAME_POSIX.exec( '/foo/bar/file' )[ 1 ]\nbase = RE_BASENAME_POSIX.exec( 'index.js' )[ 1 ]\nbase = RE_BASENAME_POSIX.exec( '.' )[ 1 ]\nbase = RE_BASENAME_POSIX.exec( './' )[ 1 ]\nbase = RE_BASENAME_POSIX.exec( '' )[ 1 ]\n"
RE_BASENAME_WINDOWS,"var base = RE_BASENAME_WINDOWS.exec( '\\foo\\bar\\index.js' )[ 1 ]\nbase = RE_BASENAME_WINDOWS.exec( 'C:\\foo\\bar\\.gitignore' )[ 1 ]\nbase = RE_BASENAME_WINDOWS.exec( 'foo\\file.pdf' )[ 1 ]\nbase = RE_BASENAME_WINDOWS.exec( 'foo\\bar\\file' )[ 1 ]\nbase = RE_BASENAME_WINDOWS.exec( 'index.js' )[ 1 ]\nbase = RE_BASENAME_WINDOWS.exec( '.' )[ 1 ]\nbase = RE_BASENAME_WINDOWS.exec( '' )[ 1 ]\n"
RE_COLOR_HEXADECIMAL,"var bool = RE_COLOR_HEXADECIMAL.test( 'ffffff' )\nbool = RE_COLOR_HEXADECIMAL.test( '000' )\nbool = RE_COLOR_HEXADECIMAL.test( 'beep' )\n"
RE_COLOR_HEXADECIMAL.shorthand,"var bool = RE_COLOR_HEXADECIMAL.shorthand.test( 'ffffff' )\nbool = RE_COLOR_HEXADECIMAL.shorthand.test( '000' )\nbool = RE_COLOR_HEXADECIMAL.shorthand.test( 'beep' )\n"
RE_COLOR_HEXADECIMAL.either,"var bool = RE_COLOR_HEXADECIMAL.either.test( 'ffffff' )\nbool = RE_COLOR_HEXADECIMAL.either.test( '000' )\nbool = RE_COLOR_HEXADECIMAL.either.test( 'beep' )\n"
RE_DECIMAL_NUMBER,"var bool = RE_DECIMAL_NUMBER.test( '1.234' )\nbool = RE_DECIMAL_NUMBER.test( '-1.234' )\nbool = RE_DECIMAL_NUMBER.test( '0.0' )\nbool = RE_DECIMAL_NUMBER.test( '.0' )\nbool = RE_DECIMAL_NUMBER.test( '0' )\nbool = RE_DECIMAL_NUMBER.test( 'beep' )\nvar re = new RegExp( RE_DECIMAL_NUMBER.source, 'g' );\nvar str = '1.234 5.6, 7.8';\nvar out = str.match( re )\n"
RE_DIRNAME.posix,"var dir = RE_DIRNAME.exec( '/foo/bar/index.js' )[ 1 ]\n"
RE_DIRNAME.win32,"var dir = RE_DIRNAME.exec( 'C:\\foo\\bar\\index.js' )[ 1 ]\n"
RE_DIRNAME_POSIX,"var dir = RE_DIRNAME_POSIX.exec( '/foo/bar/index.js' )[ 1 ]\ndir = RE_DIRNAME_POSIX.exec( './foo/bar/.gitignore' )[ 1 ]\ndir = RE_DIRNAME_POSIX.exec( 'foo/file.pdf' )[ 1 ]\ndir = RE_DIRNAME_POSIX.exec( '/foo/bar/file' )[ 1 ]\ndir = RE_DIRNAME_POSIX.exec( 'index.js' )[ 1 ]\ndir = RE_DIRNAME_POSIX.exec( '.' )[ 1 ]\ndir = RE_DIRNAME_POSIX.exec( './' )[ 1 ]\ndir = RE_DIRNAME_POSIX.exec( '' )[ 1 ]\n"
RE_DIRNAME_WINDOWS,"var dir = RE_DIRNAME_WINDOWS.exec( 'foo\\bar\\index.js' )[ 1 ]\ndir = RE_DIRNAME_WINDOWS.exec( 'C:\\foo\\bar\\.gitignore' )[ 1 ]\ndir = RE_DIRNAME_WINDOWS.exec( 'foo\\file.pdf' )[ 1 ]\ndir = RE_DIRNAME_WINDOWS.exec( '\\foo\\bar\\file' )[ 1 ]\ndir = RE_DIRNAME_WINDOWS.exec( 'index.js' )[ 1 ]\ndir = RE_DIRNAME_WINDOWS.exec( '' )[ 1 ]\n"
RE_EOL,"var bool = RE_EOL.test( '\n' )\nbool = RE_EOL.test( '\r\n' )\nbool = RE_EOL.test( '\\r\\n' )\n"
RE_EXTENDED_LENGTH_PATH,"var path = '\\\\?\\C:\\foo\\bar';\nvar bool = RE_EXTENDED_LENGTH_PATH.test( path )\npath = '\\\\?\\UNC\\server\\share';\nbool = RE_EXTENDED_LENGTH_PATH.test( path )\npath = 'C:\\foo\\bar';\nbool = RE_EXTENDED_LENGTH_PATH.test( path )\npath = '/c/foo/bar';\nbool = RE_EXTENDED_LENGTH_PATH.test( path )\npath = '/foo/bar';\nbool = RE_EXTENDED_LENGTH_PATH.test( path )\n"
RE_EXTNAME.posix,"var dir = RE_EXTNAME.exec( '/foo/bar/index.js' )[ 1 ]\n"
RE_EXTNAME.win32,"var dir = RE_EXTNAME.exec( 'C:\\foo\\bar\\index.js' )[ 1 ]\n"
RE_EXTNAME_POSIX,"var ext = RE_EXTNAME_POSIX.exec( '/foo/bar/index.js' )[ 1 ]\next = RE_EXTNAME_POSIX.exec( './foo/bar/.gitignore' )[ 1 ]\next = RE_EXTNAME_POSIX.exec( 'foo/file.pdf' )[ 1 ]\next = RE_EXTNAME_POSIX.exec( '/foo/bar/file' )[ 1 ]\next = RE_EXTNAME_POSIX.exec( 'index.js' )[ 1 ]\next = RE_EXTNAME_POSIX.exec( '.' )[ 1 ]\next = RE_EXTNAME_POSIX.exec( './' )[ 1 ]\next = RE_EXTNAME_POSIX.exec( '' )[ 1 ]\n"
RE_EXTNAME_WINDOWS,"var ext = RE_EXTNAME_WINDOWS.exec( 'C:\\foo\\bar\\index.js' )[ 1 ]\next = RE_EXTNAME_WINDOWS.exec( 'C:\\foo\\bar\\.gitignore' )[ 1 ]\next = RE_EXTNAME_WINDOWS.exec( 'foo\\file.pdf' )[ 1 ]\next = RE_EXTNAME_WINDOWS.exec( '\\foo\\bar\\file' )[ 1 ]\next = RE_EXTNAME_WINDOWS.exec( 'beep\\boop.' )[ 1 ]\next = RE_EXTNAME_WINDOWS.exec( 'index.js' )[ 1 ]\next = RE_EXTNAME_WINDOWS.exec( '' )[ 1 ]\n"
RE_FILENAME.posix,"var f = '/foo/bar/index.js';\nvar parts = RE_FILENAME.exec( f ).slice()\n"
RE_FILENAME.win32,"var f = 'C:\\foo\\bar\\index.js';\nvar parts = RE_FILENAME.exec( f ).slice()\n"
RE_FILENAME_POSIX,"var parts = RE_FILENAME_POSIX.exec( '/foo/bar/index.js' ).slice()\nparts = RE_FILENAME_POSIX.exec( './foo/bar/.gitignore' ).slice()\nparts = RE_FILENAME_POSIX.exec( 'foo/file.pdf' ).slice()\nparts = RE_FILENAME_POSIX.exec( '/foo/bar/file' ).slice()\nparts = RE_FILENAME_POSIX.exec( 'index.js' ).slice()\nparts = RE_FILENAME_POSIX.exec( '.' ).slice()\nparts = RE_FILENAME_POSIX.exec( './' ).slice()\nparts = RE_FILENAME_POSIX.exec( '' ).slice()\n"
RE_FILENAME_WINDOWS,"var parts = RE_FILENAME_WINDOWS.exec( 'C:\\foo\\bar\\index.js' ).slice()\nparts = RE_FILENAME_WINDOWS.exec( '\\foo\\bar\\.gitignore' ).slice()\nparts = RE_FILENAME_WINDOWS.exec( 'foo\\file.pdf' ).slice()\nparts = RE_FILENAME_WINDOWS.exec( '\\foo\\bar\\file' ).slice()\nparts = RE_FILENAME_WINDOWS.exec( 'index.js' ).slice()\nparts = RE_FILENAME_WINDOWS.exec( '.' ).slice()\nparts = RE_FILENAME_WINDOWS.exec( './' ).slice()\nparts = RE_FILENAME_WINDOWS.exec( '' ).slice()\n"
RE_FUNCTION_NAME,"function beep() { return 'boop'; };\nvar name = RE_FUNCTION_NAME.exec( beep.toString() )[ 1 ]\nname = RE_FUNCTION_NAME.exec( function () {} )[ 1 ]\n"
RE_NATIVE_FUNCTION,"var bool = RE_NATIVE_FUNCTION.test( Date.toString() )\nbool = RE_NATIVE_FUNCTION.test( (function noop() {}).toString() )\n"
RE_REGEXP,"var bool = RE_REGEXP.test( '/^beep$/' )\nbool = RE_REGEXP.test( '/boop' )\nbool = RE_REGEXP.test( '/^\/([^\/]+)\/(.*)$/' )\nbool = RE_REGEXP.test( '/^\\/([^\\/]+)\\/(.*)$/' )\n"
RE_UNC_PATH,"var path = '\\\\server\\share\\foo\\bar\\baz:a:b';\nvar bool = RE_UNC_PATH.test( path )\npath = '\\\\server\\share\\foo\\bar\\baz::b';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\server\\share\\foo\\bar\\baz:a';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\server\\share\\foo\\bar\\baz';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\server\\share\\foo\\bar';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\server\\share\\foo';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\server\\share';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\server\\\\share';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\\\\\server\\share';\nbool = RE_UNC_PATH.test( path )\npath = 'beep boop \\\\server\\share';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\server';\nbool = RE_UNC_PATH.test( path )\npath = '\\';\nbool = RE_UNC_PATH.test( path )\npath = '';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\server\\share\\';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\server\\share\\foo\\bar\\baz:';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\server\\share\\foo\\bar\\baz:a:';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\server\\share\\foo\\bar\\baz::';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\server\\share\\foo\\bar\\baz:a:b:c';\nbool = RE_UNC_PATH.test( path )\npath = '\\\\server\\share\\foo\\bar\\';\nbool = RE_UNC_PATH.test( path )\npath = '//server/share';\nbool = RE_UNC_PATH.test( path )\npath = '/foo/bar';\nbool = RE_UNC_PATH.test( path )\npath = 'foo/bar';\nbool = RE_UNC_PATH.test( path )\npath = './foo/bar';\nbool = RE_UNC_PATH.test( path )\npath = '/foo/../bar';\nbool = RE_UNC_PATH.test( path )\n"
RE_UTF16_SURROGATE_PAIR,"var bool = RE_UTF16_SURROGATE_PAIR.test( 'abc\uD800\uDC00def' )\nbool = RE_UTF16_SURROGATE_PAIR.test( 'abcdef' )\n"
RE_UTF16_UNPAIRED_SURROGATE,"var bool = RE_UTF16_UNPAIRED_SURROGATE.test( 'abc' )\nbool = RE_UTF16_UNPAIRED_SURROGATE.test( '\uD800' )\n"
RE_WHITESPACE,"var bool = RE_WHITESPACE.test( '\n' )\nbool = RE_WHITESPACE.test( ' ' )\nbool = RE_WHITESPACE.test( 'a' )\n"
readDir,"function onRead( error, data ) {\n if ( error ) {\n     console.error( error.message );\n } else {\n     console.log( data );\n }\n };\nreadDir( './beep/boop', onRead );\n"
readDir.sync,"var out = readDir.sync( './beep/boop' );\n"
readFile,"function onRead( error, data ) {\n if ( error ) {\n     console.error( error.message );\n } else {\n     console.log( data );\n }\n };\nreadFile( './beep/boop.js', onRead );\n"
readFile.sync,"var out = readFile.sync( './beep/boop.js' );\n"
readFileList,"function onRead( error, data ) {\n if ( error ) {\n     console.error( error.message );\n } else {\n     console.log( data );\n }\n };\nvar filepaths = [ './beep/boop.txt', './foo/bar.txt' ];\nreadFileList( filepaths, onRead );\n"
readFileList.sync,"var filepaths = [ './beep/boop.txt', './foo/bar.txt' ];\nvar out = readFileList.sync( filepaths );\n"
readJSON,"function onRead( error, data ) {\n if ( error ) {\n     console.error( error.message );\n } else {\n     console.log( data );\n }\n };\nreadJSON( './beep/boop.json', onRead );\n"
readJSON.sync,"var out = readJSON.sync( './beep/boop.json' );\n"
readWASM,"function onRead( error, data ) {\n if ( error ) {\n     console.error( error.message );\n } else {\n     console.log( data );\n }\n };\nreadWASM( './beep/boop.wasm', onRead );\n"
readWASM.sync,"var out = readWASM.sync( './beep/boop.wasm' );\n"
real,"var z = new Complex128( 5.0, 3.0 );\nvar re = real( z )\n"
realmax,"var m = realmax( 'float16' )\nm = realmax( 'float32' )\n"
realmin,"var m = realmin( 'float16' )\nm = realmin( 'float32' )\n"
reduce,"function sum( acc, v ) { return acc + v; };\nvar arr = [ 1.0, 2.0, 3.0 ];\nvar out = reduce( arr, 0, sum )\n"
reduceAsync,"function fcn( acc, value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     acc.sum += value;\n     next( null, acc );\n }\n };\nfunction done( error, acc ) {\n if ( error ) {\n     throw error;\n }\n console.log( acc.sum );\n };\nvar arr = [ 3000, 2500, 1000 ];\nvar acc = { 'sum': 0 };\nreduceAsync( arr, acc, fcn, done )\nfunction fcn( acc, value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     acc.sum += value;\n     next( null, acc );\n }\n };\nfunction done( error, acc ) {\n if ( error ) {\n     throw error;\n }\n console.log( acc.sum );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 3000, 2500, 1000 ];\nvar acc = { 'sum': 0 };\nreduceAsync( arr, acc, opts, fcn, done )\nfunction fcn( acc, value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     acc.sum += value;\n     next( null, acc );\n }\n };\nfunction done( error, acc ) {\n if ( error ) {\n     throw error;\n }\n console.log( acc.sum );\n };\nvar opts = { 'series': false };\nvar arr = [ 3000, 2500, 1000 ];\nvar acc = { 'sum': 0 };\nreduceAsync( arr, acc, opts, fcn, done )\n"
reduceAsync.factory,"function fcn( acc, value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     acc.sum += value;\n     next( null, acc );\n }\n };\nvar opts = { 'series': false };\nvar f = reduceAsync.factory( opts, fcn );\nfunction done( error, acc ) {\n if ( error ) {\n     throw error;\n }\n console.log( acc.sum );\n };\nvar arr = [ 3000, 2500, 1000 ];\nvar acc = { 'sum': 0 };\nf( arr, acc, done )\nacc = { 'sum': 0 };\narr = [ 2000, 1500, 1000 ];\nf( arr, acc, done )\n"
reduceRight,"function sum( acc, v ) {\n console.log( '%s: %d', acc, v );\n return acc + v;\n };\nvar arr = [ 1.0, 2.0, 3.0 ];\nvar out = reduceRight( arr, 0, sum );\nout\n"
reduceRightAsync,"function fcn( acc, value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     acc.sum += value;\n     next( null, acc );\n }\n };\nfunction done( error, acc ) {\n if ( error ) {\n     throw error;\n }\n console.log( acc.sum );\n };\nvar arr = [ 1000, 2500, 3000 ];\nvar acc = { 'sum': 0 };\nreduceRightAsync( arr, acc, fcn, done )\nfunction fcn( acc, value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     acc.sum += value;\n     next( null, acc );\n }\n };\nfunction done( error, acc ) {\n if ( error ) {\n     throw error;\n }\n console.log( acc.sum );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 1000, 2500, 3000 ];\nvar acc = { 'sum': 0 };\nreduceRightAsync( arr, acc, opts, fcn, done )\nfunction fcn( acc, value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     acc.sum += value;\n     next( null, acc );\n }\n };\nfunction done( error, acc ) {\n if ( error ) {\n     throw error;\n }\n console.log( acc.sum );\n };\nvar opts = { 'series': false };\nvar arr = [ 1000, 2500, 3000 ];\nvar acc = { 'sum': 0 };\nreduceRightAsync( arr, acc, opts, fcn, done )\n"
reduceRightAsync.factory,"function fcn( acc, value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     acc.sum += value;\n     next( null, acc );\n }\n };\nvar opts = { 'series': false };\nvar f = reduceRightAsync.factory( opts, fcn );\nfunction done( error, acc ) {\n if ( error ) {\n     throw error;\n }\n console.log( acc.sum );\n };\nvar arr = [ 1000, 2500, 3000 ];\nvar acc = { 'sum': 0 };\nf( arr, acc, done )\nacc = { 'sum': 0 };\narr = [ 1000, 1500, 2000 ];\nf( arr, acc, done )\n"
reFromString,"var re = reFromString( '/beep/' )\nre = reFromString( '/beep' )\n"
reim,"var z = new Complex128( 5.0, 3.0 );\nvar out = reim( z )\n"
removeFirst,"var out = removeFirst( 'beep' )\nout = removeFirst( 'Boop' )\n"
removeLast,"var out = removeLast( 'beep' )\nout = removeLast( 'Boop' )\n"
removePunctuation,"var str = 'Sun Tzu said: \"A leader leads by example not by force.\"';\nvar out = removePunctuation( str )\nstr = 'This function removes these characters: `{}[]:,!/<>().;~|?\'\"';\nout = removePunctuation( str )\n"
removeUTF8BOM,"var out = removeUTF8BOM( '\ufeffbeep' )\n"
removeWords,"var out = removeWords( 'beep boop Foo bar', [ 'boop', 'foo' ] )\nout = removeWords( 'beep boop Foo bar', [ 'boop', 'foo' ], true )\n"
rename,"function done( error ) {\n if ( error ) {\n     console.error( error.message );\n }\n };\nrename( './beep/boop.txt', './beep/foo.txt', done );\n"
rename.sync,"var err = rename.sync( './beep/boop.txt', './beep/foo.txt' );\n"
reorderArguments,"function foo( a, b, c ) { return [ a, b, c ]; };\nvar bar = reorderArguments( foo, [ 2, 0, 1 ] );\nvar out = bar( 1, 2, 3 )\n"
repeat,"var out = repeat( 'a', 5 )\nout = repeat( '', 100 )\nout = repeat( 'beep', 0 )\n"
replace,"var out = replace( 'beep', 'e', 'o' )\nfunction replacer( match, p1 ) { return '/'+p1+'/'; };\nvar str = 'Oranges and lemons';\nout = replace( str, /([^\s]+)/gi, replacer )\nout = replace( 'beep', /e/, 'o' )\n"
rescape,"var str = rescape( '[A-Z]*' )\n"
resolveParentPath,"function onPath( error, path ) {\n if ( error ) {\n     console.error( error.message );\n } else {\n     console.log( path );\n }\n };\nresolveParentPath( 'package.json', onPath );\n"
resolveParentPath.sync,"var out = resolveParentPath.sync( 'package.json' );\n"
reverseArguments,"function foo( a, b, c ) { return [ a, b, c ]; };\nvar bar = reverseArguments( foo );\nvar out = bar( 1, 2, 3 )\n"
reverseString,"var out = reverseString( 'foo' )\nout = reverseString( 'abcdef' )\n"
reviveBasePRNG,"var str = JSON.stringify( base.random.mt19937 );\nvar r = parseJSON( str, reviveBasePRNG )\n"
reviveBuffer,"var str = '{\"type\":\"Buffer\",\"data\":[5,3]}';\nvar buf = parseJSON( str, reviveBuffer )\n"
reviveComplex,"var str = '{\"type\":\"Complex128\",\"re\":5,\"im\":3}';\nvar z = parseJSON( str, reviveComplex )\n"
reviveComplex64,"var str = '{\"type\":\"Complex64\",\"re\":5,\"im\":3}';\nvar z = parseJSON( str, reviveComplex64 )\n"
reviveComplex128,"var str = '{\"type\":\"Complex128\",\"re\":5,\"im\":3}';\nvar z = parseJSON( str, reviveComplex128 )\n"
reviveError,"var str = '{\"type\":\"TypeError\",\"message\":\"beep\"}';\nvar err = JSON.parse( str, reviveError )\n"
reviveTypedArray,"var str = '{\"type\":\"Float64Array\",\"data\":[5,3]}';\nvar arr = parseJSON( str, reviveTypedArray )\n"
rpad,"var out = rpad( 'a', 5 )\nout = rpad( 'beep', 10, 'p' )\nout = rpad( 'beep', 12, 'boop' )\n"
rtrim,"var out = rtrim( ' \t\t\n  Beep \r\n\t  ' )\n"
safeintmax,"var m = safeintmax( 'float16' )\nm = safeintmax( 'float32' )\n"
safeintmin,"var m = safeintmin( 'float16' )\nm = safeintmin( 'float32' )\n"
sample,"var out = sample( 'abc' )\nout = sample( [ 3, 6, 9 ] )\nvar bool = ( out.length === 3 )\nout = sample( [ 3, null, NaN, 'abc', function(){} ] )\nout = sample( [ 3, 6, 9 ], { 'size': 10 })\nout = sample( [ 0, 1 ], { 'size': 20 })\nout = sample( [ 1, 2, 3, 4, 5, 6 ], { 'replace': false, 'size': 3 })\nout = sample( [ 0, 1 ], { 'replace': false })\nvar x = [ 1, 2, 3, 4, 5, 6 ];\nvar probs = [ 0.1, 0.1, 0.1, 0.1, 0.1, 0.5 ];\nout = sample( x, { 'probs': probs })\nout = sample( x, { 'probs': probs, 'size': 3, 'replace': false })\n"
sample.factory,"var mysample = sample.factory({ 'seed': 232 });\nvar out = mysample( 'abcdefg' )\nvar pool = [ 1, 2, 3, 4, 5, 6 ];\nmysample = sample.factory( pool, { 'seed': 232, 'size': 2 });\nout = mysample()\nout = mysample()\nvar opts = { 'seed': 474, 'size': 3, 'mutate': true, 'replace': false };\npool = [ 1, 2, 3, 4, 5, 6 ];\nmysample = sample.factory( pool, opts );\nout = mysample()\nout = mysample()\nout = mysample()\nmysample = sample.factory( [ 0, 1 ], { 'size': 2 });\nout = mysample()\nout = mysample({ 'size': 10 })\nmysample = sample.factory( [ 0, 1 ], { 'size': 2 });\nout = mysample()\nout = mysample({ 'replace': false })\nout = mysample()\n"
SAVOY_STOPWORDS_FIN,"var list = SAVOY_STOPWORDS_FIN()\n"
SAVOY_STOPWORDS_FR,"var list = SAVOY_STOPWORDS_FR()\n"
SAVOY_STOPWORDS_GER,"var list = SAVOY_STOPWORDS_GER()\n"
SAVOY_STOPWORDS_IT,"var list = SAVOY_STOPWORDS_IT()\n"
SAVOY_STOPWORDS_POR,"var list = SAVOY_STOPWORDS_POR()\n"
SAVOY_STOPWORDS_SP,"var list = SAVOY_STOPWORDS_SP()\n"
SAVOY_STOPWORDS_SWE,"var list = SAVOY_STOPWORDS_SWE()\n"
SECONDS_IN_DAY,"var days = 3.14;\nvar secs = days * SECONDS_IN_DAY\n"
SECONDS_IN_HOUR,"var hrs = 3.14;\nvar secs = hrs * SECONDS_IN_HOUR\n"
SECONDS_IN_MINUTE,"var mins = 3.14;\nvar secs = mins * SECONDS_IN_MINUTE\n"
SECONDS_IN_WEEK,"var wks = 3.14;\nvar secs = wks * SECONDS_IN_WEEK\n"
secondsInMonth,"var num = secondsInMonth()\nnum = secondsInMonth( 2 )\nnum = secondsInMonth( 2, 2016 )\nnum = secondsInMonth( 2, 2017 )\nnum = secondsInMonth( 'feb', 2016 )\nnum = secondsInMonth( 'february', 2016 )\n"
secondsInYear,"var num = secondsInYear()\nnum = secondsInYear( 2016 )\nnum = secondsInYear( 2017 )\n"
setConfigurableReadOnly,"var obj = {};\nsetConfigurableReadOnly( obj, 'foo', 'bar' );\nobj.foo = 'boop';\nobj\n"
setConfigurableReadOnlyAccessor,"var obj = {};\nfunction getter() { return 'bar'; };\nsetConfigurableReadOnlyAccessor( obj, 'foo', getter );\nobj.foo\n"
setConfigurableReadWriteAccessor,"var obj = {};\nvar name = 'bar';\nfunction getter() { return name + ' foo'; };\nfunction setter( v ) { name = v; };\nsetConfigurableReadWriteAccessor( obj, 'foo', getter, setter );\nobj.foo\nobj.foo = 'beep';\nobj.foo\n"
setConfigurableWriteOnlyAccessor,"var obj = {};\nvar val = '';\nfunction setter( v ) { val = v; };\nsetConfigurableWriteOnlyAccessor( obj, 'foo', setter );\nobj.foo = 'bar';\nval\n"
setMemoizedConfigurableReadOnly,"var obj = {};\nfunction foo() { return 'bar'; };\nsetMemoizedConfigurableReadOnly( obj, 'foo', foo );\nobj.foo\n"
setMemoizedReadOnly,"var obj = {};\nfunction foo() { return 'bar'; };\nsetMemoizedReadOnly( obj, 'foo', foo );\nobj.foo\n"
setNonEnumerableProperty,"var obj = {};\nsetNonEnumerableProperty( obj, 'foo', 'bar' );\nobj.foo\nobjectKeys( obj )\n"
setNonEnumerableReadOnly,"var obj = {};\nsetNonEnumerableReadOnly( obj, 'foo', 'bar' );\nobj.foo = 'boop';\nobj\n"
setNonEnumerableReadOnlyAccessor,"var obj = {};\nfunction getter() { return 'bar'; };\nsetNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\nobj.foo\n"
setNonEnumerableReadWriteAccessor,"var obj = {};\nvar name = 'bar';\nfunction getter() { return name + ' foo'; };\nfunction setter( v ) { name = v; };\nsetNonEnumerableReadWriteAccessor( obj, 'foo', getter, setter );\nobj.foo\nobj.foo = 'beep';\nobj.foo\n"
setNonEnumerableWriteOnlyAccessor,"var obj = {};\nvar val = '';\nfunction setter( v ) { val = v; };\nsetNonEnumerableWriteOnlyAccessor( obj, 'foo', setter );\nobj.foo = 'bar';\nval\n"
setReadOnly,"var obj = {};\nsetReadOnly( obj, 'foo', 'bar' );\nobj.foo = 'boop';\nobj\n"
setReadOnlyAccessor,"var obj = {};\nfunction getter() { return 'bar'; };\nsetReadOnlyAccessor( obj, 'foo', getter );\nobj.foo\n"
setReadWriteAccessor,"var obj = {};\nvar name = 'bar';\nfunction getter() { return name + ' foo'; };\nfunction setter( v ) { name = v; };\nsetReadWriteAccessor( obj, 'foo', getter, setter );\nobj.foo\nobj.foo = 'beep';\nobj.foo\n"
setWriteOnlyAccessor,"var obj = {};\nvar val = '';\nfunction setter( v ) { val = v; };\nsetWriteOnlyAccessor( obj, 'foo', setter );\nobj.foo = 'bar';\nval\n"
SharedArrayBuffer,"var buf = new SharedArrayBuffer( 5 )\n"
SharedArrayBuffer.length,"SharedArrayBuffer.length\n"
SharedArrayBuffer.prototype.byteLength,"var buf = new SharedArrayBuffer( 5 );\nbuf.byteLength\n"
SharedArrayBuffer.prototype.slice,"var b1 = new SharedArrayBuffer( 10 );\nvar b2 = b1.slice( 2, 6 );\nvar bool = ( b1 === b2 )\nb2.byteLength\n"
shift,"var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\nvar out = shift( arr )\narr = new Float64Array( [ 1.0, 2.0 ] );\nout = shift( arr )\narr = { 'length': 2, '0': 1.0, '1': 2.0 };\nout = shift( arr )\n"
shuffle,"var data = [ 1, 2, 3 ];\nvar out = shuffle( data )\nout = shuffle( data, { 'copy': 'none' });\nvar bool = ( data === out )\n"
shuffle.factory,"var myshuffle = shuffle.factory();\nmyshuffle = shuffle.factory({ 'seed': 239 });\nvar arr = [ 0, 1, 2, 3, 4 ];\nvar out = myshuffle( arr )\nmyshuffle = shuffle.factory({ 'copy': 'none', 'seed': 867 });\narr = [ 1, 2, 3, 4, 5, 6 ];\nout = myshuffle( arr );\nvar bool = ( arr === out )\narr = [ 1, 2, 3, 4 ];\nout = myshuffle( arr, { 'copy': 'shallow' });\nbool = ( arr === out )\n"
sizeOf,"var s = sizeOf( 'int8' )\ns = sizeOf( 'uint32' )\n"
some,"var arr = [ 0, 0, 1, 2, 3 ];\nvar bool = some( arr, 3 )\n"
someBy,"function negative( v ) { return ( v < 0 ); };\nvar arr = [ 1, 2, -3, 4, -1 ];\nvar bool = someBy( arr, 2, negative )\n"
someByAsync,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 3000, 2500, 1000 ];\nsomeByAsync( arr, 2, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 3000, 2500, 1000 ];\nsomeByAsync( arr, 2, opts, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'series': true };\nvar arr = [ 3000, 2500, 1000 ];\nsomeByAsync( arr, 2, opts, predicate, done )\n"
someByAsync.factory,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nvar opts = { 'series': true };\nvar f = someByAsync.factory( opts, predicate );\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 3000, 2500, 1000 ];\nf( arr, 2, done )\narr = [ 2000, 1500, 1000 ];\nf( arr, 2, done )\n"
someByRight,"function negative( v ) { return ( v < 0 ); };\nvar arr = [ -1, 1, -2, 3, 4 ];\nvar bool = someByRight( arr, 2, negative )\n"
someByRightAsync,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 1000, 2500, 3000 ];\nsomeByRightAsync( arr, 2, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 1000, 2500, 3000 ];\nsomeByRightAsync( arr, 2, opts, predicate, done )\nfunction predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar opts = { 'series': true };\nvar arr = [ 1000, 2500, 3000 ];\nsomeByRightAsync( arr, 2, opts, predicate, done )\n"
someByRightAsync.factory,"function predicate( value, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, false );\n }\n };\nvar opts = { 'series': true };\nvar f = someByRightAsync.factory( opts, predicate );\nfunction done( error, bool ) {\n if ( error ) {\n     throw error;\n }\n console.log( bool );\n };\nvar arr = [ 1000, 2500, 3000 ];\nf( arr, 2, done )\narr = [ 1000, 1500, 2000 ];\nf( arr, 2, done )\n"
SOTU,"var out = SOTU()\nvar opts = { 'name': 'Barack Obama' };\nout = SOTU( opts )\nopts = { 'party': [ 'Democratic', 'Federalist' ] };\nout = SOTU( opts )\nopts = { 'year': [ 2008, 2009, 2011 ] };\nout = SOTU( opts )\nopts = { 'range': [ 2008, 2016 ] }\nout = SOTU( opts )\n"
SPACHE_REVISED,"var list = SPACHE_REVISED()\n"
SPAM_ASSASSIN,"var data = SPAM_ASSASSIN()\n"
SparklineBase,"var sparkline = new SparklineBase()\nvar data = [ 1, 2, 3 ];\nsparkline = new SparklineBase( data )\n"
sparsearray2iterator,"var it = sparsearray2iterator( [ 1, , 3, 4 ] );\nvar v = it.next().value\nv = it.next().value\n"
sparsearray2iteratorRight,"var it = sparsearray2iteratorRight( [ 1, 2, , 4 ] );\nvar v = it.next().value\nv = it.next().value\n"
splitStream,"var s = splitStream();\ns.write( 'a\nb\nc' );\ns.end();\n"
splitStream.factory,"var opts = { 'highWaterMark': 64 };\nvar createStream = splitStream.factory( opts );\nvar s = createStream();\ns.write( 'a\nb\nc' );\ns.end();\n"
splitStream.objectMode,"var s = splitStream.objectMode();\ns.write( 'a\nb\c' );\ns.end();\n"
SQRT_EPS,"SQRT_EPS\n"
SQRT_HALF,"SQRT_HALF\n"
SQRT_HALF_PI,"SQRT_HALF_PI\n"
SQRT_PHI,"SQRT_PHI\n"
SQRT_PI,"SQRT_PI\n"
SQRT_THREE,"SQRT_THREE\n"
SQRT_TWO,"SQRT_TWO\n"
SQRT_TWO_PI,"SQRT_TWO_PI\n"
Stack,"var s = Stack();\ns.push( 'foo' ).push( 'bar' );\ns.length\ns.pop()\ns.length\ns.pop()\ns.length\n"
startcase,"var out = startcase( 'beep boop' )\n"
startsWith,"var bool = startsWith( 'Beep', 'Be' )\nbool = startsWith( 'Beep', 'ep' )\nbool = startsWith( 'Beep', 'ee', 1 )\nbool = startsWith( 'Beep', 'ee', -3 )\nbool = startsWith( 'Beep', '' )\n"
STOPWORDS_EN,"var list = STOPWORDS_EN()\n"
stridedarray2iterator,"var it = stridedarray2iterator( 2, [ 1, 2, 3, 4 ], -2, 3 );\nvar v = it.next().value\nv = it.next().value\n"
stridedArrayStream,"function fcn( chunk ) { console.log( chunk.toString() ); };\nvar s = stridedArrayStream( 3, [ 1, 2, 3 ], 1, 0 );\nvar o = inspectSinkStream( fcn );\ns.pipe( o );\n"
stridedArrayStream.factory,"var opts = { 'objectMode': true, 'highWaterMark': 64 };\nvar createStream = stridedArrayStream.factory( opts );\n"
stridedArrayStream.objectMode,"function fcn( v ) { console.log( v ); };\nvar s = stridedArrayStream.objectMode( 3, [ 1, 2, 3 ], 1, 0 );\nvar o = inspectSinkStream.objectMode( fcn );\ns.pipe( o );\n"
string2buffer,"var b = string2buffer( 'beep boop' )\nb = string2buffer( '7468697320697320612074c3a97374', 'hex' );\nb.toString()\n"
sub2ind,"var d = [ 3, 3, 3 ];\nvar idx = sub2ind( d, 1, 2, 2 )\n"
SUTHAHARAN_MULTI_HOP_SENSOR_NETWORK,"var data = SUTHAHARAN_MULTI_HOP_SENSOR_NETWORK()\n"
SUTHAHARAN_SINGLE_HOP_SENSOR_NETWORK,"var data = SUTHAHARAN_SINGLE_HOP_SENSOR_NETWORK()\n"
Symbol,"var s = ( Symbol ) ? Symbol( 'beep' ) : null\n"
tabulate,"var collection = [ 'beep', 'boop', 'foo', 'beep' ];\nvar out = tabulate( collection )\n"
tabulateBy,"function indicator( value ) { return value[ 0 ]; };\nvar collection = [ 'beep', 'boop', 'foo', 'beep' ];\nvar out = tabulateBy( collection, indicator )\n"
tabulateByAsync,"function indicator( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) ? 'even': 'odd' );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar arr = [ 3000, 2500, 1000, 750 ];\ntabulateByAsync( arr, indicator, done )\nfunction indicator( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) ? 'even' : 'odd' );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar opts = { 'limit': 2 };\nvar arr = [ 3000, 2500, 1000, 750 ];\ntabulateByAsync( arr, opts, indicator, done )\nfunction indicator( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) ? 'even' : 'odd' );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar opts = { 'series': true };\nvar arr = [ 3000, 2500, 1000, 750 ];\ntabulateByAsync( arr, opts, indicator, done )\n"
tabulateByAsync.factory,"function indicator( value, index, next ) {\n setTimeout( onTimeout, value );\n function onTimeout() {\n     console.log( value );\n     next( null, ( index%2 === 0 ) ? 'even' : 'odd' );\n }\n };\nvar opts = { 'series': true };\nvar f = tabulateByAsync.factory( opts, indicator );\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nvar arr = [ 3000, 2500, 1000, 750 ];\nf( arr, done )\narr = [ 2000, 1500, 1000, 750 ];\nf( arr, done )\n"
tic,"var t = tic()\n"
timeit,"var code = 'var x = Math.pow( Math.random(), 3 );';\ncode += 'if ( x !== x ) {';\ncode += 'throw new Error( \'Something went wrong.\' );';\ncode += '}';\nfunction done( error, results ) {\n if ( error ) {\n     throw error;\n }\n console.dir( results );\n };\ntimeit( code, done )\n"
tmpdir,"var dir = tmpdir()\n"
toc,"var start = tic();\nvar delta = toc( start )\n"
tokenize,"var out = tokenize( 'Hello Mrs. Maple, could you call me back?' )\nout = tokenize( 'Hello World!', true )\n"
transformStream,"var s = transformStream();\ns.write( 'a' );\ns.write( 'b' );\ns.write( 'c' );\ns.end();\n"
transformStream.factory,"var opts = { 'highWaterMark': 64 };\nvar createStream = transformStream.factory( opts );\nfunction fcn( chunk, enc, cb ) { cb( null, chunk.toString()+'-beep' ); };\nvar s = createStream( fcn );\ns.write( 'a' );\ns.write( 'b' );\ns.write( 'c' );\ns.end();\n"
transformStream.objectMode,"var s = transformStream.objectMode();\ns.write( { 'value': 'a' } );\ns.write( { 'value': 'b' } );\ns.write( { 'value': 'c' } );\ns.end();\n"
transformStream.ctor,"function fcn( chunk, enc, cb ) { cb( null, chunk.toString()+'-beep' ); };\nvar opts = { 'highWaterMark': 64, 'transform': fcn };\nvar customStream = transformStream.ctor( opts );\nvar s = customStream();\ns.write( 'a' );\ns.write( 'b' );\ns.write( 'c' );\ns.end();\n"
trim,"var out = trim( ' \t\t\n  Beep \r\n\t  ' )\n"
trycatch,"function x() {\n if ( base.random.randu() < 0.5 ) {\n     throw new Error( 'beep' );\n }\n return 1.0;\n };\nvar z = trycatch( x, -1.0 )\n"
trycatchAsync,"function x( clbk ) {\n setTimeout( onTimeout, 0 );\n function onTimeout() {\n     clbk( new Error( 'beep' ) );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     // process error...\n }\n console.log( result );\n };\ntrycatchAsync( x, 'boop', done )\n"
tryFunction,"function fcn() { throw new Error( 'beep boop' ); };\nvar f = tryFunction( fcn );\nvar out = f();\nout.message\n"
tryRequire,"var out = tryRequire( '_unknown_module_id_' )\n"
trythen,"function x() {\n if ( base.random.randu() < 0.5 ) {\n     throw new Error( 'beep' );\n }\n return 1.0;\n };\nfunction y() {\n return -1.0;\n };\nvar z = trythen( x, y )\n"
trythenAsync,"function x( clbk ) {\n setTimeout( onTimeout, 0 );\n function onTimeout() {\n     clbk( new Error( 'beep' ) );\n }\n };\nfunction y( clbk ) {\n setTimeout( onTimeout, 0 );\n function onTimeout() {\n     clbk( null, 'boop' );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\ntrythenAsync( x, y, done )\n"
ttest,"var rnorm = base.random.normal.factory( 0.0, 2.0, { 'seed': 5776 });\nvar x = new Array( 100 );\nfor ( var i = 0; i < x.length; i++ ) {\n x[ i ] = rnorm();\n }\nvar out = ttest( x )\nrnorm = base.random.normal.factory( 1.0, 2.0, { 'seed': 786 });\nx = new Array( 100 );\nvar y = new Array( 100 );\nfor ( i = 0; i < x.length; i++ ) {\n x[ i ] = rnorm();\n y[ i ] = rnorm();\n }\nout = ttest( x, y )\nvar table = out.print()\narr = [ 2, 4, 3, 1, 0 ];\nout = ttest( arr, { 'alpha': 0.01 });\ntable = out.print()\nvar arr = [ 4, 4, 6, 6, 5 ];\nout = ttest( arr, { 'mu': 5 })\narr = [ 4, 4, 6, 6, 5 ];\nout = ttest( arr, { 'alternative': 'less' });\ntable = out.print()\nout = ttest( arr, { 'alternative': 'greater' });\ntable = out.print()\n"
ttest2,"var x = [ 0.7, -1.6, -0.2, -1.2, -0.1, 3.4, 3.7, 0.8, 0.0, 2.0 ];\nvar y = [ 1.9, 0.8, 1.1, 0.1, -0.1, 4.4, 5.5, 1.6, 4.6, 3.4 ];\nvar out = ttest2( x, y )\nvar table = out.print()\nout = ttest2( x, y, { 'alpha': 0.1 });\ntable = out.print()\nout = ttest2( x, y, { 'alternative': 'less' });\ntable = out.print()\nout = ttest2( x, y, { 'alternative': 'greater' });\ntable = out.print()\nx = [ 2, 3, 1, 4 ];\ny = [ 1, 2, 3, 1, 2, 5, 3, 4 ];\nout = ttest2( x, y, { 'variance': 'equal' });\ntable = out.print()\nvar rnorm = base.random.normal.factory({ 'seed': 372 });\nx = new Array( 100 );\nfor ( i = 0; i < x.length; i++ ) {\n x[ i ] = rnorm( 2.0, 3.0 );\n }\ny = new Array( 100 );\nfor ( i = 0; i < x.length; i++ ) {\n y[ i ] = rnorm( 1.0, 3.0 );\n }\nout = ttest2( x, y, { 'difference': 1.0, 'variance': 'equal' })\n"
TWO_PI,"TWO_PI\n"
typedarray,"var arr = typedarray()\narr = typedarray( 'float32' )\nvar arr = typedarray( 5 )\narr = typedarray( 5, 'int32' )\nvar arr1 = typedarray( [ 0.5, 0.5, 0.5 ] );\nvar arr2 = typedarray( arr1, 'float32' )\nvar arr1 = [ 0.5, 0.5, 0.5 ];\nvar arr2 = typedarray( arr1, 'float32' )\nvar buf = new ArrayBuffer( 16 );\nvar arr = typedarray( buf, 0, 4, 'float32' )\n"
typedarray2json,"var arr = new Float64Array( 2 );\narr[ 0 ] = 5.0;\narr[ 1 ] = 3.0;\nvar json = typedarray2json( arr )\n"
typedarrayComplexCtors,"var ctor = typedarrayComplexCtors( 'complex64' )\nctor = typedarrayComplexCtors( 'float32' )\n"
typedarrayComplexDataTypes,"var out = typedarrayComplexDataTypes()\n"
typedarrayCtors,"var ctor = typedarrayCtors( 'float64' )\nctor = typedarrayCtors( 'float' )\n"
typedarrayDataTypes,"var out = typedarrayDataTypes()\n"
typedarraypool,"var arr = typedarraypool()\narr = typedarraypool( 'float32' )\nvar arr = typedarraypool( 5 )\narr = typedarraypool( 5, 'int32' )\nvar arr1 = typedarraypool( [ 0.5, 0.5, 0.5 ] );\nvar arr2 = typedarraypool( arr1, 'float32' )\nvar arr1 = [ 0.5, 0.5, 0.5 ];\nvar arr2 = typedarraypool( arr1, 'float32' )\n"
typedarraypool.malloc,"var arr = typedarraypool.malloc()\narr = typedarraypool.malloc( 'float32' )\nvar arr = typedarraypool.malloc( 5 )\narr = typedarraypool.malloc( 5, 'int32' )\nvar arr1 = typedarraypool.malloc( [ 0.5, 0.5, 0.5 ] );\nvar arr2 = typedarraypool.malloc( arr1, 'float32' )\nvar arr1 = [ 0.5, 0.5, 0.5 ];\nvar arr2 = typedarraypool.malloc( arr1, 'float32' )\n"
typedarraypool.calloc,"var arr = typedarraypool.calloc()\narr = typedarraypool.calloc( 'float32' )\nvar arr = typedarraypool.calloc( 5 )\narr = typedarraypool.calloc( 5, 'int32' )\n"
typedarraypool.free,"var arr = typedarraypool( 5 )\ntypedarraypool.free( arr )\n"
typedarraypool.clear,"var arr = typedarraypool( 5 )\ntypedarraypool.free( arr );\ntypedarraypool.clear()\n"
typedarraypool.highWaterMark,"typedarraypool.highWaterMark\n"
typedarraypool.nbytes,"var arr = typedarraypool( 5 )\ntypedarraypool.nbytes\n"
typedarraypool.factory,"var pool = typedarraypool.factory();\nvar arr1 = pool( 3, 'float64' )\n"
typemax,"var m = typemax( 'int8' )\nm = typemax( 'uint32' )\n"
typemin,"var m = typemin( 'int8' )\nm = typemin( 'uint32' )\n"
typeOf,"var t = typeOf( 'a' )\nt = typeOf( 5 )\nt = typeOf( NaN )\nt = typeOf( true )\nt = typeOf( false )\nt = typeOf( null )\nt = typeOf( undefined )\nt = typeOf( [] )\nt = typeOf( {} )\nt = typeOf( function noop() {} )\nt = typeOf( Symbol( 'beep' ) )\nt = typeOf( /.+/ )\nt = typeOf( new String( 'beep' ) )\nt = typeOf( new Number( 5 ) )\nt = typeOf( new Boolean( false ) )\nt = typeOf( new Array() )\nt = typeOf( new Object() )\nt = typeOf( new Int8Array( 10 ) )\nt = typeOf( new Uint8Array( 10 ) )\nt = typeOf( new Uint8ClampedArray( 10 ) )\nt = typeOf( new Int16Array( 10 ) )\nt = typeOf( new Uint16Array( 10 ) )\nt = typeOf( new Int32Array( 10 ) )\nt = typeOf( new Uint32Array( 10 ) )\nt = typeOf( new Float32Array( 10 ) )\nt = typeOf( new Float64Array( 10 ) )\nt = typeOf( new ArrayBuffer( 10 ) )\nt = typeOf( new Date() )\nt = typeOf( new RegExp( '.+' ) )\nt = typeOf( new Map() )\nt = typeOf( new Set() )\nt = typeOf( new WeakMap() )\nt = typeOf( new WeakSet() )\nt = typeOf( new Error( 'beep' ) )\nt = typeOf( new TypeError( 'beep' ) )\nt = typeOf( new SyntaxError( 'beep' ) )\nt = typeOf( new ReferenceError( 'beep' ) )\nt = typeOf( new URIError( 'beep' ) )\nt = typeOf( new RangeError( 'beep' ) )\nt = typeOf( new EvalError( 'beep' ) )\nt = typeOf( Math )\nt = typeOf( JSON )\nfunction beep() { return arguments; };\nt = typeOf( beep() )\nt = typeOf( new Buffer( 10 ) )\nfunction Person() { return this };\nt = typeOf( new Person() )\nvar Foo = function () { return this; };\nt = typeOf( new Foo() )\n"
UINT8_MAX,"UINT8_MAX\n"
UINT8_NUM_BYTES,"UINT8_NUM_BYTES\n"
Uint8Array,"var arr = new Uint8Array()\nvar arr = new Uint8Array( 5 )\nvar arr1 = new Int32Array( [ 5, 5, 5 ] );\nvar arr2 = new Uint8Array( arr1 )\nvar arr1 = [ 5.0, 5.0, 5.0 ];\nvar arr2 = new Uint8Array( arr1 )\nvar buf = new ArrayBuffer( 4 );\nvar arr = new Uint8Array( buf, 0, 4 )\n"
Uint8Array.from,"function mapFcn( v ) { return v * 2; };\nvar arr = Uint8Array.from( [ 1, 2 ], mapFcn )\n"
Uint8Array.of,"var arr = Uint8Array.of( 1, 2 )\n"
Uint8Array.BYTES_PER_ELEMENT,"Uint8Array.BYTES_PER_ELEMENT\n"
Uint8Array.name,"Uint8Array.name\n"
Uint8Array.prototype.buffer,"var arr = new Uint8Array( 5 );\narr.buffer\n"
Uint8Array.prototype.byteLength,"var arr = new Uint8Array( 5 );\narr.byteLength\n"
Uint8Array.prototype.byteOffset,"var arr = new Uint8Array( 5 );\narr.byteOffset\n"
Uint8Array.prototype.BYTES_PER_ELEMENT,"var arr = new Uint8Array( 5 );\narr.BYTES_PER_ELEMENT\n"
Uint8Array.prototype.length,"var arr = new Uint8Array( 5 );\narr.length\n"
Uint8Array.prototype.copyWithin,"var arr = new Uint8Array( [ 1, 2, 3, 4, 5 ] );\narr.copyWithin( 3, 0, 2 );\narr[ 3 ]\narr[ 4 ]\n"
Uint8Array.prototype.entries,"var arr = new Uint8Array( [ 1, 2 ] );\nit = arr.entries();\nit.next().value\nit.next().value\nit.next().done\n"
Uint8Array.prototype.every,"var arr = new Uint8Array( [ 1, 2 ] );\nfunction predicate( v ) { return ( v <= 1 ); };\narr.every( predicate )\n"
Uint8Array.prototype.fill,"var arr = new Uint8Array( [ 1, 2 ] );\narr.fill( 3 );\narr[ 0 ]\narr[ 1 ]\n"
Uint8Array.prototype.filter,"var arr1 = new Uint8Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 1 ); };\nvar arr2 = arr1.filter( predicate );\narr2.length\n"
Uint8Array.prototype.find,"var arr = new Uint8Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar v = arr.find( predicate )\n"
Uint8Array.prototype.findIndex,"var arr = new Uint8Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar idx = arr.findIndex( predicate )\n"
Uint8Array.prototype.forEach,"var arr = new Uint8Array( [ 3, 2, 1 ] );\nvar str = ' ';\nfunction fcn( v, i ) { str += i + ':' + v + ' '; };\narr.forEach( fcn );\nstr\n"
Uint8Array.prototype.includes,"var arr = new Uint8Array( [ 1, 2, 3 ] );\nvar bool = arr.includes( 4 )\nbool = arr.includes( 3 )\n"
Uint8Array.prototype.indexOf,"var arr = new Uint8Array( [ 1, 2, 3 ] );\nvar idx = arr.indexOf( 4 )\nidx = arr.indexOf( 3 )\n"
Uint8Array.prototype.join,"var arr = new Uint8Array( [ 1, 2, 3 ] );\narr.join( '|' )\n"
Uint8Array.prototype.keys,"var arr = new Uint8Array( [ 1, 2 ] );\nit = arr.keys();\nit.next().value\nit.next().value\nit.next().done\n"
Uint8Array.prototype.lastIndexOf,"var arr = new Uint8Array( [ 1, 0, 2, 0, 1 ] );\nvar idx = arr.lastIndexOf( 3 )\nidx = arr.lastIndexOf( 0 )\n"
Uint8Array.prototype.map,"var arr1 = new Uint8Array( [ 1, 2, 3 ] );\nfunction fcn( v ) { return v * 2; };\nvar arr2 = arr1.map( fcn );\n"
Uint8Array.prototype.reduce,"var arr = new Uint8Array( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduce( fcn, 0 )\n"
Uint8Array.prototype.reduceRight,"var arr = new Uint8Array( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduceRight( fcn, 0 )\n"
Uint8Array.prototype.reverse,"var arr = new Uint8Array( [ 1, 2, 3 ] )\narr.reverse()\n"
Uint8Array.prototype.set,"var arr = new Uint8Array( [ 1, 2, 3 ] );\narr.set( [ 4, 4 ], 1 );\narr[ 1 ]\narr[ 2 ]\n"
Uint8Array.prototype.slice,"var arr1 = new Uint8Array( [ 1, 2, 3 ] );\nvar arr2 = arr1.slice( 1 );\narr2.length\narr2[ 0 ]\narr2[ 1 ]\n"
Uint8Array.prototype.some,"var arr = new Uint8Array( [ 1, 2 ] );\nfunction predicate( v ) { return ( v > 1 ); };\narr.some( predicate )\n"
Uint8Array.prototype.sort,"var arr = new Uint8Array( [ 1, 2, 0, 2, 1 ] );\narr.sort()\n"
Uint8Array.prototype.subarray,"var arr1 = new Uint8Array( [ 1, 2, 3, 4, 5 ] );\nvar arr2 = arr1.subarray( 2 )\n"
Uint8Array.prototype.toLocaleString,"var arr = new Uint8Array( [ 1, 2, 3 ] );\narr.toLocaleString()\n"
Uint8Array.prototype.toString,"var arr = new Uint8Array( [ 1, 2, 3 ] );\narr.toString()\n"
Uint8Array.prototype.values,"var arr = new Uint8Array( [ 1, 2 ] );\nit = arr.values();\nit.next().value\nit.next().value\nit.next().done\n"
Uint8ClampedArray,"var arr = new Uint8ClampedArray()\nvar arr = new Uint8ClampedArray( 5 )\nvar arr1 = new Int32Array( [ 5, 5, 5 ] );\nvar arr2 = new Uint8ClampedArray( arr1 )\nvar arr1 = [ 5.0, 5.0, 5.0 ];\nvar arr2 = new Uint8ClampedArray( arr1 )\nvar buf = new ArrayBuffer( 4 );\nvar arr = new Uint8ClampedArray( buf, 0, 4 )\n"
Uint8ClampedArray.from,"function mapFcn( v ) { return v * 2; };\nvar arr = Uint8ClampedArray.from( [ 1, 2 ], mapFcn )\n"
Uint8ClampedArray.of,"var arr = Uint8ClampedArray.of( 1, 2 )\n"
Uint8ClampedArray.BYTES_PER_ELEMENT,"Uint8ClampedArray.BYTES_PER_ELEMENT\n"
Uint8ClampedArray.name,"Uint8ClampedArray.name\n"
Uint8ClampedArray.prototype.buffer,"var arr = new Uint8ClampedArray( 5 );\narr.buffer\n"
Uint8ClampedArray.prototype.byteLength,"var arr = new Uint8ClampedArray( 5 );\narr.byteLength\n"
Uint8ClampedArray.prototype.byteOffset,"var arr = new Uint8ClampedArray( 5 );\narr.byteOffset\n"
Uint8ClampedArray.prototype.BYTES_PER_ELEMENT,"var arr = new Uint8ClampedArray( 5 );\narr.BYTES_PER_ELEMENT\n"
Uint8ClampedArray.prototype.length,"var arr = new Uint8ClampedArray( 5 );\narr.length\n"
Uint8ClampedArray.prototype.copyWithin,"var arr = new Uint8ClampedArray( [ 1, 2, 3, 4, 5 ] );\narr.copyWithin( 3, 0, 2 );\narr[ 3 ]\narr[ 4 ]\n"
Uint8ClampedArray.prototype.entries,"var arr = new Uint8ClampedArray( [ 1, 2 ] );\nit = arr.entries();\nit.next().value\nit.next().value\nit.next().done\n"
Uint8ClampedArray.prototype.every,"var arr = new Uint8ClampedArray( [ 1, 2 ] );\nfunction predicate( v ) { return ( v <= 1 ); };\narr.every( predicate )\n"
Uint8ClampedArray.prototype.fill,"var arr = new Uint8ClampedArray( [ 1, 2 ] );\narr.fill( 3 );\narr[ 0 ]\narr[ 1 ]\n"
Uint8ClampedArray.prototype.filter,"var arr1 = new Uint8ClampedArray( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 1 ); };\nvar arr2 = arr1.filter( predicate );\narr2.length\n"
Uint8ClampedArray.prototype.find,"var arr = new Uint8ClampedArray( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar v = arr.find( predicate )\n"
Uint8ClampedArray.prototype.findIndex,"var arr = new Uint8ClampedArray( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar idx = arr.findIndex( predicate )\n"
Uint8ClampedArray.prototype.forEach,"var arr = new Uint8ClampedArray( [ 3, 2, 1 ] );\nvar str = ' ';\nfunction fcn( v, i ) { str += i + ':' + v + ' '; };\narr.forEach( fcn );\nstr\n"
Uint8ClampedArray.prototype.includes,"var arr = new Uint8ClampedArray( [ 1, 2, 3 ] );\nvar bool = arr.includes( 4 )\nbool = arr.includes( 3 )\n"
Uint8ClampedArray.prototype.indexOf,"var arr = new Uint8ClampedArray( [ 1, 2, 3 ] );\nvar idx = arr.indexOf( 4 )\nidx = arr.indexOf( 3 )\n"
Uint8ClampedArray.prototype.join,"var arr = new Uint8ClampedArray( [ 1, 2, 3 ] );\narr.join( '|' )\n"
Uint8ClampedArray.prototype.keys,"var arr = new Uint8ClampedArray( [ 1, 2 ] );\nit = arr.keys();\nit.next().value\nit.next().value\nit.next().done\n"
Uint8ClampedArray.prototype.lastIndexOf,"var arr = new Uint8ClampedArray( [ 1, 0, 2, 0, 1 ] );\nvar idx = arr.lastIndexOf( 3 )\nidx = arr.lastIndexOf( 0 )\n"
Uint8ClampedArray.prototype.map,"var arr1 = new Uint8ClampedArray( [ 1, 2, 3 ] );\nfunction fcn( v ) { return v * 2; };\nvar arr2 = arr1.map( fcn );\n"
Uint8ClampedArray.prototype.reduce,"var arr = new Uint8ClampedArray( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduce( fcn, 0 )\n"
Uint8ClampedArray.prototype.reduceRight,"var arr = new Uint8ClampedArray( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduceRight( fcn, 0 )\n"
Uint8ClampedArray.prototype.reverse,"var arr = new Uint8ClampedArray( [ 1, 2, 3 ] )\narr.reverse()\n"
Uint8ClampedArray.prototype.set,"var arr = new Uint8ClampedArray( [ 1, 2, 3 ] );\narr.set( [ 4, 4 ], 1 );\narr[ 1 ]\narr[ 2 ]\n"
Uint8ClampedArray.prototype.slice,"var arr1 = new Uint8ClampedArray( [ 1, 2, 3 ] );\nvar arr2 = arr1.slice( 1 );\narr2.length\narr2[ 0 ]\narr2[ 1 ]\n"
Uint8ClampedArray.prototype.some,"var arr = new Uint8ClampedArray( [ 1, 2 ] );\nfunction predicate( v ) { return ( v > 1 ); };\narr.some( predicate )\n"
Uint8ClampedArray.prototype.sort,"var arr = new Uint8ClampedArray( [ 1, 2, 0, 2, 1 ] );\narr.sort()\n"
Uint8ClampedArray.prototype.subarray,"var arr1 = new Uint8ClampedArray( [ 1, 2, 3, 4, 5 ] );\nvar arr2 = arr1.subarray( 2 )\n"
Uint8ClampedArray.prototype.toLocaleString,"var arr = new Uint8ClampedArray( [ 1, 2, 3 ] );\narr.toLocaleString()\n"
Uint8ClampedArray.prototype.toString,"var arr = new Uint8ClampedArray( [ 1, 2, 3 ] );\narr.toString()\n"
Uint8ClampedArray.prototype.values,"var arr = new Uint8ClampedArray( [ 1, 2 ] );\nit = arr.values();\nit.next().value\nit.next().value\nit.next().done\n"
UINT16_MAX,"UINT16_MAX\n"
UINT16_NUM_BYTES,"UINT16_NUM_BYTES\n"
Uint16Array,"var arr = new Uint16Array()\nvar arr = new Uint16Array( 5 )\nvar arr1 = new Int32Array( [ 5, 5, 5 ] );\nvar arr2 = new Uint16Array( arr1 )\nvar arr1 = [ 5.0, 5.0, 5.0 ];\nvar arr2 = new Uint16Array( arr1 )\nvar buf = new ArrayBuffer( 8 );\nvar arr = new Uint16Array( buf, 0, 4 )\n"
Uint16Array.from,"function mapFcn( v ) { return v * 2; };\nvar arr = Uint16Array.from( [ 1, 2 ], mapFcn )\n"
Uint16Array.of,"var arr = Uint16Array.of( 1, 2 )\n"
Uint16Array.BYTES_PER_ELEMENT,"Uint16Array.BYTES_PER_ELEMENT\n"
Uint16Array.name,"Uint16Array.name\n"
Uint16Array.prototype.buffer,"var arr = new Uint16Array( 5 );\narr.buffer\n"
Uint16Array.prototype.byteLength,"var arr = new Uint16Array( 5 );\narr.byteLength\n"
Uint16Array.prototype.byteOffset,"var arr = new Uint16Array( 5 );\narr.byteOffset\n"
Uint16Array.prototype.BYTES_PER_ELEMENT,"var arr = new Uint16Array( 5 );\narr.BYTES_PER_ELEMENT\n"
Uint16Array.prototype.length,"var arr = new Uint16Array( 5 );\narr.length\n"
Uint16Array.prototype.copyWithin,"var arr = new Uint16Array( [ 1, 2, 3, 4, 5 ] );\narr.copyWithin( 3, 0, 2 );\narr[ 3 ]\narr[ 4 ]\n"
Uint16Array.prototype.entries,"var arr = new Uint16Array( [ 1, 2 ] );\nit = arr.entries();\nit.next().value\nit.next().value\nit.next().done\n"
Uint16Array.prototype.every,"var arr = new Uint16Array( [ 1, 2 ] );\nfunction predicate( v ) { return ( v <= 1 ); };\narr.every( predicate )\n"
Uint16Array.prototype.fill,"var arr = new Uint16Array( [ 1, 2 ] );\narr.fill( 3 );\narr[ 0 ]\narr[ 1 ]\n"
Uint16Array.prototype.filter,"var arr1 = new Uint16Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 1 ); };\nvar arr2 = arr1.filter( predicate );\narr2.length\n"
Uint16Array.prototype.find,"var arr = new Uint16Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar v = arr.find( predicate )\n"
Uint16Array.prototype.findIndex,"var arr = new Uint16Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar idx = arr.findIndex( predicate )\n"
Uint16Array.prototype.forEach,"var arr = new Uint16Array( [ 3, 2, 1 ] );\nvar str = ' ';\nfunction fcn( v, i ) { str += i + ':' + v + ' '; };\narr.forEach( fcn );\nstr\n"
Uint16Array.prototype.includes,"var arr = new Uint16Array( [ 1, 2, 3 ] );\nvar bool = arr.includes( 4 )\nbool = arr.includes( 3 )\n"
Uint16Array.prototype.indexOf,"var arr = new Uint16Array( [ 1, 2, 3 ] );\nvar idx = arr.indexOf( 4 )\nidx = arr.indexOf( 3 )\n"
Uint16Array.prototype.join,"var arr = new Uint16Array( [ 1, 2, 3 ] );\narr.join( '|' )\n"
Uint16Array.prototype.keys,"var arr = new Uint16Array( [ 1, 2 ] );\nit = arr.keys();\nit.next().value\nit.next().value\nit.next().done\n"
Uint16Array.prototype.lastIndexOf,"var arr = new Uint16Array( [ 1, 0, 2, 0, 1 ] );\nvar idx = arr.lastIndexOf( 3 )\nidx = arr.lastIndexOf( 0 )\n"
Uint16Array.prototype.map,"var arr1 = new Uint16Array( [ 1, 2, 3 ] );\nfunction fcn( v ) { return v * 2; };\nvar arr2 = arr1.map( fcn );\n"
Uint16Array.prototype.reduce,"var arr = new Uint16Array( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduce( fcn, 0 )\n"
Uint16Array.prototype.reduceRight,"var arr = new Uint16Array( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduceRight( fcn, 0 )\n"
Uint16Array.prototype.reverse,"var arr = new Uint16Array( [ 1, 2, 3 ] )\narr.reverse()\n"
Uint16Array.prototype.set,"var arr = new Uint16Array( [ 1, 2, 3 ] );\narr.set( [ 4, 4 ], 1 );\narr[ 1 ]\narr[ 2 ]\n"
Uint16Array.prototype.slice,"var arr1 = new Uint16Array( [ 1, 2, 3 ] );\nvar arr2 = arr1.slice( 1 );\narr2.length\narr2[ 0 ]\narr2[ 1 ]\n"
Uint16Array.prototype.some,"var arr = new Uint16Array( [ 1, 2 ] );\nfunction predicate( v ) { return ( v > 1 ); };\narr.some( predicate )\n"
Uint16Array.prototype.sort,"var arr = new Uint16Array( [ 1, 2, 0, 2, 1 ] );\narr.sort()\n"
Uint16Array.prototype.subarray,"var arr1 = new Uint16Array( [ 1, 2, 3, 4, 5 ] );\nvar arr2 = arr1.subarray( 2 )\n"
Uint16Array.prototype.toLocaleString,"var arr = new Uint16Array( [ 1, 2, 3 ] );\narr.toLocaleString()\n"
Uint16Array.prototype.toString,"var arr = new Uint16Array( [ 1, 2, 3 ] );\narr.toString()\n"
Uint16Array.prototype.values,"var arr = new Uint16Array( [ 1, 2 ] );\nit = arr.values();\nit.next().value\nit.next().value\nit.next().done\n"
UINT32_MAX,"UINT32_MAX\n"
UINT32_NUM_BYTES,"UINT32_NUM_BYTES\n"
Uint32Array,"var arr = new Uint32Array()\nvar arr = new Uint32Array( 5 )\nvar arr1 = new Int32Array( [ 5, 5, 5 ] );\nvar arr2 = new Uint32Array( arr1 )\nvar arr1 = [ 5.0, 5.0, 5.0 ];\nvar arr2 = new Uint32Array( arr1 )\nvar buf = new ArrayBuffer( 16 );\nvar arr = new Uint32Array( buf, 0, 4 )\n"
Uint32Array.from,"function mapFcn( v ) { return v * 2; };\nvar arr = Uint32Array.from( [ 1, 2 ], mapFcn )\n"
Uint32Array.of,"var arr = Uint32Array.of( 1, 2 )\n"
Uint32Array.BYTES_PER_ELEMENT,"Uint32Array.BYTES_PER_ELEMENT\n"
Uint32Array.name,"Uint32Array.name\n"
Uint32Array.prototype.buffer,"var arr = new Uint32Array( 5 );\narr.buffer\n"
Uint32Array.prototype.byteLength,"var arr = new Uint32Array( 5 );\narr.byteLength\n"
Uint32Array.prototype.byteOffset,"var arr = new Uint32Array( 5 );\narr.byteOffset\n"
Uint32Array.prototype.BYTES_PER_ELEMENT,"var arr = new Uint32Array( 5 );\narr.BYTES_PER_ELEMENT\n"
Uint32Array.prototype.length,"var arr = new Uint32Array( 5 );\narr.length\n"
Uint32Array.prototype.copyWithin,"var arr = new Uint32Array( [ 1, 2, 3, 4, 5 ] );\narr.copyWithin( 3, 0, 2 );\narr[ 3 ]\narr[ 4 ]\n"
Uint32Array.prototype.entries,"var arr = new Uint32Array( [ 1, 2 ] );\nit = arr.entries();\nit.next().value\nit.next().value\nit.next().done\n"
Uint32Array.prototype.every,"var arr = new Uint32Array( [ 1, 2 ] );\nfunction predicate( v ) { return ( v <= 1 ); };\narr.every( predicate )\n"
Uint32Array.prototype.fill,"var arr = new Uint32Array( [ 1, 2 ] );\narr.fill( 3 );\narr[ 0 ]\narr[ 1 ]\n"
Uint32Array.prototype.filter,"var arr1 = new Uint32Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 1 ); };\nvar arr2 = arr1.filter( predicate );\narr2.length\n"
Uint32Array.prototype.find,"var arr = new Uint32Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar v = arr.find( predicate )\n"
Uint32Array.prototype.findIndex,"var arr = new Uint32Array( [ 1, 2, 3 ] );\nfunction predicate( v ) { return ( v > 2 ); };\nvar idx = arr.findIndex( predicate )\n"
Uint32Array.prototype.forEach,"var arr = new Uint32Array( [ 3, 2, 1 ] );\nvar str = ' ';\nfunction fcn( v, i ) { str += i + ':' + v + ' '; };\narr.forEach( fcn );\nstr\n"
Uint32Array.prototype.includes,"var arr = new Uint32Array( [ 1, 2, 3 ] );\nvar bool = arr.includes( 4 )\nbool = arr.includes( 3 )\n"
Uint32Array.prototype.indexOf,"var arr = new Uint32Array( [ 1, 2, 3 ] );\nvar idx = arr.indexOf( 4 )\nidx = arr.indexOf( 3 )\n"
Uint32Array.prototype.join,"var arr = new Uint32Array( [ 1, 2, 3 ] );\narr.join( '|' )\n"
Uint32Array.prototype.keys,"var arr = new Uint32Array( [ 1, 2 ] );\nit = arr.keys();\nit.next().value\nit.next().value\nit.next().done\n"
Uint32Array.prototype.lastIndexOf,"var arr = new Uint32Array( [ 1, 0, 2, 0, 1 ] );\nvar idx = arr.lastIndexOf( 3 )\nidx = arr.lastIndexOf( 0 )\n"
Uint32Array.prototype.map,"var arr1 = new Uint32Array( [ 1, 2, 3 ] );\nfunction fcn( v ) { return v * 2; };\nvar arr2 = arr1.map( fcn );\n"
Uint32Array.prototype.reduce,"var arr = new Uint32Array( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduce( fcn, 0 )\n"
Uint32Array.prototype.reduceRight,"var arr = new Uint32Array( [ 1, 2, 3 ] );\nfunction fcn( acc, v ) { return acc + (v*v); };\nvar v = arr.reduceRight( fcn, 0 )\n"
Uint32Array.prototype.reverse,"var arr = new Uint32Array( [ 1, 2, 3 ] )\narr.reverse()\n"
Uint32Array.prototype.set,"var arr = new Uint32Array( [ 1, 2, 3 ] );\narr.set( [ 4, 4 ], 1 );\narr[ 1 ]\narr[ 2 ]\n"
Uint32Array.prototype.slice,"var arr1 = new Uint32Array( [ 1, 2, 3 ] );\nvar arr2 = arr1.slice( 1 );\narr2.length\narr2[ 0 ]\narr2[ 1 ]\n"
Uint32Array.prototype.some,"var arr = new Uint32Array( [ 1, 2 ] );\nfunction predicate( v ) { return ( v > 1 ); };\narr.some( predicate )\n"
Uint32Array.prototype.sort,"var arr = new Uint32Array( [ 1, 2, 0, 2, 1 ] );\narr.sort()\n"
Uint32Array.prototype.subarray,"var arr1 = new Uint32Array( [ 1, 2, 3, 4, 5 ] );\nvar arr2 = arr1.subarray( 2 )\n"
Uint32Array.prototype.toLocaleString,"var arr = new Uint32Array( [ 1, 2, 3 ] );\narr.toLocaleString()\n"
Uint32Array.prototype.toString,"var arr = new Uint32Array( [ 1, 2, 3 ] );\narr.toString()\n"
Uint32Array.prototype.values,"var arr = new Uint32Array( [ 1, 2 ] );\nit = arr.values();\nit.next().value\nit.next().value\nit.next().done\n"
umask,"var mask = umask()\nmask = umask( { 'symbolic': true } )\n"
uncapitalize,"var out = uncapitalize( 'Beep' )\nout = uncapitalize( 'bOOp' )\n"
uncapitalizeKeys,"var obj = { 'AA': 1, 'BB': 2 };\nvar out = uncapitalizeKeys( obj )\n"
uncurry,"function addX( x ) {\n return function addY( y ) {\n     return x + y;\n };\n };\nvar fcn = uncurry( addX );\nvar sum = fcn( 2, 3 )\nfunction add( x ) {\n return function add( y ) {\n     return x + y;\n };\n };\nfcn = uncurry( add, 2 );\nsum = fcn( 9 )\nfunction addX( x ) {\n this.x = x;\n return addY;\n };\nfunction addY( y ) {\n return this.x + y;\n };\nfcn = uncurry( addX, {} );\nsum = fcn( 2, 3 )\n"
uncurryRight,"function addX( x ) {\n return function addY( y ) {\n     return x + y;\n };\n };\nvar fcn = uncurryRight( addX );\nvar sum = fcn( 3, 2 )\nfunction add( y ) {\n return function add( x ) {\n     return x + y;\n };\n };\nfcn = uncurryRight( add, 2 );\nsum = fcn( 9 )\nfunction addY( y ) {\n this.y = y;\n return addX;\n };\nfunction addX( x ) {\n return x + this.y;\n };\nfcn = uncurryRight( addY, {} );\nsum = fcn( 3, 2 )\n"
UNICODE_MAX,"UNICODE_MAX\n"
UNICODE_MAX_BMP,"UNICODE_MAX_BMP\n"
UnicodeColumnChartSparkline,"var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\nvar chart = new UnicodeColumnChartSparkline( data );\nchart.render()\n"
UnicodeLineChartSparkline,"var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\nvar chart = new UnicodeLineChartSparkline( data );\nchart.render()\n"
UnicodeSparkline,"var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\nvar chart = new UnicodeSparkline( data );\nchart.render()\nchart.type = 'line';\nchart.render()\n"
UnicodeTristateChartSparkline,"var data = [ -1, 1, 0, 0, 1, -1, -1, 1 ];\nvar chart = new UnicodeTristateChartSparkline( data );\nchart.render()\n"
UnicodeUpDownChartSparkline,"var data = [ -1, 1, 1, 1, 1, -1, -1, 1 ];\nvar chart = new UnicodeUpDownChartSparkline( data );\nchart.render()\n"
UnicodeWinLossChartSparkline,"var data = [ -2, 1, 2, 2, 1, -1, -1, 1 ];\nvar chart = new UnicodeWinLossChartSparkline( data );\nchart.render()\n"
unlink,"function done( error ) {\n if ( error ) {\n     console.error( error.message );\n }\n };\nunlink( './beep/boop.txt', done );\n"
unlink.sync,"var out = unlink.sync( './beep/boop.txt' );\n"
unshift,"var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\narr = unshift( arr, 6.0, 7.0 )\narr = new Float64Array( [ 1.0, 2.0 ] );\narr = unshift( arr, 3.0, 4.0 )\narr = { 'length': 1, '0': 1.0 };\narr = unshift( arr, 2.0, 3.0 )\n"
until,"function predicate( i ) { return ( i >= 5 ); };\nfunction beep( i ) { console.log( 'boop: %d', i ); };\nuntil( predicate, beep )\n"
untilAsync,"function predicate( i, clbk ) { clbk( null, i >= 5 ); };\nfunction fcn( i, next ) {\n setTimeout( onTimeout, i );\n function onTimeout() {\n     next( null, 'boop'+i );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nuntilAsync( predicate, fcn, done )\n"
untilEach,"function predicate( v ) { return v !== v; };\nfunction logger( v, i ) { console.log( '%s: %d', i, v ); };\nvar arr = [ 1, 2, 3, 4, NaN, 5 ];\nuntilEach( arr, predicate, logger )\n"
untilEachRight,"function predicate( v ) { return v !== v; };\nfunction logger( v, i ) { console.log( '%s: %d', i, v ); };\nvar arr = [ 1, NaN, 2, 3, 4, 5 ];\nuntilEachRight( arr, predicate, logger )\n"
unzip,"var arr = [ [ 1, 'a', 3 ], [ 2, 'b', 4 ] ];\nvar out = unzip( arr )\narr = [ [ 1, 'a', 3 ], [ 2, 'b', 4 ] ];\nout = unzip( arr, [ 0, 2 ] )\n"
uppercase,"var out = uppercase( 'bEEp' )\n"
uppercaseKeys,"var obj = { 'a': 1, 'b': 2 };\nvar out = uppercaseKeys( obj )\n"
US_STATES_ABBR,"var list = US_STATES_ABBR()\n"
US_STATES_CAPITALS,"var list = US_STATES_CAPITALS()\n"
US_STATES_CAPITALS_NAMES,"var out = US_STATES_CAPITALS_NAMES()\n"
US_STATES_NAMES,"var list = US_STATES_NAMES()\n"
US_STATES_NAMES_CAPITALS,"var out = US_STATES_NAMES_CAPITALS()\n"
utf16ToUTF8Array,"var str = '☃';\nvar out = utf16ToUTF8Array( str )\n"
vartest,"var x = [ 610, 610, 550, 590, 565, 570 ];\nvar y = [ 560, 550, 580, 550, 560, 590, 550, 590 ];\nvar out = vartest( x, y )\nvar table = out.print()\n"
waterfall,"function foo( next ) { next( null, 'beep' ); };\nfunction bar( str, next ) { console.log( str ); next(); };\nfunction done( error ) { if ( error ) { throw error; } };\nvar fcns = [ foo, bar ];\nwaterfall( fcns, done );\n"
waterfall.factory,"function foo( next ) { next( null, 'beep' ); };\nfunction bar( str, next ) { console.log( str ); next(); };\nfunction done( error ) { if ( error ) { throw error; } };\nvar fcns = [ foo, bar ];\nvar waterfall = waterfall.factory( fcns, done );\nwaterfall();\nwaterfall();\nwaterfall();\n"
whileAsync,"function predicate( i, clbk ) { clbk( null, i < 5 ); };\nfunction fcn( i, next ) {\n setTimeout( onTimeout, i );\n function onTimeout() {\n     next( null, 'boop'+i );\n }\n };\nfunction done( error, result ) {\n if ( error ) {\n     throw error;\n }\n console.log( result );\n };\nwhileAsync( predicate, fcn, done )\n"
whileEach,"function predicate( v ) { return v === v; };\nfunction logger( v, i ) { console.log( '%s: %d', i, v ); };\nvar arr = [ 1, 2, 3, 4, NaN, 5 ];\nwhileEach( arr, predicate, logger )\n"
whileEachRight,"function predicate( v ) { return v === v; };\nfunction logger( v, i ) { console.log( '%s: %d', i, v ); };\nvar arr = [ 1, NaN, 2, 3, 4, 5 ];\nwhileEachRight( arr, predicate, logger )\n"
whilst,"function predicate( i ) { return ( i < 5 ); };\nfunction beep( i ) { console.log( 'boop: %d', i ); };\nwhilst( predicate, beep )\n"
writableProperties,"function Foo() { this.beep = 'boop'; return this; };\nFoo.prototype.foo = 'bar';\nvar obj = new Foo();\nvar props = writableProperties( obj )\n"
writablePropertiesIn,"var props = writablePropertiesIn( [] )\n"
writablePropertyNames,"var obj = { 'a': 'b' };\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = true;\ndesc.writable = false;\ndesc.value = 'boop';\ndefineProperty( obj, 'beep', desc );\nvar keys = writablePropertyNames( obj )\n"
writablePropertyNamesIn,"var obj = { 'a': 'b' };\nvar desc = {};\ndesc.configurable = true;\ndesc.enumerable = true;\ndesc.writable = false;\ndesc.value = 'boop';\ndefineProperty( obj, 'beep', desc );\nvar keys = writablePropertyNamesIn( obj )\n"
writablePropertySymbols,"var obj = {};\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.writable = true;\ndesc.value = 'boop';\nvar sym = ( Symbol ) ? Symbol( 'beep' ) : 'beep';\ndefineProperty( obj, sym, desc );\nvar symbols = writablePropertySymbols( obj )\n"
writablePropertySymbolsIn,"var obj = {};\nvar desc = {};\ndesc.configurable = false;\ndesc.enumerable = false;\ndesc.writable = true;\ndesc.value = 'boop';\nvar sym = ( Symbol ) ? Symbol( 'beep' ) : 'beep';\ndefineProperty( obj, sym, desc );\nvar symbols = writablePropertySymbolsIn( obj )\n"
writeFile,"function onWrite( error ) {\n if ( error ) {\n     console.error( error.message );\n }\n };\nwriteFile( './beep/boop.txt', 'beep boop', onWrite );\n"
writeFile.sync,"var err = writeFile.sync( './beep/boop.txt', 'beep boop' );\n"
zip,"var out = zip( [ 1, 2 ], [ 'a', 'b' ] )\nvar opts = { 'trunc': false };\nout = zip( [ 1, 2, 3 ], [ 'a', 'b' ], opts )\n"
ztest,"var rnorm = base.random.normal.factory( 0.0, 2.0, { 'seed': 212 });\nvar x = new Array( 100 );\nfor ( var i = 0; i < x.length; i++ ) {\n x[ i ] = rnorm();\n }\nvar out = ztest( x, 2.0 )\narr = [ 2, 4, 3, 1, 0 ];\nout = ztest( arr, 2.0, { 'alpha': 0.01 });\ntable = out.print()\nvar arr = [ 4, 4, 6, 6, 5 ];\nout = ztest( arr, 1.0, { 'mu': 5 })\narr = [ 4, 4, 6, 6, 5 ];\nout = ztest( arr, 1.0, { 'alternative': 'less' })\nout = ztest( arr, 1.0, { 'alternative': 'greater' })\n"
ztest2,"var x = [ -0.21, 0.14, 1.65, 2.11, -1.86, -0.29, 1.48, 0.81, 0.86, 1.04 ];\nvar y = [ -1.53, -2.93, 2.34, -1.15, 2.7, -0.12, 4.22, 1.66, 3.43, 4.66 ];\nvar out = ztest2( x, y, 2.0, 2.0 )\nvar table = out.print()\nout = ztest2( x, y, 2.0, 2.0, { 'alpha': 0.4 });\ntable = out.print()\nout = ztest2( x, y, 2.0, 2.0, { 'alternative': 'less' });\ntable = out.print()\nout = ztest2( x, y, 2.0, 2.0, { 'alternative': 'greater' });\ntable = out.print()\nvar rnorm = base.random.normal.factory({ 'seed': 372 });\nx = new Array( 100 );\nfor ( i = 0; i < x.length; i++ ) {\n x[ i ] = rnorm( 2.0, 1.0 );\n }\ny = new Array( 100 );\n for ( i = 0; i < x.length; i++ ) {\n y[ i ] = rnorm( 0.0, 2.0 );\n }\nout = ztest2( x, y, 1.0, 2.0, { 'difference': 2.0 })\n"
