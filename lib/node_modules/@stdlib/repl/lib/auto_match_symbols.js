/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* eslint-disable no-underscore-dangle */

'use strict';

// VARIABLES //

var SYMBOLS = {
	'{': '}',
	'[': ']',
	'(': ')',
	'\'': '\'',
	'"': '"',
	'`': '`'
};


// MAIN //

/**
* Returns a callback that handles auto matching symbols.
*
* @private
* @param {REPL} repl - REPL instance
* @returns {Function} callback
*/
function autoMatch( repl ) {
	return onKeypress;

	/**
	* Callback invoked upon a readline interface "keypress" event.
	*
	* @private
	* @param {string} chunk - character pressed by the user
	*/
	function onKeypress( chunk ) {
		if ( repl._settings.autoMatch && chunk ) {
			// For a bracket/quotation input, append corresponding closing symbol
			if ( SYMBOLS[chunk] ) {
				repl._rli.write( SYMBOLS[chunk] );
				repl._rli.write( null, {
					'ctrl': true,
					'name': 'b'
				} );
				repl._auto_match_status = true;
				return;
			}

			// Handle instinctive closing symbols
			if ( repl._auto_match_status ) {
				if (
					SYMBOLS[ repl._rli.line[ repl._rli.cursor - 2 ] ] === chunk
				) {
					repl._rli.write( null, {
						'name': 'backspace'
					} );
					repl._rli.write( null, {
						'name': 'right'
					} );
				}
				repl._auto_match_status = false;
			}
		}
	}
}


// EXPORTS //

module.exports = autoMatch;
