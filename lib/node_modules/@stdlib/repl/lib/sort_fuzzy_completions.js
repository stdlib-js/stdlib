/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// FUNCTIONS //

/**
* Callback to sort the results array in descending order of score, and lexicographically when scores are equal.
*
* @private
* @param {Object} a - first object representing a completion's fuzzy score
* @param {Object} b - second object representing a completion's fuzzy score
* @returns {number} - comparison result for array sorting
*/
function sortClbk( a, b ) {
	if ( b.score === a.score ) {
		// If scores are equal, sort lexicographically...
		return a.completion.localeCompare( b.completion );
	}
	// Sort by score:
	return b.score - a.score;
}


// MAIN //

/**
* Sorts an array of completion objects and returns an array of sorted completion strings.
*
* @private
* @param {Array} completions - array of objects, each containing a 'score' and a 'completion' property
* @returns {Array} - array of sorted completion strings
*/
function sortFuzzyCompletions( completions ) {
	var out = [];
	var i;

	// Sort and return the completions:
	completions.sort( sortClbk );
	for ( i = 0; i < completions.length; i++ ) {
		out.push( completions[ i ].completion );
	}

	return out;
}


// EXPORTS //

module.exports = sortFuzzyCompletions;
