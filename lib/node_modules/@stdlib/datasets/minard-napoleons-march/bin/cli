#!/usr/bin/env node

/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var createReadStream = require( 'fs' ).createReadStream;
var resolve = require( 'path' ).resolve;
var getKeys = require( '@stdlib/utils/keys' );
var indexOf = require( '@stdlib/utils/index-of' );
var readFileSync = require( '@stdlib/fs/read-file' ).sync;
var stdout = require( '@stdlib/streams/node/stdout' );
var CLI = require( '@stdlib/cli/ctor' );
var minard = require( './../lib' );


// MAIN //

/**
* Main execution sequence.
*
* @private
*/
function main() {
	var names;
	var flags;
	var opts;
	var cli;

	// Create a command-line interface:
	cli = new CLI({
		'pkg': require( './../package.json' ),
		'options': require( './../etc/cli_opts.json' ),
		'help': readFileSync( resolve( __dirname, '..', 'docs', 'usage.txt' ), {
			'encoding': 'utf8'
		})
	});

	// Get any provided command-line options:
	flags = cli.flags();
	if ( flags.help || flags.version ) {
		return;
	}

	opts = {};
	if ( flags.data ) {
		opts.data = flags.data;
	}
	names = [ 'army', 'cities', 'temperature' ];
	if ( indexOf( names, opts.data ) === -1 ) {
		ndjson();
	} else {
		csv( opts.data );
	}

	/**
	* Prints data as newline-delimited JSON (ndjson).
	*
	* @private
	*/
	function ndjson() {
		var data;
		var keys;
		var i;
		data = minard( opts );
		keys = getKeys( data );
		for ( i = 0; i < keys.length; i++ ) {
			console.log( JSON.stringify( data[ keys[i] ] ) ); // eslint-disable-line no-console
		}
	}

	/**
	* Prints data as CSV.
	*
	* @private
	* @param {string} filename - file name (no extension)
	*/
	function csv( filename ) {
		var fpath = resolve( __dirname, '../data/'+filename+'.csv' );
		createReadStream( fpath )
			.pipe( stdout )
			.on( 'close', onClose );
	}

	/**
	* Exits the CLI.
	*
	* @private
	*/
	function onClose() {
		cli.close( 0 );
	}
}

main();
