'use strict'

var incrprod = require( './../lib' );
var ldexp = require( '@stdlib/math/base/special/ldexp' );
var randu = require( '@stdlib/math/base/random/randu' );


var accumulator;
var prod;
var v;
var i;

// Initialize an accumulator:
accumulator = incrprod();

// For each simulated value, update the product
console.log( '\nValue\tProduct\n' );
for ( i = 0; i < 100; i++ ) {
	v = randu() * 100.0;
	prod = accumulator( v );
	console.log( '%d\t%d', v.toFixed( 4 ), prod.toFixed( 4 ) );
}
console.log( '\nFinal product: %d\n', accumulator() );

console.log( '\nTesting overflows\n\n');


/* Write huge numbers x and y as a double starting from a normalized mantissa and big exponent */
var x = ldexp( 0.5, 1000 );
var y = ldexp( 0.1, 1000 );

/* The number z on the other hand is practically zero */
var z = ldexp( 0.2 , -1000 );

accumulator = incrprod();

console.log( "x = " + x );
console.log( "y = " + y );
console.log( "z = " + z );

accumulator( x );
accumulator( y );
console.log( "\nMultiplying x and y yields an overflow\n\t x*y = " + accumulator() );

accumulator(z);
console.log( "Multiplication with z removes the overflow\n\t x*y*z = " + accumulator() );
