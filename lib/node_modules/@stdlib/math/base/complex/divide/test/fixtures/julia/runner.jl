#!/usr/bin/env julia

import JSON

# Get the filename:
file = @__FILE__;

re1 = [2.0 ^ x for x in linspace( -1023, 1023, 9 )];
im1 = [2.0 ^ x for x in linspace( -1023, 1023, 9 )];
re2 = [2.0 ^ x for x in linspace( -1023, 1023, 9 )];
im2 = [2.0 ^ x for x in linspace( -1023, 1023, 9 )];

inre1 = [ a for a in re1, b in im1, c in re2, d in im2 ];
inim1 = [ b for a in re1, b in im1, c in re2, d in im2 ];
inre2 = [ c for a in re1, b in im1, c in re2, d in im2 ];
inim2 = [ d for a in re1, b in im1, c in re2, d in im2 ];

# Unroll the arrays:
re1 = reshape( inre1, prod( size( inre1 ) ) );
im1 = reshape( inim1, prod( size( inim1 ) ) );
re2 = reshape( inre2, prod( size( inre2 ) ) );
im2 = reshape( inim2, prod( size( inim2 ) ) );

n = size(re1)[1];
qre = ones(n)
qim = ones(n)
for i = 1:n
	q = Complex128( re1[i], im1[i] ) / Complex128( re2[i], im2[i] );
	qre[i] = real(q)
	qim[i] = imag(q)
end

# Extract the directory in which this file resides:
dir = dirname( file );

data = Dict([
	("re1", re1),
	("im1", im1),
	("re2", re2),
	("im2", im2),
	("qre", qre),
	("qim", qim),
	("qreFinite", [ isfinite(x) for x in qre ]),
	("qimFinite", [ isfinite(x) for x in qim ]),
	("qreNaN", [ isnan(x) for x in qre ]),
	("qimNaN", [ isnan(x) for x in qim ])
]);

filepath = joinpath( dir, "quotients.json" );
outfile = open( filepath, "w" );
write( outfile, JSON.json(data) );
close( outfile );
