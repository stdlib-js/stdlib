'use strict';

// MAIN //

/**
* Compute the real part of (re1 + i * im1) / (re2 + i * im2)
*
* @param {number} re1 - real component
* @param {number} im1 - imaginary component
* @param {number} re2 - real component
* @param {number} im2 - imaginary component
* @param {number} r - partial result from robustInternal
* @param {number} t - partial result from robustInternal
* @returns {number} real part of the quotient
*/
function internalCompreal( re1, im1, re2, im2, r, t ) {
	var br;

	if ( r !== 0 ) {
		br = im1 * r;
		return br === 0 ? ( re1 * t ) + ( ( im1 * t ) * r ) : ( re1 + br ) * t;
	}

	return ( re1 + ( im2 * ( im1 / re2 ) ) ) * t;
} // end FUNCTION internalCompreal

// EXPORTS //

module.exports = internalCompreal;
