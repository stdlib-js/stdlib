'use strict';

// MODULES //

var cdiv = require( './cdiv.js' );


// MAIN //

/**
* Divides two complex numbers. Allocates storage if not provided.
*
* ## References
*
* * Baudin, Michael, and Robert L. Smith. 2012. "A Robust Complex Division in Scilab" abs/1210.4539 (October). <https://arxiv.org/abs/1210.4539>. https://arxiv.org/pdf/1210.4539.pdf
*
* @param {(Array|TypedArray|Object)} out - optional output array
* @param {number} re1 - real component
* @param {number} im1 - imaginary component
* @param {number} re2 - real component
* @param {number} im2 - imaginary component
* @returns {(Array|TypedArray|Object)} real and imaginary components
*
* @example
* var v = divide( -13.0, -1.0, -2.0, 1.0 );
* // returns [ 5.0, 3.0 ]
*
* @example
* var out = new Array( 2 );
*
* var v = divide( out, -13.0, -1.0, -2.0, 1.0 );
* // returns [ 5.0, 3.0 ]
*
* var bool = ( v === out );
* // returns true
*/
function divide( out, re1, im1, re2, im2 ) {
	if ( arguments.length === 4 ) {
		return cdiv( new Array( 2 ), out, re1, im1, re2 );
	}
	return cdiv( out, re1, im1, re2, im2 );
} // end FUNCTION divide()


// EXPORTS //

module.exports = divide;
