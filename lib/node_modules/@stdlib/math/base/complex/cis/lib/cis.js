'use strict';

// MODULES //

var sincos = require( '@stdlib/math/base/special/sincos' );
var exp = require( '@stdlib/math/base/special/exp' );


// MAIN //

/**
* Computes the cis function of a complex number.
*
* @private
* @param {(Array|TypedArray|Object)} out - output array
* @param {number} re - real component
* @param {number} im - imaginary component
* @returns {(Array|TypedArray|Object)} output array
*
* @example
* var out = new Array( 2 );
*
* var v = cis( out, 1.0, 0.0 );
* // returns [ ~0.540, ~0.841 ]
*
* var bool = ( v === out );
* // returns true
*/
function cis( out, re, im ) {
	var tmp;
	var e;

	sincos( out, re );
	tmp = out[0];
	if ( im !== 0.0 ) {
		e = exp( -im );
		tmp *= e;
		out[1] *= e;
	}
	out[0] = out[1];
	out[1] = tmp;

	return out;
} // end FUNCTION cis()


// EXPORTS //

module.exports = cis;
