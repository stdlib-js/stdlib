'use strict';

// MODULES //

var inverse = require( './cinv.js' );


// MAIN //

/**
* Computes the inverse of a complex number.
*
* ## References
*
* * Baudin, Michael, and Robert L. Smith. 2012. "A Robust Complex Division in Scilab." *arXiv* abs/1210.4539 \[cs.MS\] (October): 1â€“25. <https://arxiv.org/abs/1210.4539>.
*
*
* @param {(Array|TypedArray|Object)} [out] - output array
* @param {number} re - real component
* @param {number} im - imaginary component
* @returns {(Array|TypedArray|Object)} output array
*
* @example
* var v = cinv( 2.0, 4.0 );
* // returns [ 0.1, -0.2 ]
*
* @example
* var out = new Array( 2 );
*
* var v = cinv( out, 2.0, 4.0 );
* // returns [ 0.1, -0.2 ]
*
* var bool = ( v === out );
* // returns true
*/
function cinv( out, re, im ) {
	if ( arguments.length === 2 ) {
		return inverse( new Array( 2 ), out, re );
	}
	return inverse( out, re, im );
} // end FUNCTION cinv()


// EXPORTS //

module.exports = cinv;
