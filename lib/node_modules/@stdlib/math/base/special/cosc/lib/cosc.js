/**
 * @license Apache-2.0
 *
 * Copyright (c) 2019 The Stdlib Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';

// MODULES //

var sinpi = require('@stdlib/math/base/special/sinpi');
var cospi = require('@stdlib/math/base/special/cospi');
var isnan = require('@stdlib/math/base/assert/is-nan');
var isInfinite = require('@stdlib/math/base/assert/is-infinite');
var PI = require('@stdlib/constants/math/float64-pi');


// MAIN //

/**
 * Computes the derivative of the normalized cardinal sine of a number.
 *
 * ## Method
 *
 * For \\( x \neq 0 \\), the derivative of \operatorname{sinc}(x) is calculated as
 *
 * ```tex
 * \operatorname{cosc}(x) = \frac{\operatorname{cos}(\pi x)}{x} - \frac{\operatorname{sin}(\pi x)}{\pi x^2}
 * ```
 *
 * ## Special Cases
 *
 * ```tex
 * \begin{align*}
 * \operatorname{cosc}(0) &= 0 & \\
 * \operatorname{cosc}(\infty) &= 0 & \\
 * \operatorname{cosc}(-\infty) &= 0 & \\
 * \operatorname{cosc}(\mathrm{NaN}) &= \mathrm{NaN}
 * \end{align*}
 * ```
 *
 * @param {number} x - input value
 * @returns {number} derivative of normalized sinc(x)
 *
 * @example
 * var v = cosc( 0.5 )
 * // returns ~-1.273
 *
 * @example
 * var v = cosc( -1.2 )
 * // returns ~0.544
 *
 * @example
 * var v = cosc( 0.0 )
 * // returns 0.0
 *
 * @example
 * var v = cosc( NaN )
 * // returns NaN
 */
function cosc(x) {
	if (isnan(x)) {
		return NaN;
	}
	if (isInfinite(x)) {
		return 0.0;
	}
	if (x === 0.0) {
		return 0.0;
	}
	return ( cospi(x) - ( sinpi(x) / ( PI * x ))) / x;
}


// EXPORTS //

module.exports = cosc;
