'use strict';

// MODULES //

var evalpoly = require( '@stdlib/math/base/tools/evalpoly' ).factory;
var ln = require( '@stdlib/math/base/special/ln' );


// VARIABLES //

var P = [
	0.083333333333333333333333333333333333333333333333333,
	-0.0083333333333333333333333333333333333333333333333333,
	0.003968253968253968253968253968253968253968253968254,
	-0.0041666666666666666666666666666666666666666666666667,
	0.0075757575757575757575757575757575757575757575757576,
	-0.021092796092796092796092796092796092796092796092796,
	0.083333333333333333333333333333333333333333333333333,
	-0.44325980392156862745098039215686274509803921568627
];


// FUNCTIONS //

// Compile a function to evaluate a polynomial based on the above coefficients...
var polyval = evalpoly( P );


// MAIN //

/**
* Evaluates the digamma function via asymptotic expansion.
*
* @private
* @param {number} x - input value
* @returns {number} function value
*/
function digamma( x ) {
	var y;
	var z;
	x -= 1.0;
	y = ln(x) + ( 1.0 / (2.0*x) );
	z = 1.0 / (x*x);
	return y - ( z*polyval( z ) );
} // end FUNCTION digamma()


// EXPORTS //

module.exports = digamma;
