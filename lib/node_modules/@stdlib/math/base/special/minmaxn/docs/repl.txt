
{{alias}}( [x[, y[, ...args]]] )
    Returns the minimum and maximum values.

    If any argument is `NaN`, the function returns `NaN` for both the minimum
    and maximum values.

    When an empty set is considered a subset of the extended reals (all real
    numbers, including positive and negative infinity), positive infinity is the
    greatest lower bound and negative infinity is the least upper bound. Similar
    to zero being the identity element for the sum of an empty set and to one
    being the identity element for the product of an empty set, positive
    infinity is the identity element for the minimum and negative infinity is
    the identity element for the maximum, and thus, if not provided any
    arguments, the function returns positive infinity for the minimum value and
    negative infinity for the maximum value.

    Parameters
    ----------
    x: number (optional)
        First number.

    y: number (optional)
        Second number.

    args: ...number (optional)
        Numbers.

    Returns
    -------
    out: Array<number>
        Minimum and maximum values.

    Examples
    --------
    > var v = {{alias}}( 3.14, 4.2 )
    [ 3.14, 4.2 ]
    > v = {{alias}}( 5.9, 3.14, 4.2 )
    [ 3.14, 5.9 ]
    > v = {{alias}}( 3.14, NaN )
    [ NaN, NaN ]
    > v = {{alias}}( +0.0, -0.0 )
    [ -0.0, +0.0 ]
    > v = {{alias}}( 3.14 )
    [ 3.14, 3.14 ]


{{alias}}.assign( [x[, y[, ...args]]], out, stride, offset )
    Returns the minimum and maximum values and assigns results to a provided
    output array.

    If any argument is `NaN`, the function returns `NaN` for both the minimum
    and maximum values.

    Parameters
    ----------
    x: number (optional)
        First number.

    y: number (optional)
        Second number.

    args: ...number (optional)
        Numbers.

    out: Array|TypedArray|Object
        Output object.

    stride: integer
        Output array stride.

    offset: integer
        Output array index offset.

    Returns
    -------
    out: Array|TypedArray|Object
        Minimum and maximum values.

    Examples
    --------
    > var out = [ 0.0, 0.0 ];
    > var v = {{alias}}.assign( 3.14, -1.5, out, 1, 0 )
    [ -1.5, 3.14 ]
    > var bool = ( v === out )
    true

    See Also
    --------
