'use strict';

/*
* The original C++ code and copyright notice is from the [Boost library]{@link https://github.com/boostorg/math/blob/develop/include/boost/math/tools/rational.hpp}.
*
* The implementation has been modified for JavaScript.
*/

/*
* Copyright John Maddock 2006-7, 2013-14.
* Copyright Paul A. Bristow 2007, 2013-14.
* Copyright Nikhar Agrawal 2013-14
* Copyright Christopher Kormanyos 2013-14
* Use, modification and distribution are subject to the
* Boost Software License, Version 1.0. (See accompanying file
* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)
*/

// MAIN //

/**
* Evaluate a rational polynomial.
*
* The polynomial has form:
*
*         P[0] + P[1] * z + P[2] * z^2 + ...
* f(z) =  ----------------------------------
*         Q[0] + Q[1] * z + Q[2] * z^2 + ...
*
* The number of coefficients in the numerator and denominiator must be equal.
*
* @private
* @param {Array} P - numerator coefficients
* @param {Array} Q - denominator coefficients
* @param {number} z - value at which to evaluate
* @returns {number} evaluated Bessel function
*/
function evaluateRational( P, Q, z ) {
	var s1;
	var s2;
	var n;
	var i;

	n = P.length;
	if ( z <= 1 ) {
		s1 = P[ n - 1 ];
		s2 = Q[ n - 1 ];
		for ( i = n - 2; i >= 0; i-- ) {
			s1 *= z;
			s2 *= z;
			s1 += P[ i ];
			s2 += Q[ i ];
		}
	} else {
		z = 1 / z;
		s1 = P[ 0 ];
		s2 = Q[ 0 ];
		for ( i = 1; i < n; i++ ) {
			s1 *= z;
			s2 *= z;
			s1 += P[i];
			s2 += Q[i];
		}
	}
	return s1 / s2;
} // end FUNCTION evaluateRational()


// EXPORTS //

module.exports = evaluateRational;
