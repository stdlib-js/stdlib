'use strict';

/*
* The original C code, long comment, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}.
*
* The implementation follows the original, but has been modified for JavaScript.
*/

/*
* COPYRIGHT
*
* Cephes Math Library Release 2.8:  June, 2000
* Copyright 1984, 1987, 1989, 1992, 2000 by Stephen L. Moshier
*
*
* LICENSE
*
* The README [file]{@link http://netlib.sandia.gov/cephes/} reads:
*   > Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.
*   > The two known misprints in the book are repaired here in the source listings for the gamma function and the incomplete beta integral.
*   > Stephen L. Moshier
*   > moshier@na-net.ornl.gov
*/

// MODULES //

var evalpoly = require( '@stdlib/math/base/tools/evalpoly' ).factory;
var cos = require( '@stdlib/math/base/special/cos' );


// VARIABLES //

var P = [
	0.041666666666666664,
	-0.0013888888888888872,
	0.00002480158730157055,
	-2.755731921499979e-7,
	2.087675428708152e-9,
	-1.147028484342536e-11,
	4.737750796424621e-14
];
var PIO4 = 7.85398163397448309616e-1; // 4/pi


// FUNCTIONS //

var polyval = evalpoly( P );


// MAIN //

/**
* Computes the cosine of a number minus one.
*
* @param {number} x - input value (in radians)
* @returns {number} cosine minus one
*
* @example
* var v = cosm1( 0.0 );
* // returns 0.0
*
* @example
* var v = cosm1( Math.PI/4.0 );
* // returns ~-0.291
*
* @example
* var v = cosm1( -Math.PI/6.0 );
* // returns ~~-0.134
*
* @example
* var v = cosm1( NaN );
* // returns NaN
*/
function cosm1( x ) {
	var xx;

	if ( x < -PIO4 || x > PIO4 ) {
		return cos( x ) - 1.0;
	}
	xx = x * x;
	xx = ( -0.5 * xx ) + ( xx * xx * polyval( xx ) );
	return xx;
} // end FUNCTION cosm1()


// EXPORTS //

module.exports = cosm1;
