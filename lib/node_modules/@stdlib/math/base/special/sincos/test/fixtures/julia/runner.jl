#!/usr/bin/env julia

import JSON

"""
    gen( x, filepath )

Generate fixture data and write to file.

# Arguments

* `x`: domain
* `filepath::AbstractString`: filepath of the output file

# Examples

``` julia
julia> x = linspace( -1000.0, 1000.0, 2001 );
julia> gen( x, \"./data.json\" );
```
"""
function gen( x, filepath )
	s = sin( x );
	c = cos( x );
	data = Dict([
		("x", x),
		("sine", s),
		("cosine", c)
	]);
	outfile = open( filepath, "w" );
	write( outfile, JSON.json(data) );
	close( outfile );
end

# Get the filename:
file = @__FILE__;

# Extract the directory in which this file resides:
dir = dirname( file );

# Negative medium sized values:
x = linspace( -256.0*pi, 0.0, 4000 )
out = joinpath( dir, "medium_negative.json" );
gen( x, out );

# Positive medium sized values:
x = linspace( 0.0, 256.0*pi, 4000 )
out = joinpath( dir, "medium_positive.json" );
gen( x, out );

# Negative large values:
x = linspace( -2.0^20*(pi/2.0), -2.0^60*(pi/2.0), 4000 )
out = joinpath( dir, "large_negative.json" );
gen( x, out );

# Positive large values:
x = linspace( 2.0^20*(pi/2.0), 2.0^60*(pi/2.0), 4000 )
out = joinpath( dir, "large_positive.json" );
gen( x, out );

# Negative huge values:
x = linspace( -2.0^60*(pi/2.0), -2.0^1000*(pi/2.0), 4000 )
out = joinpath( dir, "huge_negative.json" );
gen( x, out );

# Positive huge values:
x = linspace( 2.0^60*(pi/2.0), 2.0^1000*(pi/2.0), 4000 )
out = joinpath( dir, "huge_positive.json" );
gen( x, out );
