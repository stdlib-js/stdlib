/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var parseDuration = require( './../lib' );


// FIXTURES //

var VALUES = [
	[ '1d', { 'days': 1, 'hours': 0, 'minutes': 0, 'seconds': 0, 'milliseconds': 0 } ],
	[ '1h', { 'days': 0, 'hours': 1, 'minutes': 0, 'seconds': 0, 'milliseconds': 0 } ],
	[ '1m', { 'days': 0, 'hours': 0, 'minutes': 1, 'seconds': 0, 'milliseconds': 0 } ],
	[ '1s', { 'days': 0, 'hours': 0, 'minutes': 0, 'seconds': 1, 'milliseconds': 0 } ],
	[ '1ms', { 'days': 0, 'hours': 0, 'minutes': 0, 'seconds': 0, 'milliseconds': 1 } ],
	[ '1d2h3m4s5ms', { 'days': 1, 'hours': 2, 'minutes': 3, 'seconds': 4, 'milliseconds': 5 } ],
	[ '2h3m4s5ms', { 'days': 0, 'hours': 2, 'minutes': 3, 'seconds': 4, 'milliseconds': 5 } ],
	[ '3m4s5ms', { 'days': 0, 'hours': 0, 'minutes': 3, 'seconds': 4, 'milliseconds': 5 } ],
	[ '4s5ms', { 'days': 0, 'hours': 0, 'minutes': 0, 'seconds': 4, 'milliseconds': 5 } ],
	[ '5ms', { 'days': 0, 'hours': 0, 'minutes': 0, 'seconds': 0, 'milliseconds': 5 } ],
	[ '1d2h', { 'days': 1, 'hours': 2, 'minutes': 0, 'seconds': 0, 'milliseconds': 0 } ],
	[ '2h3m', { 'days': 0, 'hours': 2, 'minutes': 3, 'seconds': 0, 'milliseconds': 0 } ],
	[ '3m4s', { 'days': 0, 'hours': 0, 'minutes': 3, 'seconds': 4, 'milliseconds': 0 } ],
	[ '4s5ms', { 'days': 0, 'hours': 0, 'minutes': 0, 'seconds': 4, 'milliseconds': 5 } ],
	[ '5ms', { 'days': 0, 'hours': 0, 'minutes': 0, 'seconds': 0, 'milliseconds': 5 } ]
];


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.equal( typeof parseDuration, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function parses a duration string', function test( t ) {
	var expected;
	var actual;
	var i;

	for ( i = 0; i < VALUES.length; i++ ) {
		expected = VALUES[ i ][ 1 ];
		actual = parseDuration( VALUES[ i ][ 0 ] );
		t.deepEqual( actual, expected, 'returns expected object' );
	}
	t.end();
});

tape( 'the function parses a duration string (lowercase)', function test( t ) {
	var expected;
	var actual;
	var i;

	for ( i = 0; i < VALUES.length; i++ ) {
		expected = VALUES[ i ][ 1 ];
		actual = parseDuration( VALUES[ i ][ 0 ].toLowerCase() );
		t.deepEqual( actual, expected, 'returns expected object' );
	}
	t.end();
});

tape( 'the function parses a duration string (uppercase)', function test( t ) {
	var expected;
	var actual;
	var i;

	for ( i = 0; i < VALUES.length; i++ ) {
		expected = VALUES[ i ][ 1 ];
		actual = parseDuration( VALUES[ i ][ 0 ].toUpperCase() );
		t.deepEqual( actual, expected,
