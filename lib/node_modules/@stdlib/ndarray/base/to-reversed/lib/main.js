/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var shape2strides = require( '@stdlib/ndarray/base/shape2strides' );
var numel = require( '@stdlib/ndarray/base/numel' );
var zeros = require( '@stdlib/array/zeros' );
var ndarray = require( '@stdlib/ndarray/ctor' );
var reverse = require( '@stdlib/ndarray/base/reverse' );
var assign = require( '@stdlib/ndarray/base/assign' );


// MAIN //

/**
*  Returns an ndarray where the order of elements of an input ndarray is reversed along each dimension.
*
* @param {ndarray} x - input array
* @returns {ndarray} output array
*
* @example
* var ndarray = require( '@stdlib/ndarray/ctor' );
*
* // Create data buffer:
* var xbuf = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];
*
* // Define shape of the input array:
* var shape = [ 3, 2 ];
*
* // Define the array strides:
* var sx = [ 2, 1 ];
*
* // Define the index offset:
* var ox = 0;
*
* // Create the input ndarray:
* var x = ndarray( 'float64', xbuf, shape, sx, ox, 'row-major' );
*
* // Create a new ndarray where the order of elements of an input ndarray is reversed:
* var y = toReversed( x );
*
* console.log( y.data );
* // => <Float64Array>[ 6.0, 5.0, 4.0, 3.0, 2.0, 1.0 ]
*/
function toReversed( x ) {
	var out;
	var x1;

	// Create an output ndarray with the same shape and strides as the input:
	out = ndarray( x.dtype, zeros( numel( x.shape ), x.dtype ), x.shape, shape2strides( x.shape ), 0, x.order ); // eslint-disable-line max-len

	// Create a reversed view of the input ndarray:
	x1 = reverse( x, false );

	// Assign the elements of the reversed input ndarray view to the output ndarray:
	assign( [ x1, out ] );

	return out;
}


// EXPORTS //

module.exports = toReversed;
