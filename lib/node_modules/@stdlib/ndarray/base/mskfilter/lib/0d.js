/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Applies a mask to a provided input ndarray and assigns unmasked values to elements in a provided one-dimensional output ndarray.
*
* @private
* @param {Object} x - object containing input ndarray meta data
* @param {Object} mask - object containing mask ndarray meta data
* @param {Object} y - object containing output ndarray meta data
* @returns {void}
*
* @example
* var Float64Array = require( '@stdlib/array/float64' );
* var Uint8Array = require( '@stdlib/array/uint8' );
*
* // Define the shape of the array:
* var shape = [];
*
* // Define the array strides:
* var sx = [ 0 ];
* var sm = [ 0 ];
* var sy = [ 0 ];
*
* // Define the index offset:
* var ox = 0;
* var om = 0;
*
* var x = {
*     'dtype': 'float64',
*     'data': new Float64Array( [ 1.0 ] ),
*     'shape': shape,
*     'strides': sx,
*     'offset': ox,
*     'order': 'row-major'
* };
*
* var mask = {
*     'dtype': 'uint8',
*     'data': new Uint8Array( [ 1 ] ),
*     'shape': shape,
*     'strides': sm,
*     'offset': om,
*     'order': 'row-major'
* };
*
* var y = {
*     'dtype': 'float64',
*     'data': new Float64Array( 1 ),
*     'shape': [ 1 ],
*     'strides': sy,
*     'offset': 0,
*     'order': 'row-major'
* };
*
* mskfilter0d( x, mask, y );
*
* console.log( y.data );
* // => <Float64Array>[ 1.0 ]
*/
function mskfilter0d( x, mask, y ) {
	if ( mask.data[ mask.offset ] ) {
		y.data[ y.offset ] = x.data[ x.offset ];
	}
}


// EXPORTS //

module.exports = mskfilter0d;
