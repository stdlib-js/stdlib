/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var discreteUniform = require( '@stdlib/random/base/discrete-uniform' ).factory;
var filledarray = require( '@stdlib/array/filled' );
var filledarrayBy = require( '@stdlib/array/filled-by' );
var ndarray2array = require( '@stdlib/ndarray/base/to-array' );
var mskfilter = require( './../lib' );

var N = 10;
var shape = [ 5, 2 ];
var x = {
	'dtype': 'float64',
	'data': filledarrayBy( N, 'float64', discreteUniform( -100, 100 ) ),
	'shape': shape,
	'strides': [ 2, 1 ],
	'offset': 0,
	'order': 'row-major'
};
var mask = {
	'dtype': 'uint8',
	'data': filledarrayBy( N, 'uint8', discreteUniform( 0, 1 ) ),
	'shape': shape,
	'strides': [ 2, 1 ],
	'offset': 0,
	'order': 'row-major'
};
var y = {
	'dtype': 'float64',
	'data': filledarray( 0, N, 'float64' ),
	'shape': [ N ],
	'strides': [ 1 ],
	'offset': 0,
	'order': 'row-major'
};

mskfilter( [ x, mask, y ] );
console.log( ndarray2array( x.data, x.shape, x.strides, x.offset, x.order ) );
console.log( ndarray2array( mask.data, mask.shape, mask.strides, mask.offset, mask.order ) );
console.log( ndarray2array( y.data, y.shape, y.strides, y.offset, y.order ) );
