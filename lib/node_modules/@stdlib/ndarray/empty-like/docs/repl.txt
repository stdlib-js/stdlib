
{{alias}}( x[, options] )
    Returns an uninitialized ndarray having the same shape and data type as a
    provided input ndarray.

    The function infers the following attributes from the input array:

    - shape: array shape.
    - dtype: underlying array data type.
    - order: whether the array order is row-major (C-style) or column-major
      (Fortran-style).

    In browser environments, the function always returns zero-filled ndarrays.

    If `dtype` is 'generic', the function always returns a zero-filled ndarray.

    For returned ndarrays whose underlying memory is *not* initialized, memory
    contents are unknown and may contain *sensitive* data.

    Parameters
    ----------
    x: ndarray
        Input array.

    options: Object (optional)
        Options.

    options.shape: ArrayLikeObject<integer>|integer (optional)
        Array shape. Overrides the input array's inferred shape.

    options.dtype: string (optional)
        Array data type. Overrides the input array's inferred data type.

    options.order: string (optional)
        Array order (either 'row-major' (C-style) or 'column-major' (Fortran-
        style)). Overrides the input array's inferred order.

    options.mode: string (optional)
        Specifies how to handle indices which exceed array dimensions. If equal
        to 'throw', an ndarray instance throws an error when an index exceeds
        array dimensions. If equal to 'normalize', an ndarray instance
        normalizes negative indices and throws an error when an index exceeds
        array dimensions. If equal to 'wrap', an ndarray instance wraps around
        indices exceeding array dimensions using modulo arithmetic. If equal to
        'clamp', an ndarray instance sets an index exceeding array dimensions
        to either `0` (minimum index) or the maximum index. Default: 'throw'.

    options.submode: Array<string> (optional)
        Specifies how to handle subscripts which exceed array dimensions. If a
        mode for a corresponding dimension is equal to 'throw', an ndarray
        instance throws an error when a subscript exceeds array dimensions. If
        equal to 'normalize', an ndarray instance normalizes negative
        subscripts and throws an error when a subscript exceeds array
        dimensions. If equal to 'wrap', an ndarray instance wraps around
        subscripts exceeding array dimensions using modulo arithmetic. If equal
        to 'clamp', an ndarray instance sets a subscript exceeding array
        dimensions to either `0` (minimum index) or the maximum index. If the
        number of modes is fewer than the number of dimensions, the function
        recycles modes using modulo arithmetic. Default: [ options.mode ].

    Returns
    -------
    out: ndarray
        Output array.

    Examples
    --------
    > var x = {{alias:@stdlib/ndarray/base/zeros}}( 'float64', [ 2, 2 ], 'row-major' )
    <ndarray>
    > var sh = x.shape
    [ 2, 2 ]
    > var dt = x.dtype
    'float64'
    > var y = {{alias}}( x )
    <ndarray>
    > sh = y.shape
    [ 2, 2 ]
    > dt = y.dtype
    'float64'

    See Also
    --------

