/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* LAPACK routine to apply a vector of real plane rotations to elements of real vectors `X` and `Y`.
*
* @module @stdlib/lapack/base/dlartv
*
* @example
* var Float64Array = require( '@stdlib/array/float64' );
* var dlartv = require( '@stdlib/lapack/base/dlartv' );
*
* var X = new Float64Array( [ 1.0, 1.0 ] );
* var Y = new Float64Array( [ 1.0, 1.0 ] );
* var C = new Float64Array( [ 1.0, 1.0 ] );
* var S = new Float64Array( [ 0.0, 0.0 ] );
*
* X = dlartv( 2, X, 1, Y, 1, C, S, 1 );
* // X => <Float64Array>[ 1.0, 1.0 ]
*
* @example
* var Float64Array = require( '@stdlib/array/float64' );
* var dlartv = require( '@stdlib/lapack/base/dlartv' );
*
* var X = new Float64Array( [ 1.0, 1.0 ] );
* var Y = new Float64Array( [ 1.0, 1.0 ] );
* var C = new Float64Array( [ 1.0, 1.0 ] );
* var S = new Float64Array( [ 0.0, 0.0 ] );
*
* X = dlartv.ndarray( 2, X, 1, 0, Y, 1, 0, C, 1, 0, S, 1, 0 );
* // X => <Float64Array>[ 1.0, 1.0 ]
*/

// MODULES //

var join = require( 'path' ).join;
var tryRequire = require( '@stdlib/utils/try-require' );
var isError = require( '@stdlib/assert/is-error' );
var main = require( './main.js' );


// MAIN //

var dlartv;
var tmp = tryRequire( join( __dirname, './native.js' ) );
if ( isError( tmp ) ) {
	dlartv = main;
} else {
	dlartv = tmp;
}


// EXPORTS //

module.exports = dlartv;
