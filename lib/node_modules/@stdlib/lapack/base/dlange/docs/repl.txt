
{{alias}}( order, norm, axis, M, N, A, LDA, work )
    Returns the value of one norm, or the Frobenius norm, or the infinity norm,
    or the element of largest absolute value of a real matrix `A`.

    Indexing is relative to the first index. To introduce an offset, use typed
    array views.

    Parameters
    ----------
    order: string
        Row-major (C-style) or column-major (Fortran-style) order. Must be
        either 'row-major' or 'column-major'.

    norm: string
        Specifies the value to be returned.

    axis: string
        Axis along which to compute the norm.

    M: integer
        Number of rows in `A`.

    N: integer
        Number of columns in `A`.

    A: Float64Array
        Input matrix `A`.

    LDA: integer
        Stride of the first dimension of `A` (a.k.a., leading dimension of the
        matrix `A`).

    work: Float64Array
        Workspace array.

    Returns
    -------
    out: number
        Matrix norm.

    Examples
    --------
    > var A = new {{alias:@stdlib/array/float64}}( [ 1.0, 2.0, 3.0, 4.0 ] );
    > var work = new {{alias:@stdlib/array/float64}}( [ 0.0, 0.0 ] );
    > {{alias}}( 'row-major', 'M', 1, 2, 2, A, 2, work )
    4.0


{{alias}}.ndarray( norm, axis, M, N, A, sa1, sa2, oa, work, sw, ow )
    Returns the value of one norm, or the Frobenius norm, or the infinity norm,
    or the element of largest absolute value of a real matrix `A` using
    alternative indexing semantics.

    While typed array views mandate a view offset based on the underlying
    buffer, the offset parameters support indexing semantics based on starting
    indices.

    Parameters
    ----------
    norm: string
        Specifies the value to be returned.

    axis: string
        Axis along which to compute the norm.

    M: integer
        Number of rows in `A`.

    N: integer
        Number of columns in `A`.

    A: Float64Array
        Input matrix `A`.

    sa1: integer
        Stride of the first dimension of `A`.

    sa2: integer
        Stride of the second dimension of `A`.

    oa: integer
        Starting index for `A`.

    work: Float64Array
        Workspace array.

    sw: integer
        Stride of the workspace array.

    ow: integer
        Starting index for the workspace array.

    Returns
    -------
    out: number
        Matrix norm.

    Examples
    --------
    > var A = new {{alias:@stdlib/array/float64}}( [ 0.0, 1.0, 2.0, 3.0, 4.0 ] );
    > var work = new {{alias:@stdlib/array/float64}}( [ 0.0, 0.0, 0.0 ] );
    > {{alias}}.ndarray( 'M', 1, 2, 2, A, 2, 1, 1, work, 1, 1 )
    4.0

    See Also
    --------
