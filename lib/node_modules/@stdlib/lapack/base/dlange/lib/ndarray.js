/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* eslint-disable max-len, max-params */

'use strict';

// MODULES //

var base = require( './base.js' );


// MAIN //

/**
* Returns the value of one norm, or the Frobenius norm, or the infinity norm, or the element of largest absolute value of a real matrix `A` using alternative indexing semantics.
*
* @param {string} norm - specifies the value to be returned
* @param {NonNegativeInteger} axis - specifies the axis along which to compute the norm
* @param {NonNegativeInteger} M - number of rows of `A`
* @param {NonNegativeInteger} N - number of columns of `A`
* @param {Float64Array} A - input array
* @param {integer} strideA1 - stride of the first dimension of `A`
* @param {integer} strideA2 - stride of the second dimension of `A`
* @param {PositiveInteger} offsetA - starting index for `A`
* @param {Float64Array} work - workspace array
* @param {integer} strideW - stride length for `work`
* @param {PositiveInteger} offsetW - starting index for `work`
* @returns {number} matrix norm
*
* @example
* var Float64Array = require( '@stdlib/array/float64' );
*
* var A = new Float64Array( [ 1.0, 2.0, 3.0, 4.0 ] );
* var work = new Float64Array( 2 );
*
* var out = dlange( 'M', 1, 2, 2, A, 2, 1, 0, work, 1, 0 );
* // returns 4.0
*/
function dlange( norm, axis, M, N, A, strideA1, strideA2, offsetA, work, strideW, offsetW ) {
	return base( norm, axis, M, N, A, strideA1, strideA2, offsetA, work, strideW, offsetW );
}


// EXPORTS //

module.exports = dlange;
