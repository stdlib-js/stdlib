/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* LAPACK routine to initialize an `M` by `N` matrix `A` to `β` on the diagonal and `α` on the off-diagonals.
*
* @module @stdlib/lapack/base/dlaset
*
* @example
* var Float64Array = require( '@stdlib/array/float64' );
* var dlaset = require( '@stdlib/lapack/base/dlaset' );
*
* var A = new Float64Array( [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ] );
*
* dlaset( 'row-major', 'lower', 3, 3, 3.1, 3.7, A, 3 );
* // A => <Float64Array>[ 3.7, 0.0, 0.0, 3.1, 3.7, 0.0, 3.1, 3.1, 3.7 ]
*
* @example
* var Float64Array = require( '@stdlib/array/float64' );
* var dlaset = require( '@stdlib/lapack/base/dlaset' );
*
* var A = new Float64Array( [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ] );
*
* dlaset.ndarray( 'lower', 3, 3, 3.1, 3.7, A, 3, 1, 1 );
* // A => <Float64Array>[ 0.0, 3.7, 0.0, 0.0, 3.1, 3.7, 0.0, 3.1, 3.1, 3.7 ]
*/

// MODULES //

var join = require( 'path' ).join;
var tryRequire = require( '@stdlib/utils/try-require' );
var isError = require( '@stdlib/assert/is-error' );
var main = require( './main.js' );


// MAIN //

var dlaset;
var tmp = tryRequire( join( __dirname, './native.js' ) );
if ( isError( tmp ) ) {
	dlaset = main;
} else {
	dlaset = tmp;
}


// EXPORTS //

module.exports = dlaset;

// exports: { "ndarray": "dlaset.ndarray" }
