
{{alias}}( N, D, E, anorm, rcond, work )
    Computes the reciprocal of the condition number of a real symmetric
    positive definite tridiagonal matrix using the factorization `A = L*D*L^T`.

    Indexing is relative to the first index. To introduce an offset, use typed
    array views.
    Parameters
    ----------
    N: integer
        Order of matrix `A`.

    D: Float64Array
        The `N` diagonal elements of `A`.

    E: Float64Array
        The `N-1` off-diagonal elements of `U` or `L` from the factorization
        `A`.

    anorm: number
        The 1-norm of `A`.

    rcond: Float64Array
        Output array containing the reciprocal condition number of `A`.

    work: Float64Array
        Workspace array.

    Returns
    -------
    info: integer
        Status code. The status code indicates the following conditions:

        - if equal to zero, then the factorization was successful.
        - if less than zero, then the k-th argument had an illegal value, where
          `k = -info`.

    Examples
    --------
    > var D = new {{alias:@stdlib/array/float64}}( [ 3.0, 2.0, 1.0 ] );
    > var E = new {{alias:@stdlib/array/float64}}( [ 1.0, 1.0 ] );
    > var rcond = new {{alias:@stdlib/array/float64}}( 1 );
    > var work = new {{alias:@stdlib/array/float64}}( 3 );
    > {{alias}}( 3, D, E, 3.0, rcond, work )
    0
    > rcond
    <Float64Array>[ 0.07692307692307693 ]
    > work
    <Float64Array>[ 4.333333333333333, 4.0, 3.0 ]


{{alias}}.ndarray( N, D, sd, od, E, se, oe, anorm, rc, or, work, sw, ow )
    Computes the reciprocal of the condition number of a real symmetric
    positive definite tridiagonal matrix using the factorization
    `A = L*D*L^T` and alternative indexing semantics.

    While typed array views mandate a view offset based on the underlying
    buffer, the offset parameters support indexing semantics based on starting
    indices.

    Parameters
    ----------
    N: integer
        Order of matrix `A`.

    D: Float64Array
        The `N` diagonal elements of `A`.

    sd: integer
        Stride length for `D`.

    od: integer
        Starting index for `D`.

    E: Float64Array
        The `N-1` off-diagonal elements of `U` or `L` from the factorization
        `A`.

    se: integer
        Stride length for `E`.

    oe: integer
        Starting index for `E`.

    anorm: number
        The 1-norm of `A`.

    rc: Float64Array
        Output array containing the reciprocal condition number of `A`.

    or: integer
        Starting index for `rc`.

    work: Float64Array
        Workspace array.

    sw: integer
        Stride length for `work`.

    ow: integer
        Starting index for `work`.

    Returns
    -------
    info: integer
        Status code. The status code indicates the following conditions:

        - if equal to zero, then the factorization was successful.
        - if less than zero, then the k-th argument had an illegal value, where
          `k = -info`.

    Examples
    --------
    > var D = new {{alias:@stdlib/array/float64}}( [ 0.0, 3.0, 2.0, 1.0 ] );
    > var E = new {{alias:@stdlib/array/float64}}( [ 0.0, 1.0, 1.0 ] );
    > var rcond = new {{alias:@stdlib/array/float64}}( 1 );
    > var work = new {{alias:@stdlib/array/float64}}( 3 );
    > {{alias}}.ndarray( 3, D, 1, 1, E, 1, 1, 3.0, rcond, 0, work, 1, 0 )
    0
    > rcond
    <Float64Array>[ 0.07692307692307693 ]
    > work
    <Float64Array>[ 4.333333333333333, 4.0, 3.0 ]

    See Also
    --------
