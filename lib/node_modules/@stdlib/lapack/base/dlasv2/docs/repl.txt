
{{alias}}( F, G, H, out )
    Computes singular value decomposition of a 2x2 triangular matrix.

    Indexing is relative to the first index. To introduce an offset, use typed
    array views.

    Parameters
    ----------
    F: number
        The (0,0) element of matrix.

    G: number
        The (0,1) element of matrix.

    H: number
        The (1,1) element of matrix.

    out: Float64Array
        Output array containing `SSMIN`, `SSMAX`, `SNR`, `CSR`, `SNL`, and
        `CSL` respectively.

    Returns
    -------
    out: Float64Array
        Mutated array.

    Examples
    --------
    > var out =  new {{alias:@stdlib/array/float64}}( 6 );
    > {{alias}}( 2.0, 3.0, 4.0, out );
    > out[ 0 ]
    1.5513263285176897
    > out[ 1 ]
    5.1568776039816795
    > out[ 2 ]
    0.9664996487646696
    > out[ 3 ]
    0.25666793515702424
    > out[ 4 ]
    0.7496781758158659
    > out[ 5 ]
    0.6618025632357402


{{alias}}.ndarray( F, G, H, out, strideOut, offsetOut )
    Computes singular value decomposition of a 2x2 triangular matrix using
    alternative indexing semantics.

    While typed array views mandate a view offset based on the underlying
    buffer, the offset parameters support indexing semantics based on starting
    indices.

    Parameters
    ----------
    F: number
        The (0,0) element of matrix.

    G: number
        The (0,1) element of matrix.

    H: number
        The (1,1) element of matrix.

    out: Float64Array
        Output array containing `SSMIN`, `SSMAX`, `SNR`, `CSR`, `SNL`, and
        `CSL` respectively.

    strideOut: integer
        Stride length for `Out`.

    offsetOut: integer
        Starting index for `Out`.

    Returns
    -------
    out: Float64Array
        Mutated array.

    Examples
    --------
    > var out =  new {{alias:@stdlib/array/float64}}( 6 );
    > {{alias}}.ndarray( 2.0, 3.0, 4.0, out, 1, 0 );
    > out[ 0 ]
    1.5513263285176897
    > out[ 1 ]
    5.1568776039816795
    > out[ 2 ]
    0.9664996487646696
    > out[ 3 ]
    0.25666793515702424
    > out[ 4 ]
    0.7496781758158659
    > out[ 5 ]
    0.6618025632357402

    See Also
    --------
