/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var sqrt = require( '@stdlib/math/base/special/sqrt' );
var pow = require( '@stdlib/math/base/special/pow' );
var dlamch = require( '@stdlib/lapack/base/dlamch' );
var max = require( '@stdlib/math/base/special/max' );
var min = require( '@stdlib/math/base/special/min' );
var abs = require( '@stdlib/math/base/special/abs' );
var isnan = require( '@stdlib/assert/is-nan' );


// MAIN //

/**
* Returns hypotenuse taking care not to cause unnecessary overflow and underflow.
*
* @param {number} x - number
* @param {number} y - number
* @returns {number} hypotenuse
*
* @example
* var v = dlapy2( -5.0, 12.0 );
* // returns 13.0
*/
function dlapy2( x, y ) {
	var hugeval;
	var ax;
	var ay;
	var w;
	var z;

	if ( isnan( x ) || isnan( y ) ) {
		return NaN;
	}
	hugeval = dlamch( 'O' );
	ax = abs( x );
	ay = abs( y );
	w = max( ax, ay );
	z = min( ax, ay );
	if ( z === 0.0 || w > hugeval ) {
		return w;
	}
	return w * sqrt( 1.0 + pow( ( z / w ), 2 ) );
}


// EXPORTS //

module.exports = dlapy2;
