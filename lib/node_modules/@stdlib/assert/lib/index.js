/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/*
* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );


// MAIN //

/**
* Top-level namespace.
*
* @namespace ns
*/
var ns = {};

/**
* @name contains
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/contains}
*/
setReadOnly( ns, 'contains', require( '@stdlib/assert/contains' ) );

/**
* @name deepHasOwnProp
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/deep-has-own-property}
*/
setReadOnly( ns, 'deepHasOwnProp', require( '@stdlib/assert/deep-has-own-property' ) );

/**
* @name deepHasProp
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/deep-has-property}
*/
setReadOnly( ns, 'deepHasProp', require( '@stdlib/assert/deep-has-property' ) );

/**
* @name hasArrayBufferSupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-arraybuffer-support}
*/
setReadOnly( ns, 'hasArrayBufferSupport', require( '@stdlib/assert/has-arraybuffer-support' ) );

/**
* @name hasAsyncAwaitSupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-async-await-support}
*/
setReadOnly( ns, 'hasAsyncAwaitSupport', require( '@stdlib/assert/has-async-await-support' ) );

/**
* @name hasClassSupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-class-support}
*/
setReadOnly( ns, 'hasClassSupport', require( '@stdlib/assert/has-class-support' ) );

/**
* @name hasFloat32ArraySupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-float32array-support}
*/
setReadOnly( ns, 'hasFloat32ArraySupport', require( '@stdlib/assert/has-float32array-support' ) );

/**
* @name hasFloat64ArraySupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-float64array-support}
*/
setReadOnly( ns, 'hasFloat64ArraySupport', require( '@stdlib/assert/has-float64array-support' ) );

/**
* @name hasFunctionNameSupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-function-name-support}
*/
setReadOnly( ns, 'hasFunctionNameSupport', require( '@stdlib/assert/has-function-name-support' ) );

/**
* @name hasGeneratorSupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-generator-support}
*/
setReadOnly( ns, 'hasGeneratorSupport', require( '@stdlib/assert/has-generator-support' ) );

/**
* @name hasInt16ArraySupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-int16array-support}
*/
setReadOnly( ns, 'hasInt16ArraySupport', require( '@stdlib/assert/has-int16array-support' ) );

/**
* @name hasInt32ArraySupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-int32array-support}
*/
setReadOnly( ns, 'hasInt32ArraySupport', require( '@stdlib/assert/has-int32array-support' ) );

/**
* @name hasInt8ArraySupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-int8array-support}
*/
setReadOnly( ns, 'hasInt8ArraySupport', require( '@stdlib/assert/has-int8array-support' ) );

/**
* @name hasMapSupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-map-support}
*/
setReadOnly( ns, 'hasMapSupport', require( '@stdlib/assert/has-map-support' ) );

/**
* @name hasNodeBufferSupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-node-buffer-support}
*/
setReadOnly( ns, 'hasNodeBufferSupport', require( '@stdlib/assert/has-node-buffer-support' ) );

/**
* @name hasOwnProp
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-own-property}
*/
setReadOnly( ns, 'hasOwnProp', require( '@stdlib/assert/has-own-property' ) );

/**
* @name hasProp
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-property}
*/
setReadOnly( ns, 'hasProp', require( '@stdlib/assert/has-property' ) );

/**
* @name hasPrototype
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-prototype}
*/
setReadOnly( ns, 'hasPrototype', require( '@stdlib/assert/has-prototype' ) );

/**
* @name hasProxySupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-proxy-support}
*/
setReadOnly( ns, 'hasProxySupport', require( '@stdlib/assert/has-proxy-support' ) );

/**
* @name hasSetSupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-set-support}
*/
setReadOnly( ns, 'hasSetSupport', require( '@stdlib/assert/has-set-support' ) );

/**
* @name hasSharedArrayBufferSupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-sharedarraybuffer-support}
*/
setReadOnly( ns, 'hasSharedArrayBufferSupport', require( '@stdlib/assert/has-sharedarraybuffer-support' ) );

/**
* @name hasSymbolSupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-symbol-support}
*/
setReadOnly( ns, 'hasSymbolSupport', require( '@stdlib/assert/has-symbol-support' ) );

/**
* @name hasToStringTagSupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-tostringtag-support}
*/
setReadOnly( ns, 'hasToStringTagSupport', require( '@stdlib/assert/has-tostringtag-support' ) );

/**
* @name hasUint16ArraySupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-uint16array-support}
*/
setReadOnly( ns, 'hasUint16ArraySupport', require( '@stdlib/assert/has-uint16array-support' ) );

/**
* @name hasUint32ArraySupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-uint32array-support}
*/
setReadOnly( ns, 'hasUint32ArraySupport', require( '@stdlib/assert/has-uint32array-support' ) );

/**
* @name hasUint8ArraySupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-uint8array-support}
*/
setReadOnly( ns, 'hasUint8ArraySupport', require( '@stdlib/assert/has-uint8array-support' ) );

/**
* @name hasUint8ClampedArraySupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-uint8clampedarray-support}
*/
setReadOnly( ns, 'hasUint8ClampedArraySupport', require( '@stdlib/assert/has-uint8clampedarray-support' ) );

/**
* @name hasWebAssemblySupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-wasm-support}
*/
setReadOnly( ns, 'hasWebAssemblySupport', require( '@stdlib/assert/has-wasm-support' ) );

/**
* @name hasWeakMapSupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-weakmap-support}
*/
setReadOnly( ns, 'hasWeakMapSupport', require( '@stdlib/assert/has-weakmap-support' ) );

/**
* @name hasWeakSetSupport
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/has-weakset-support}
*/
setReadOnly( ns, 'hasWeakSetSupport', require( '@stdlib/assert/has-weakset-support' ) );

/**
* @name instanceOf
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/instance-of}
*/
setReadOnly( ns, 'instanceOf', require( '@stdlib/assert/instance-of' ) );

/**
* @name isAbsolutePath
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-absolute-path}
*/
setReadOnly( ns, 'isAbsolutePath', require( '@stdlib/assert/is-absolute-path' ) );

/**
* @name isAlphagram
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-alphagram}
*/
setReadOnly( ns, 'isAlphagram', require( '@stdlib/assert/is-alphagram' ) );

/**
* @name isAnagram
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-anagram}
*/
setReadOnly( ns, 'isAnagram', require( '@stdlib/assert/is-anagram' ) );

/**
* @name isArguments
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-arguments}
*/
setReadOnly( ns, 'isArguments', require( '@stdlib/assert/is-arguments' ) );

/**
* @name isArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-array}
*/
setReadOnly( ns, 'isArray', require( '@stdlib/assert/is-array' ) );

/**
* @name isArrayArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-array-array}
*/
setReadOnly( ns, 'isArrayArray', require( '@stdlib/assert/is-array-array' ) );

/**
* @name isArrayLength
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-array-length}
*/
setReadOnly( ns, 'isArrayLength', require( '@stdlib/assert/is-array-length' ) );

/**
* @name isArrayLike
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-array-like}
*/
setReadOnly( ns, 'isArrayLike', require( '@stdlib/assert/is-array-like' ) );

/**
* @name isArrayLikeObject
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-array-like-object}
*/
setReadOnly( ns, 'isArrayLikeObject', require( '@stdlib/assert/is-array-like-object' ) );

/**
* @name isArrayBuffer
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-arraybuffer}
*/
setReadOnly( ns, 'isArrayBuffer', require( '@stdlib/assert/is-arraybuffer' ) );

/**
* @name isASCII
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-ascii}
*/
setReadOnly( ns, 'isASCII', require( '@stdlib/assert/is-ascii' ) );

/**
* @name isBetween
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-between}
*/
setReadOnly( ns, 'isBetween', require( '@stdlib/assert/is-between' ) );

/**
* @name isBetweenArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-between-array}
*/
setReadOnly( ns, 'isBetweenArray', require( '@stdlib/assert/is-between-array' ) );

/**
* @name isBinaryString
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-binary-string}
*/
setReadOnly( ns, 'isBinaryString', require( '@stdlib/assert/is-binary-string' ) );

/**
* @name isBoolean
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-boolean}
*/
setReadOnly( ns, 'isBoolean', require( '@stdlib/assert/is-boolean' ) );

/**
* @name isBooleanArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-boolean-array}
*/
setReadOnly( ns, 'isBooleanArray', require( '@stdlib/assert/is-boolean-array' ) );

/**
* @name IS_BROWSER
* @memberof ns
* @readonly
* @type {boolean}
* @see {@link module:@stdlib/assert/is-browser}
*/
setReadOnly( ns, 'IS_BROWSER', require( '@stdlib/assert/is-browser' ) );

/**
* @name isBuffer
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-buffer}
*/
setReadOnly( ns, 'isBuffer', require( '@stdlib/assert/is-buffer' ) );

/**
* @name isCapitalized
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-capitalized}
*/
setReadOnly( ns, 'isCapitalized', require( '@stdlib/assert/is-capitalized' ) );

/**
* @name isCollection
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-collection}
*/
setReadOnly( ns, 'isCollection', require( '@stdlib/assert/is-collection' ) );

/**
* @name isComplex
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-complex}
*/
setReadOnly( ns, 'isComplex', require( '@stdlib/assert/is-complex' ) );

/**
* @name isComplex64
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-complex64}
*/
setReadOnly( ns, 'isComplex64', require( '@stdlib/assert/is-complex64' ) );

/**
* @name isComplex128
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-complex128}
*/
setReadOnly( ns, 'isComplex128', require( '@stdlib/assert/is-complex128' ) );

/**
* @name IS_DARWIN
* @memberof ns
* @readonly
* @type {boolean}
* @see {@link module:@stdlib/assert/is-darwin}
*/
setReadOnly( ns, 'IS_DARWIN', require( '@stdlib/assert/is-darwin' ) );

/**
* @name isDateObject
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-date-object}
*/
setReadOnly( ns, 'isDateObject', require( '@stdlib/assert/is-date-object' ) );

/**
* @name isDigitString
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-digit-string}
*/
setReadOnly( ns, 'isDigitString', require( '@stdlib/assert/is-digit-string' ) );

/**
* @name IS_ELECTRON
* @memberof ns
* @readonly
* @type {boolean}
* @see {@link module:@stdlib/assert/is-electron}
*/
setReadOnly( ns, 'IS_ELECTRON', require( '@stdlib/assert/is-electron' ) );

/**
* @name IS_ELECTRON_MAIN
* @memberof ns
* @readonly
* @type {boolean}
* @see {@link module:@stdlib/assert/is-electron-main}
*/
setReadOnly( ns, 'IS_ELECTRON_MAIN', require( '@stdlib/assert/is-electron-main' ) );

/**
* @name IS_ELECTRON_RENDERER
* @memberof ns
* @readonly
* @type {boolean}
* @see {@link module:@stdlib/assert/is-electron-renderer}
*/
setReadOnly( ns, 'IS_ELECTRON_RENDERER', require( '@stdlib/assert/is-electron-renderer' ) );

/**
* @name isEmailAddress
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-email-address}
*/
setReadOnly( ns, 'isEmailAddress', require( '@stdlib/assert/is-email-address' ) );

/**
* @name isEmptyArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-empty-array}
*/
setReadOnly( ns, 'isEmptyArray', require( '@stdlib/assert/is-empty-array' ) );

/**
* @name isEmptyObject
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-empty-object}
*/
setReadOnly( ns, 'isEmptyObject', require( '@stdlib/assert/is-empty-object' ) );

/**
* @name isEmptyString
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-empty-string}
*/
setReadOnly( ns, 'isEmptyString', require( '@stdlib/assert/is-empty-string' ) );

/**
* @name isEnumerableProperty
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-enumerable-property}
*/
setReadOnly( ns, 'isEnumerableProperty', require( '@stdlib/assert/is-enumerable-property' ) );

/**
* @name isError
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-error}
*/
setReadOnly( ns, 'isError', require( '@stdlib/assert/is-error' ) );

/**
* @name isEvalError
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-eval-error}
*/
setReadOnly( ns, 'isEvalError', require( '@stdlib/assert/is-eval-error' ) );

/**
* @name isEven
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-even}
*/
setReadOnly( ns, 'isEven', require( '@stdlib/assert/is-even' ) );

/**
* @name isFalsy
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-falsy}
*/
setReadOnly( ns, 'isFalsy', require( '@stdlib/assert/is-falsy' ) );

/**
* @name isFalsyArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-falsy-array}
*/
setReadOnly( ns, 'isFalsyArray', require( '@stdlib/assert/is-falsy-array' ) );

/**
* @name isFinite
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-finite}
*/
setReadOnly( ns, 'isFinite', require( '@stdlib/assert/is-finite' ) );

/**
* @name isFiniteArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-finite-array}
*/
setReadOnly( ns, 'isFiniteArray', require( '@stdlib/assert/is-finite-array' ) );

/**
* @name isFloat32Array
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-float32array}
*/
setReadOnly( ns, 'isFloat32Array', require( '@stdlib/assert/is-float32array' ) );

/**
* @name isFloat64Array
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-float64array}
*/
setReadOnly( ns, 'isFloat64Array', require( '@stdlib/assert/is-float64array' ) );

/**
* @name isFunction
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-function}
*/
setReadOnly( ns, 'isFunction', require( '@stdlib/assert/is-function' ) );

/**
* @name isFunctionArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-function-array}
*/
setReadOnly( ns, 'isFunctionArray', require( '@stdlib/assert/is-function-array' ) );

/**
* @name isHexString
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-hex-string}
*/
setReadOnly( ns, 'isHexString', require( '@stdlib/assert/is-hex-string' ) );

/**
* @name isInfinite
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-infinite}
*/
setReadOnly( ns, 'isInfinite', require( '@stdlib/assert/is-infinite' ) );

/**
* @name isInt16Array
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-int16array}
*/
setReadOnly( ns, 'isInt16Array', require( '@stdlib/assert/is-int16array' ) );

/**
* @name isInt32Array
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-int32array}
*/
setReadOnly( ns, 'isInt32Array', require( '@stdlib/assert/is-int32array' ) );

/**
* @name isInt8Array
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-int8array}
*/
setReadOnly( ns, 'isInt8Array', require( '@stdlib/assert/is-int8array' ) );

/**
* @name isInteger
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-integer}
*/
setReadOnly( ns, 'isInteger', require( '@stdlib/assert/is-integer' ) );

/**
* @name isIntegerArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-integer-array}
*/
setReadOnly( ns, 'isIntegerArray', require( '@stdlib/assert/is-integer-array' ) );

/**
* @name isJSON
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-json}
*/
setReadOnly( ns, 'isJSON', require( '@stdlib/assert/is-json' ) );

/**
* @name isLeapYear
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-leap-year}
*/
setReadOnly( ns, 'isLeapYear', require( '@stdlib/assert/is-leap-year' ) );

/**
* @name IS_LITTLE_ENDIAN
* @memberof ns
* @readonly
* @type {boolean}
* @see {@link module:@stdlib/assert/is-little-endian}
*/
setReadOnly( ns, 'IS_LITTLE_ENDIAN', require( '@stdlib/assert/is-little-endian' ) );

/**
* @name isLowercase
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-lowercase}
*/
setReadOnly( ns, 'isLowercase', require( '@stdlib/assert/is-lowercase' ) );

/**
* @name isMatrixLike
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-matrix-like}
*/
setReadOnly( ns, 'isMatrixLike', require( '@stdlib/assert/is-matrix-like' ) );

/**
* @name isnan
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-nan}
*/
setReadOnly( ns, 'isnan', require( '@stdlib/assert/is-nan' ) );

/**
* @name isNaNArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-nan-array}
*/
setReadOnly( ns, 'isNaNArray', require( '@stdlib/assert/is-nan-array' ) );

/**
* @name isNativeFunction
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-native-function}
*/
setReadOnly( ns, 'isNativeFunction', require( '@stdlib/assert/is-native-function' ) );

/**
* @name isndarrayLike
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-ndarray-like}
*/
setReadOnly( ns, 'isndarrayLike', require( '@stdlib/assert/is-ndarray-like' ) );

/**
* @name isNegativeInteger
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-negative-integer}
*/
setReadOnly( ns, 'isNegativeInteger', require( '@stdlib/assert/is-negative-integer' ) );

/**
* @name isNegativeIntegerArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-negative-integer-array}
*/
setReadOnly( ns, 'isNegativeIntegerArray', require( '@stdlib/assert/is-negative-integer-array' ) );

/**
* @name isNegativeNumber
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-negative-number}
*/
setReadOnly( ns, 'isNegativeNumber', require( '@stdlib/assert/is-negative-number' ) );

/**
* @name isNegativeNumberArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-negative-number-array}
*/
setReadOnly( ns, 'isNegativeNumberArray', require( '@stdlib/assert/is-negative-number-array' ) );

/**
* @name isNegativeZero
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-negative-zero}
*/
setReadOnly( ns, 'isNegativeZero', require( '@stdlib/assert/is-negative-zero' ) );

/**
* @name IS_NODE
* @memberof ns
* @readonly
* @type {boolean}
* @see {@link module:@stdlib/assert/is-node}
*/
setReadOnly( ns, 'IS_NODE', require( '@stdlib/assert/is-node' ) );

/**
* @name isNodeBuiltin
* @memberof ns
* @readonly
* @type {function}
* @see {@link module:@stdlib/assert/is-node-builtin}
*/
setReadOnly( ns, 'isNodeBuiltin', require( '@stdlib/assert/is-node-builtin' ) );

/**
* @name isNodeDuplexStreamLike
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-node-duplex-stream-like}
*/
setReadOnly( ns, 'isNodeDuplexStreamLike', require( '@stdlib/assert/is-node-duplex-stream-like' ) );

/**
* @name isNodeReadableStreamLike
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-node-readable-stream-like}
*/
setReadOnly( ns, 'isNodeReadableStreamLike', require( '@stdlib/assert/is-node-readable-stream-like' ) );

/**
* @name isNodeREPL
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-node-repl}
*/
setReadOnly( ns, 'isNodeREPL', require( '@stdlib/assert/is-node-repl' ) );

/**
* @name isNodeStreamLike
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-node-stream-like}
*/
setReadOnly( ns, 'isNodeStreamLike', require( '@stdlib/assert/is-node-stream-like' ) );

/**
* @name isNodeTransformStreamLike
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-node-transform-stream-like}
*/
setReadOnly( ns, 'isNodeTransformStreamLike', require( '@stdlib/assert/is-node-transform-stream-like' ) );

/**
* @name isNodeWritableStreamLike
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-node-writable-stream-like}
*/
setReadOnly( ns, 'isNodeWritableStreamLike', require( '@stdlib/assert/is-node-writable-stream-like' ) );

/**
* @name isNonNegativeInteger
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-nonnegative-integer}
*/
setReadOnly( ns, 'isNonNegativeInteger', require( '@stdlib/assert/is-nonnegative-integer' ) );

/**
* @name isNonNegativeIntegerArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-nonnegative-integer-array}
*/
setReadOnly( ns, 'isNonNegativeIntegerArray', require( '@stdlib/assert/is-nonnegative-integer-array' ) );

/**
* @name isNonNegativeNumber
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-nonnegative-number}
*/
setReadOnly( ns, 'isNonNegativeNumber', require( '@stdlib/assert/is-nonnegative-number' ) );

/**
* @name isNonNegativeNumberArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-nonnegative-number-array}
*/
setReadOnly( ns, 'isNonNegativeNumberArray', require( '@stdlib/assert/is-nonnegative-number-array' ) );

/**
* @name isNonPositiveInteger
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-nonpositive-integer}
*/
setReadOnly( ns, 'isNonPositiveInteger', require( '@stdlib/assert/is-nonpositive-integer' ) );

/**
* @name isNonPositiveIntegerArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-nonpositive-integer-array}
*/
setReadOnly( ns, 'isNonPositiveIntegerArray', require( '@stdlib/assert/is-nonpositive-integer-array' ) );

/**
* @name isNonPositiveNumber
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-nonpositive-number}
*/
setReadOnly( ns, 'isNonPositiveNumber', require( '@stdlib/assert/is-nonpositive-number' ) );

/**
* @name isNonPositiveNumberArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-nonpositive-number-array}
*/
setReadOnly( ns, 'isNonPositiveNumberArray', require( '@stdlib/assert/is-nonpositive-number-array' ) );

/**
* @name isNull
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-null}
*/
setReadOnly( ns, 'isNull', require( '@stdlib/assert/is-null' ) );

/**
* @name isNullArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-null-array}
*/
setReadOnly( ns, 'isNullArray', require( '@stdlib/assert/is-null-array' ) );

/**
* @name isNumber
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-number}
*/
setReadOnly( ns, 'isNumber', require( '@stdlib/assert/is-number' ) );

/**
* @name isNumberArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-number-array}
*/
setReadOnly( ns, 'isNumberArray', require( '@stdlib/assert/is-number-array' ) );

/**
* @name isNumericArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-numeric-array}
*/
setReadOnly( ns, 'isNumericArray', require( '@stdlib/assert/is-numeric-array' ) );

/**
* @name isObject
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-object}
*/
setReadOnly( ns, 'isObject', require( '@stdlib/assert/is-object' ) );

/**
* @name isObjectArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-object-array}
*/
setReadOnly( ns, 'isObjectArray', require( '@stdlib/assert/is-object-array' ) );

/**
* @name isObjectLike
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-object-like}
*/
setReadOnly( ns, 'isObjectLike', require( '@stdlib/assert/is-object-like' ) );

/**
* @name isOdd
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-odd}
*/
setReadOnly( ns, 'isOdd', require( '@stdlib/assert/is-odd' ) );

/**
* @name isPlainObject
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-plain-object}
*/
setReadOnly( ns, 'isPlainObject', require( '@stdlib/assert/is-plain-object' ) );

/**
* @name isPlainObjectArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-plain-object-array}
*/
setReadOnly( ns, 'isPlainObjectArray', require( '@stdlib/assert/is-plain-object-array' ) );

/**
* @name isPositiveInteger
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-positive-integer}
*/
setReadOnly( ns, 'isPositiveInteger', require( '@stdlib/assert/is-positive-integer' ) );

/**
* @name isPositiveIntegerArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-positive-integer-array}
*/
setReadOnly( ns, 'isPositiveIntegerArray', require( '@stdlib/assert/is-positive-integer-array' ) );

/**
* @name isPositiveNumber
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-positive-number}
*/
setReadOnly( ns, 'isPositiveNumber', require( '@stdlib/assert/is-positive-number' ) );

/**
* @name isPositiveZero
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-positive-zero}
*/
setReadOnly( ns, 'isPositiveZero', require( '@stdlib/assert/is-positive-zero' ) );

/**
* @name isPositiveNumberArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-positive-number-array}
*/
setReadOnly( ns, 'isPositiveNumberArray', require( '@stdlib/assert/is-positive-number-array' ) );

/**
* @name isPrimitive
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-primitive}
*/
setReadOnly( ns, 'isPrimitive', require( '@stdlib/assert/is-primitive' ) );

/**
* @name isPrimitiveArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-primitive-array}
*/
setReadOnly( ns, 'isPrimitiveArray', require( '@stdlib/assert/is-primitive-array' ) );

/**
* @name isProbability
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-probability}
*/
setReadOnly( ns, 'isProbability', require( '@stdlib/assert/is-probability' ) );

/**
* @name isProbabilityArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-probability-array}
*/
setReadOnly( ns, 'isProbabilityArray', require( '@stdlib/assert/is-probability-array' ) );

/**
* @name isRangeError
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-range-error}
*/
setReadOnly( ns, 'isRangeError', require( '@stdlib/assert/is-range-error' ) );

/**
* @name isReferenceError
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-reference-error}
*/
setReadOnly( ns, 'isReferenceError', require( '@stdlib/assert/is-reference-error' ) );

/**
* @name isRegExp
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-regexp}
*/
setReadOnly( ns, 'isRegExp', require( '@stdlib/assert/is-regexp' ) );

/**
* @name isRegExpString
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-regexp-string}
*/
setReadOnly( ns, 'isRegExpString', require( '@stdlib/assert/is-regexp-string' ) );

/**
* @name isRelativePath
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-relative-path}
*/
setReadOnly( ns, 'isRelativePath', require( '@stdlib/assert/is-relative-path' ) );

/**
* @name isSafeInteger
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-safe-integer}
*/
setReadOnly( ns, 'isSafeInteger', require( '@stdlib/assert/is-safe-integer' ) );

/**
* @name isSafeIntegerArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-safe-integer-array}
*/
setReadOnly( ns, 'isSafeIntegerArray', require( '@stdlib/assert/is-safe-integer-array' ) );

/**
* @name isSameValue
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-same-value}
*/
setReadOnly( ns, 'isSameValue', require( '@stdlib/assert/is-same-value' ) );

/**
* @name isSharedArrayBuffer
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-sharedarraybuffer}
*/
setReadOnly( ns, 'isSharedArrayBuffer', require( '@stdlib/assert/is-sharedarraybuffer' ) );

/**
* @name isStrictEqual
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-strict-equal}
*/
setReadOnly( ns, 'isStrictEqual', require( '@stdlib/assert/is-strict-equal' ) );

/**
* @name isString
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-string}
*/
setReadOnly( ns, 'isString', require( '@stdlib/assert/is-string' ) );

/**
* @name isStringArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-string-array}
*/
setReadOnly( ns, 'isStringArray', require( '@stdlib/assert/is-string-array' ) );

/**
* @name isSymbol
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-symbol}
*/
setReadOnly( ns, 'isSymbol', require( '@stdlib/assert/is-symbol' ) );

/**
* @name isSymbolArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-symbol-array}
*/
setReadOnly( ns, 'isSymbolArray', require( '@stdlib/assert/is-symbol-array' ) );

/**
* @name isSyntaxError
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-syntax-error}
*/
setReadOnly( ns, 'isSyntaxError', require( '@stdlib/assert/is-syntax-error' ) );

/**
* @name isTruthy
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-truthy}
*/
setReadOnly( ns, 'isTruthy', require( '@stdlib/assert/is-truthy' ) );

/**
* @name isTruthyArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-truthy-array}
*/
setReadOnly( ns, 'isTruthyArray', require( '@stdlib/assert/is-truthy-array' ) );

/**
* @name isTypeError
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-type-error}
*/
setReadOnly( ns, 'isTypeError', require( '@stdlib/assert/is-type-error' ) );

/**
* @name isTypedArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-typed-array}
*/
setReadOnly( ns, 'isTypedArray', require( '@stdlib/assert/is-typed-array' ) );

/**
* @name isTypedArrayLength
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-typed-array-length}
*/
setReadOnly( ns, 'isTypedArrayLength', require( '@stdlib/assert/is-typed-array-length' ) );

/**
* @name isTypedArrayLike
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-typed-array-like}
*/
setReadOnly( ns, 'isTypedArrayLike', require( '@stdlib/assert/is-typed-array-like' ) );

/**
* @name isUint16Array
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-uint16array}
*/
setReadOnly( ns, 'isUint16Array', require( '@stdlib/assert/is-uint16array' ) );

/**
* @name isUint32Array
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-uint32array}
*/
setReadOnly( ns, 'isUint32Array', require( '@stdlib/assert/is-uint32array' ) );

/**
* @name isUint8Array
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-uint8array}
*/
setReadOnly( ns, 'isUint8Array', require( '@stdlib/assert/is-uint8array' ) );

/**
* @name isUint8ClampedArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-uint8clampedarray}
*/
setReadOnly( ns, 'isUint8ClampedArray', require( '@stdlib/assert/is-uint8clampedarray' ) );

/**
* @name isUNCPath
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-unc-path}
*/
setReadOnly( ns, 'isUNCPath', require( '@stdlib/assert/is-unc-path' ) );

/**
* @name isUndefined
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-undefined}
*/
setReadOnly( ns, 'isUndefined', require( '@stdlib/assert/is-undefined' ) );

/**
* @name isUndefinedOrNull
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-undefined-or-null}
*/
setReadOnly( ns, 'isUndefinedOrNull', require( '@stdlib/assert/is-undefined-or-null' ) );

/**
* @name isUnityProbabilityArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-unity-probability-array}
*/
setReadOnly( ns, 'isUnityProbabilityArray', require( '@stdlib/assert/is-unity-probability-array' ) );

/**
* @name isUppercase
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-uppercase}
*/
setReadOnly( ns, 'isUppercase', require( '@stdlib/assert/is-uppercase' ) );

/**
* @name isURI
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-uri}
*/
setReadOnly( ns, 'isURI', require( '@stdlib/assert/is-uri' ) );

/**
* @name isURIError
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-uri-error}
*/
setReadOnly( ns, 'isURIError', require( '@stdlib/assert/is-uri-error' ) );

/**
* @name isVectorLike
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-vector-like}
*/
setReadOnly( ns, 'isVectorLike', require( '@stdlib/assert/is-vector-like' ) );

/**
* @name IS_WEB_WORKER
* @memberof ns
* @readonly
* @type {boolean}
* @see {@link module:@stdlib/assert/is-web-worker}
*/
setReadOnly( ns, 'IS_WEB_WORKER', require( '@stdlib/assert/is-web-worker' ) );

/**
* @name isWhitespace
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/assert/is-whitespace}
*/
setReadOnly( ns, 'isWhitespace', require( '@stdlib/assert/is-whitespace' ) );

/**
* @name IS_WINDOWS
* @memberof ns
* @readonly
* @type {boolean}
* @see {@link module:@stdlib/assert/is-windows}
*/
setReadOnly( ns, 'IS_WINDOWS', require( '@stdlib/assert/is-windows' ) );


// EXPORTS //

module.exports = ns;
