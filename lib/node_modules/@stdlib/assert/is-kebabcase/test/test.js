/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var IS_BROWSER = require( '@stdlib/assert/is-browser' );
var isKebabCase = require( './../lib' );


// VARIABLES //

var opts = {
	'skip': IS_BROWSER
};


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof isKebabCase, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function tests for a string in kebab case', opts, function test( t ) {
	var values;
	var i;

	values = [
		'beep',
		'beep-boop',
		'foo-bar-baz'
	];

	for ( i = 0; i < values.length; i++ ) {
		t.equal( isKebabCase( values[i] ), true, 'returns true when provided '+values[i] );
	}
	t.end();
});

tape( 'the function returns `false` if not provided a string in kebab case', opts, function test( t ) {
	var values;
	var i;

	values = [
		'beepboop',
		'boop',
		'boop-bop-beep',
		'beep-boop-',
		'beep-',
		'Beep-boop',
		'BEEP-BOOP',
		'BEEP-BOOP-bop',
		'3',
		'_beep-boop',
		'',
		' ',
		'beep_boop',
		null,
		5,
		NaN,
		true,
		false,
		undefined,
		[],
		{},
		function noop() {}
	];

	for ( i = 0; i < values.length; i++ ) {
		t.equal( isKebabCase( values[i] ), false, 'returns false when provided '+values[i] );
	}
	t.end();
});

