/* eslint-disable max-lines */

/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/*
* When adding names to the namespace, ensure that they are added in alphabetical order according to alias (namespace key).
*/

var ns = [];

ns.push({
	'alias': 'capitalize',
	'path': '@stdlib/string/capitalize',
	'value': require( '@stdlib/string/capitalize' ),
	'type': 'Function',
	'related': [
		'@stdlib/string/uncapitalize',
		'@stdlib/string/uppercase'
	]
});

ns.push({
	'alias': 'capitalizeKeys',
	'path': '@stdlib/utils/capitalize-keys',
	'value': require( '@stdlib/utils/capitalize-keys' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/uncapitalize-keys',
		'@stdlib/utils/uppercase-keys'
	]
});

ns.push({
	'alias': 'CATALAN',
	'path': '@stdlib/constants/math/float64-catalan',
	'value': require( '@stdlib/constants/math/float64-catalan' ),
	'type': 'number',
	'related': []
});

ns.push({
	'alias': 'CBRT_EPS',
	'path': '@stdlib/constants/math/float64-cbrt-eps',
	'value': require( '@stdlib/constants/math/float64-cbrt-eps' ),
	'type': 'number',
	'related': [
		'@stdlib/constants/math/float64-eps',
		'@stdlib/constants/math/float64-sqrt-eps'
	]
});

ns.push({
	'alias': 'chdir',
	'path': '@stdlib/process/chdir',
	'value': require( '@stdlib/process/chdir' ),
	'type': 'Function',
	'related': [
		'@stdlib/process/cwd'
	]
});

ns.push({
	'alias': 'chi2gof',
	'path': '@stdlib/stats/chi2gof',
	'value': require( '@stdlib/stats/chi2gof' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'complex',
	'path': '@stdlib/complex/cmplx',
	'value': require( '@stdlib/complex/cmplx' ),
	'type': 'Function',
	'related': [
		'@stdlib/complex/float64',
		'@stdlib/complex/float32'
	]
});

ns.push({
	'alias': 'Complex128',
	'path': '@stdlib/complex/float64',
	'value': require( '@stdlib/complex/float64' ),
	'type': 'Function',
	'related': [
		'@stdlib/complex/cmplx',
		'@stdlib/complex/float32'
	]
});

ns.push({
	'alias': 'COMPLEX128_NUM_BYTES',
	'path': '@stdlib/constants/math/complex128-num-bytes',
	'value': require( '@stdlib/constants/math/complex128-num-bytes' ),
	'type': 'number',
	'related': [
		'@stdlib/constants/math/complex64-num-bytes',
		'@stdlib/constants/math/float64-num-bytes'
	]
});

ns.push({
	'alias': 'Complex64',
	'path': '@stdlib/complex/float32',
	'value': require( '@stdlib/complex/float32' ),
	'type': 'Function',
	'related': [
		'@stdlib/complex/cmplx',
		'@stdlib/complex/float64'
	]
});

ns.push({
	'alias': 'COMPLEX64_NUM_BYTES',
	'path': '@stdlib/constants/math/complex64-num-bytes',
	'value': require( '@stdlib/constants/math/complex64-num-bytes' ),
	'type': 'number',
	'related': [
		'@stdlib/constants/math/complex128-num-bytes',
		'@stdlib/constants/math/float32-num-bytes'
	]
});

ns.push({
	'alias': 'compose',
	'path': '@stdlib/utils/compose',
	'value': require( '@stdlib/utils/compose' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/compose-async'
	]
});

ns.push({
	'alias': 'composeAsync',
	'path': '@stdlib/utils/compose-async',
	'value': require( '@stdlib/utils/compose-async' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/compose'
	]
});

ns.push({
	'alias': 'configdir',
	'path': '@stdlib/os/configdir',
	'value': require( '@stdlib/os/configdir' ),
	'type': 'Function',
	'related': [
		'@stdlib/os/homedir',
		'@stdlib/os/tmpdir'
	]
});

ns.push({
	'alias': 'conj',
	'path': '@stdlib/complex/conj',
	'value': require( '@stdlib/complex/conj' ),
	'type': 'Function',
	'related': [
		'@stdlib/complex/imag',
		'@stdlib/complex/real',
		'@stdlib/complex/reim'
	]
});

ns.push({
	'alias': 'constantFunction',
	'path': '@stdlib/utils/constant-function',
	'value': require( '@stdlib/utils/constant-function' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/argument-function',
		'@stdlib/utils/identity-function'
	]
});

ns.push({
	'alias': 'constructorName',
	'path': '@stdlib/utils/constructor-name',
	'value': require( '@stdlib/utils/constructor-name' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/function-name'
	]
});

ns.push({
	'alias': 'contains',
	'path': '@stdlib/assert/contains',
	'value': require( '@stdlib/assert/contains' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'convertArray',
	'path': '@stdlib/array/convert',
	'value': require( '@stdlib/array/convert' ),
	'type': 'Function',
	'related': [
		'@stdlib/array/convert-same'
	]
});

ns.push({
	'alias': 'convertArraySame',
	'path': '@stdlib/array/convert-same',
	'value': require( '@stdlib/array/convert-same' ),
	'type': 'Function',
	'related': [
		'@stdlib/array/convert'
	]
});

ns.push({
	'alias': 'convertPath',
	'path': '@stdlib/utils/convert-path',
	'value': require( '@stdlib/utils/convert-path' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'copy',
	'path': '@stdlib/utils/copy',
	'value': require( '@stdlib/utils/copy' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/merge'
	]
});

ns.push({
	'alias': 'copyBuffer',
	'path': '@stdlib/buffer/from-buffer',
	'value': require( '@stdlib/buffer/from-buffer' ),
	'type': 'Function',
	'related': [
		'@stdlib/buffer',
		'@stdlib/buffer/alloc',
		'@stdlib/buffer/alloc-unsafe',
		'@stdlib/buffer/ctor'
	]
});

ns.push({
	'alias': 'countBy',
	'path': '@stdlib/utils/count-by',
	'value': require( '@stdlib/utils/count-by' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/group',
		'@stdlib/utils/group-by'
	]
});

ns.push({
	'alias': 'countByAsync',
	'path': '@stdlib/utils/count-by-async',
	'value': require( '@stdlib/utils/count-by-async' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/count-by',
		'@stdlib/utils/group-by-async',
		'@stdlib/utils/tabulate-by-async'
	]
});

ns.push({
	'alias': 'curry',
	'path': '@stdlib/utils/curry',
	'value': require( '@stdlib/utils/curry' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/curry-right',
		'@stdlib/utils/uncurry',
		'@stdlib/utils/uncurry-right'
	]
});

ns.push({
	'alias': 'curryRight',
	'path': '@stdlib/utils/curry-right',
	'value': require( '@stdlib/utils/curry-right' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/curry',
		'@stdlib/utils/uncurry',
		'@stdlib/utils/uncurry-right'
	]
});

ns.push({
	'alias': 'cwd',
	'path': '@stdlib/process/cwd',
	'value': require( '@stdlib/process/cwd' ),
	'type': 'Function',
	'related': [
		'@stdlib/process/chdir'
	]
});


// EXPORTS //

module.exports = ns;
