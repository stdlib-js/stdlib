/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/**
* Header file containing function declarations for strided array functions which apply a binary callback.
*/
#ifndef STDLIB_STRIDED_BINARY_H
#define STDLIB_STRIDED_BINARY_H

#include <stdint.h>

/*
* If C++, prevent name mangling so that the compiler emits a binary file having undecorated names, thus mirroring the behavior of a C compiler.
*/
#ifdef __cplusplus
extern "C" {
#endif

/**
* Applies a binary callback returning double-precision floating-point numbers and assigns results to elements in a strided output array.
*/
void stdlib_strided_dd_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning single-precision floating-point numbers and assigns results to elements in a strided output array.
*/
void stdlib_strided_ff_f( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning double-precision floating-point numbers, casts results to single-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_ff_f_as_dd_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 32-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_II_I( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 32-bit integers, casts results to double-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_II_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning double-precision floating-point numbers and assigns results to elements in a strided output array.
*/
void stdlib_strided_II_d_as_dd_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 32-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_ii_i( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 32-bit integers, casts results to double-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_ii_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning double-precision floating-point numbers and assigns results to elements in a strided output array.
*/
void stdlib_strided_ii_d_as_dd_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 16-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_HH_H( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 16-bit integers, casts results to double-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_HH_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 16-bit integers, casts results to single-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_HH_f( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 16-bit integers, casts results to unsigned 32-bit integers, and assigns results to elements in a strided output array.
*/
void stdlib_strided_HH_I( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 16-bit integers, casts results to signed 32-bit integers, and assigns results to elements in a strided output array.
*/
void stdlib_strided_HH_i( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning double-precision floating-point numbers and assigns results to elements in a strided output array.
*/
void stdlib_strided_HH_d_as_dd_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning double-precision floating-point numbers, casts results to single-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_HH_f_as_dd_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning single-precision floating-point numbers and assigns results to elements in a strided output array.
*/
void stdlib_strided_HH_f_as_ff_f( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 32-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_HH_I_as_II_I( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 32-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_HH_i_as_ii_i( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 16-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_hh_h( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 16-bit integers, casts results to double-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_hh_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 16-bit integers, casts results to single-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_hh_f( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 16-bit integers, casts results to signed 32-bit integers, and assigns results to elements in a strided output array.
*/
void stdlib_strided_hh_i( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning double-precision floating-point numbers and assigns results to elements in a strided output array.
*/
void stdlib_strided_hh_d_as_dd_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning double-precision floating-point numbers, casts results to single-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_hh_f_as_dd_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning single-precision floating-point numbers and assigns results to elements in a strided output array.
*/
void stdlib_strided_hh_f_as_ff_f( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 32-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_hh_i_as_ii_i( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 8-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_B( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 8-bit integers, casts results to double-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 8-bit integers, casts results to single-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_f( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 8-bit integers, casts results to unsigned 32-bit integers, and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_I( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 8-bit integers, casts results to signed 32-bit integers, and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_i( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 8-bit integers, casts results to unsigned 16-bit integers, and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_H( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 8-bit integers, casts results to signed 16-bit integers, and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_h( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning double-precision floating-point numbers and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_d_as_dd_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning double-precision floating-point numbers, casts results to single-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_f_as_dd_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning single-precision floating-point numbers and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_f_as_ff_f( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 32-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_I_as_II_I( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 32-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_i_as_ii_i( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning unsigned 16-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_H_as_HH_H( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 16-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_BB_h_as_hh_h( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 8-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_bb_b( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 8-bit integers, casts results to double-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_bb_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 8-bit integers, casts results to single-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_bb_f( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 8-bit integers, casts results to signed 32-bit integers, and assigns results to elements in a strided output array.
*/
void stdlib_strided_bb_i( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 8-bit integers, casts results to signed 16-bit integers, and assigns results to elements in a strided output array.
*/
void stdlib_strided_bb_h( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning double-precision floating-point numbers and assigns results to elements in a strided output array.
*/
void stdlib_strided_bb_d_as_dd_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning double-precision floating-point numbers, casts results to single-precision floating-point format, and assigns results to elements in a strided output array.
*/
void stdlib_strided_bb_f_as_dd_d( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning single-precision floating-point numbers and assigns results to elements in a strided output array.
*/
void stdlib_strided_bb_f_as_ff_f( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 32-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_bb_i_as_ii_i( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

/**
* Applies a binary callback returning signed 16-bit integers and assigns results to elements in a strided output array.
*/
void stdlib_strided_bb_h_as_hh_h( uint8_t *arrays[], int64_t *shape, int64_t *strides, void *fcn );

#ifdef __cplusplus
}
#endif

#endif // !STDLIB_STRIDED_BINARY_H
