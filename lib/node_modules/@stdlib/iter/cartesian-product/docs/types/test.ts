/*
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

import iterCartesianProduct = require( './index' );


// TESTS //

// The function returns an iterator...
{
	iterCartesianProduct( [ 1, 2, 3 ], [ 4, 5, 6 ] ); // $ExpectType Iterator
	iterCartesianProduct( 'a', 'c' ); // $ExpectError
	iterCartesianProduct( undefined, undefined ); // $ExpectError
	iterCartesianProduct( null, null ); // $ExpectError
	iterCartesianProduct( true, true ); // $ExpectError
}

// The compiler throws an error if the function is provided a first argument which is not array-like...
{
	iterCartesianProduct( 2, [ 4, 5, 6 ] ); // $ExpectError
	iterCartesianProduct( false, [ 4, 5, 6 ] ); // $ExpectError
	iterCartesianProduct( true, [ 4, 5, 6 ] ); // $ExpectError
	iterCartesianProduct( {}, [ 4, 5, 6 ] ); // $ExpectError
	iterCartesianProduct( ( x: number ): number => x, [ 4, 5, 6 ] ); // $ExpectError
}

// The compiler throws an error if the function is provided a last argument which is not array-like...
{
	iterCartesianProduct( [ 1, 2, 3 ], 2 ); // $ExpectError
	iterCartesianProduct( [ 1, 2, 3 ], false ); // $ExpectError
	iterCartesianProduct( [ 1, 2, 3 ], true ); // $ExpectError
	iterCartesianProduct( [ 1, 2, 3 ], {} ); // $ExpectError
	iterCartesianProduct( [ 1, 2, 3 ], ( x: number ): number => x ); // $ExpectError
}

// The compiler throws an error if the function is provided an unsupported number of arguments...
{
	iterCartesianProduct(); // $ExpectError
	iterCartesianProduct( [ 1, 2, 3 ] ); // $ExpectError
	iterCartesianProduct( [ 1, 2, 3 ], [ 4, 5, 6 ], 2 ); // $ExpectError
}
