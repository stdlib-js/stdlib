
{{alias}}( iterator, fcn[, thisArg] )
    Returns an iterator which invokes a function for each iterated value.

    When invoked, the input function is provided two arguments:

    - value: iterated value.
    - index: iteration index (zero-based).

    If an environment supports Symbol.iterator and a provided iterator is
    iterable, the returned iterator is iterable.

    Parameters
    ----------
    iterator: Object
        Input iterator.

    fcn: Function
        Function to invoke for each iterated value.

    thisArg: any (optional)
        Execution context.

    Returns
    -------
    iterator: Object
        Iterator.

    iterator.next(): Function
        Returns an iterator protocol-compliant object containing the next
        iterated value (if one exists) and a boolean flag indicating whether the
        iterator is finished.

    iterator.return( [value] ): Function
        Finishes an iterator and returns a provided value.

    Examples
    --------
    > function f( v ) { return v * 10.0; };
    > var it = {{alias}}( {{alias:@stdlib/random/iter/randu}}(), f );
    > var r = it.next().value
    <number>
    > r = it.next().value
    <number>

    See Also
    --------

