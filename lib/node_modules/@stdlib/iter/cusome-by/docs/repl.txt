The predicate function is provided two arguments:

- value: iterated value
- index: iteration index

The function returns an iterator that yields boolean values indicating
whether at least `n` values have passed the predicate test up to that point.

If provided an empty iterator, the returned iterator yields `false` until done.

Parameters
----------
iterator: Object
    Input iterator over which to iterate.

n: integer
    Number of successful values to check for.

predicate: Function
    The test function.

thisArg: any (optional)
    Execution context.

Returns
-------
iter: Object
    Iterator that yields boolean values.

Examples
--------
> var arr = {{alias:@stdlib/array/to-iterator}}( [ 0, 0, 0, 1, 1 ] );
> function fcn( v ) { return ( v > 0 ); };
> var it = {{alias}}( arr, 2, fcn )
> var v = it.next().value
false
> v = it.next().value
false
> v = it.next().value
false
> v = it.next().value
false
> v = it.next().value
true
> var bool = it.next().done
true

See Also
--------