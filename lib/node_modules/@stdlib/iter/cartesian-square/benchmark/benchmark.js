
/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var bench = require('@stdlib/bench');
var ceil = require('@stdlib/math/base/special/ceil');
var sqrt = require('@stdlib/math/base/special/sqrt');
var pkg = require('./../package.json').name;
var iterCartesianSquare = require('./../lib');


// MAIN //

bench( pkg, function benchmark( b ) {
	var iterator;
	var arr;
	var v;
	var i;

	// Create an array with one more element than the square root of b.iterations:
	arr = new Array( ceil(sqrt(b.iterations)) + 1 ).fill( 0 );

	// Create the iterator:
	iterator = iterCartesianSquare( arr );

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		v = iterator.next();
		if ( v.done ) {
			b.fail( 'should not exhaust the iterator' );
			break;
		}
	}
	b.toc();

	if ( v.done ) {
		b.fail('should not exhaust the iterator');
	} else {
		b.pass('benchmark finished');
	}
	b.end();
});
