/*
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

// TypeScript Version: 4.1

/// <reference types="@stdlib/types"/>

import { Iterator as Iter, IterableIterator } from '@stdlib/types/iter';
import { ArrayLike } from '@stdlib/types/array';

// Define a union type representing both iterable and non-iterable iterators:
type Iterator = Iter | IterableIterator;

/**
* Returns an iterator which generates the Cartesian square of an input array-like object.
*
* @param x - Input array-like object.
* @throws {TypeError} first argument must be an array-like object
* @returns iterator
*
* @example
* var iterCartesianSquare = require( '@stdlib/iter/cartesian-square' );
*
* var iterator = iterCartesianSquare( [ 'a', 'b', 'c' ] );
* // returns <Object>
*
* var v = iterator.next().value;
* // returns [ 'a', 'a' ]
*
* v = iterator.next().value;
* // returns [ 'a', 'b' ]
*
* v = iterator.next().value;
* // returns [ 'a', 'c' ]
*
* // ...
*
* var bool = iterator.next().done;
* // returns true
*/
declare function iterCartesianSquare<T>( x: ArrayLike<T> | Iterable<T> ): Iterator;

// EXPORTS //

export = iterCartesianSquare;
