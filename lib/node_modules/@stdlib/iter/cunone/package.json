{
    "name": "@stdlib/iter-cunone",
    "version": "0.0.0",
    "description": "Create an iterator which cumulatively tests whether every iterated value is falsy.",
    "license": "Apache-2.0",
    "author": {
      "name": "The Stdlib Authors",
      "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
    },
    "contributors": [
      {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      }
    ],
    "main": "./lib",
    "directories": {
      "benchmark": "./benchmark",
      "doc": "./docs",
      "example": "./examples",
      "lib": "./lib",
      "test": "./test"
    },
    "types": "./docs/types",
    "scripts": {
      "test": "make test",
      "test-cov": "make test-cov",
      "examples": "make examples",
      "benchmark": "make benchmark"
    },
    "homepage": "https://stdlib.io",
    "repository": {
      "type": "git",
      "url": "git://github.com/stdlib-js/iter-cunone.git"
    },
    "bugs": {
      "url": "https://github.com/stdlib-js/stdlib/issues"
    },
    "dependencies": {
      "@stdlib/assert-is-iterator-like": "^0.0.x",
      "@stdlib/symbol-iterator": "^0.0.x",
      "@stdlib/types": "^0.0.x",
      "@stdlib/utils-define-nonenumerable-read-only-property": "^0.0.x",
      "@stdlib/error-tools-fmtprodmsg": "^0.0.x"
    },
    "devDependencies": {
      "@stdlib/array-to-iterator": "^0.0.x",
      "@stdlib/assert-is-boolean": "^0.0.x",
      "@stdlib/random-iter-randu": "^0.0.x",
      "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
      "istanbul": "^0.4.1",
      "tap-min": "git+https://github.com/Planeshifter/tap-min.git"
    },
    "engines": {
      "node": ">=0.10.0",
      "npm": ">2.7.0"
    },
    "os": [
      "aix",
      "darwin",
      "freebsd",
      "linux",
      "macos",
      "openbsd",
      "sunos",
      "win32",
      "windows"
    ],
    "keywords": [
      "stdlib",
      "stditer",
      "iterator",
      "iterable",
      "iterate",
      "cumulative",
      "none",
      "false",
      "falsy"
    ],
    "__stdlib__": {},
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/stdlib"
    }
  }