/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isAccessorArray = require( '@stdlib/array/base/assert/is-accessor-array' );
var accessorSetter = require( '@stdlib/array/base/accessor-setter' );
var setter = require( '@stdlib/array/base/setter' );
var dtype = require( '@stdlib/array/dtype' );


// MAIN //

/**
* Returns an accessor function for setting an element in an array-like object.
*
* @param {Collection} x - input array
* @returns {Function} accessor
*
* @example
* var resolveGetter = require( '@stdlib/array/base/resolve-getter' );
*
* var arr = [ 1, 2, 3, 4 ];
*
* var set = resolveSetter( arr );
* // returns <Function>
*
* set( arr, 2, 10 );
*
* var get = resolveGetter( arr );
* // returns <Function>
*
* var v = get( arr, 2 );
* // returns 10
*/
function resolveSetter( x ) {
	var dt = dtype( x );
	if ( isAccessorArray( x ) ) {
		return accessorSetter( dt );
	}
	return setter( dt );
}


// EXPORTS //

module.exports = resolveSetter;
