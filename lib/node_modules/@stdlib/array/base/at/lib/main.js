/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var resolveGetter = require( '@stdlib/array/base/resolve-getter' );


// FUNCTIONS //

/**
* Tests whether an object has a specified method.
*
* @private
* @param {Object} obj - input object
* @param {string} method - method name
* @returns {boolean} boolean indicating whether an object has a specified method
*
* @example
* var bool = hasMethod( [], 'map' );
* // returns true
*
* @example
* var bool = hasMethod( [], 'beep' );
* // returns false
*/
function hasMethod( obj, method ) {
	return ( typeof obj[ method ] === 'function' );
}


// MAIN //

/**
* Returns an element from an array.
*
* @param {Collection} x - input array
* @param {integer} index - element index
* @returns {*} array element
*
* @example
* var x = [ 1, 2, 3, 4 ];
*
* var v = at( x, 0 );
* // returns 1
*
* v = at( x, 1 );
* // returns 2
*
* v = at( x, -2 );
* // returns 3
*/
function at( x, index ) {
	var get;
	if ( hasMethod( x, 'at' ) ) {
		return x.at( index );
	}
	if ( index < 0 ) {
		index += x.length;
		if ( index < 0 ) {
			return;
		}
	} else if ( index >= x.length ) {
		return;
	}
	get = resolveGetter( x );
	return get( x, index );
}


// EXPORTS //

module.exports = at;
