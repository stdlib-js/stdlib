
{{alias}}( dtype )
    Returns an accessor function for retrieving an element from an array-like
    object supporting the get/set protocol.

    An accessor function accepts the following arguments:

    - arr: input array
    - idx: element index

    If provided an unsupported `dtype`, the function returns a default accessor
    function for accessing elements from any indexed array-like object
    supporting the get/set protocol.

    Otherwise, the function returns an accessor function which should *only* be
    provided an array instance corresponding to `dtype` (e.g., if `dtype` is
    'complex64', the returned accessor function should only be provided
    instances of Complex64Array).

    Accessor functions do *not* verify that provided input arrays are array
    instances corresponding to `dtype`, as doing so would introduce performance
    overhead. If array instances corresponding to other data types are provided
    to an accessor function, JavaScript runtimes will consider the function
    polymorphic, potentially triggering de-optimization. In order to ensure
    maximum performance, *always* ensure that an accessor function is
    monomorphic.

    Accessor functions do *not* perform bounds checking.

    Accessor functions do *not* verify that provided input arrays actually
    implement the get/set protocol.

    Parameters
    ----------
    dtype: string
        Array data type.

    Returns
    -------
    f: Function
        Accessor function.

    Examples
    --------
    > var f = {{alias}}( 'complex64' );
    > var v = f( {{alias:@stdlib/array/complex64}}( [ 1, 2, 3, 4 ] ), 1 )
    <Complex64>
    > var r = {{alias:@stdlib/complex/realf}}( v )
    3.0
    > var i = {{alias:@stdlib/complex/imagf}}( v )
    4.0

    See Also
    --------

