/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var join = require( 'path' ).join;
var rmdirSync = require( 'fs' ).rmdirSync; // eslint-disable-line node/no-sync
var mkdir = require( '@stdlib/fs/mkdir' );

var dpath = join( __dirname, 'fixtures' );
var opts = {
	'mode': parseInt( '0755', 8 ),
	'recursive': true
};

mkdir.sync( dpath, opts );

function remove( path ) {
	var opts = {
		'recursive': true,
		'force': true
	};
	rmdirSync( path, opts );
}

/* Sync */

var out = mkdir.sync( join( dpath, './foo' ) );
// returns undefined

console.log( out instanceof Error );
// => false

out = mkdir.sync( join( dpath, './bar/baz' ), opts );
// returns <string> || undefined

console.log( out instanceof Error );
// => false

/* Async */

mkdir( join( dpath, './baz' ), onDir );
mkdir( join( dpath, './baz/foo/bar' ), opts, onDir );

function onDir( error, path ) {
	if ( error ) {
		console.error( error.message );
	} else {
		console.log( path );
	}
}

remove( dpath );
