
{{alias}}( paths[, options], predicate, clbk )
    Asynchronously resolves paths from a set of paths according to a
    predicate function by walking parent directories.

    When invoked, the predicate function is provided two arguments:

    - `path`: resolved paths
    - `next`: a callback to be invoked after processing a resolved path

    The `next` callback takes two arguments:

    - `error`: error argument
    - `result`: test result

    If a provided predicate function calls the `next` callback with a truthy
    `error` argument, the function suspends execution and immediately calls
    the `done` callback for subsequent `error` handling.

    The function immediately returns upon encountering a non-falsy `result`
    value and calls the `done` callback with `null` as the first argument and
    the array of resolved paths as the second argument.

    If unable to resolve paths, as per each mode function returns as following:

    - `first`: empty array
    - `some`: empty array
    - `all`: empty array
    - `each`: Array<null>

    Execution is *not* guaranteed to be asynchronous. To guarantee asynchrony,
    wrap the `done` callback in a function which either executes at the end of
    the current stack (e.g., `nextTick`) or during a subsequent turn of the
    event loop (e.g., `setImmediate`, `setTimeout`).

    Parameters
    ----------
    paths: Array<string>
        Paths to resolve.

    options: Object (optional)
        Options.

    options.dir: string (optional)
        Base directory from which to search. Default: current working
        directory.

    options.mode: string (optional)
        Mode of operation. The following modes are supported:

        - first: return the first resolved path.
        - some: return one or more paths resolved within the first
          directory level containing a match.
        - all: return all resolved paths within the first directory level
          containing matches for all provided paths.
        - each: independently return the first resolved path for each path
          at any directory level.

        Default: 'all'.

    predicate: Function
        The test function to invoke for each resolved path.

    clbk: Function
        Callback to invoke after resolving a path.

    Examples
    --------
    > function predicate( path, next ) {
    ...     setTimeout( onTimeout, path );
    ...     function onTimeout() {
    ...         console.log( path );
    ...         next( null, false );
    ...     }
    ... };
    > function onPaths( error, paths ) {
    ...     if ( error ) {
    ...         console.error( error.message );
    ...     } else {
    ...         console.log( paths );
    ...     }
    ... };
    > {{alias}}(
    ...     [ 'package.json', 'package-lock.json' ],
    ...     predicate,
    ...     onPaths
    ... );


{{alias}}.sync( paths[, options], predicate )
    Synchronously resolves paths from a set of paths according to a predicate
    function by walking parent directories.

    The predicate function is provided one argument:

    - `path`: a resolved path

    The function immediately returns upon encountering a truthy return value.

    If unable to resolve paths, as per each mode function returns as following:

    - `first`: empty array
    - `some`: empty array
    - `all`: empty array
    - `each`: Array<null>

    Parameters
    ----------
    paths: Array<string>
        Paths to resolve.

    options: Object (optional)
        Options.

    options.dir: string (optional)
        Base directory from which to search. Default: current working
        directory.

    options.mode: string (optional)
        Mode of operation. The following modes are supported:

        - first: return the first resolved path.
        - some: return one or more paths resolved within the first directory
          level containing a match.
        - all: return all resolved paths within the first directory level
          containing matches for all provided paths.
        - each: independently return the first resolved path for each path at
          any directory level.

        Default: 'all'.

    predicate: Function
        The test function to invoke for each resolved path.

    Returns
    -------
    out: Array<string|null>
        Resolved paths.

    Examples
    --------
    > function predicate() { return false; };
    > var out = {{alias}}.sync(
    ...     [ 'package.json', 'package-lock.json' ],
    ...     predicate
    ... );

    See Also
    --------

