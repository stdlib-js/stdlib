/*
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

// TypeScript Version: 4.1

/// <reference types="node"/>

import { Buffer } from 'buffer';

/**
* Callback invoked upon copying src file to dest file.
*
* @param err - error object
*/
type Callback = ( err: Error | null ) => void;

/**
* Interface for copying files.
*/
interface CopyFile {
	/**
	* Asynchronously copies src to dest.
	*
	* @param src - source filename to copy
	* @param dest - destination filename of the copy operation
	* @param mode - modifiers for copy operation (default: 0)
	* @param clbk - callback to invoke after copying src file to dest file
	*
	* @example
	* var constants = require( 'fs' ).constants;
	* function onCopy( error ) {
	*     if ( error ) {
	*         throw error;
	*     }
	* }
	*
	* var mode = constants.COPYFILE_EXCL;
	* copyFile( 'src.txt', 'dest.txt', mode, onCopy );
	*/
	( src: string | Buffer, dest: string | Buffer, mode: number, clbk: Callback ): void;

	/**
	* Asynchronously copies src to dest.
	*
	* @param src - source filename to copy
	* @param dest - destination filename of the copy operation
	* @param clbk - callback to invoke after copying src file to dest file
	*
	* @example
	* function onCopy( error ) {
	*     if ( error ) {
	*         throw error;
	*     }
	* }
	*
	* copyFile( 'src.txt', 'dest.txt', onCopy );
	*/
	( src: string | Buffer, dest: string | Buffer, clbk: Callback ): void;

	/**
	* Synchronously copies src to dest.
	*
	* @param src - source filename to copy
	* @param dest - destination filename of the copy operation
	* @param mode - modifiers for copy operation (default: 0)
	* @returns error object or null
	*
	* @example
	* var err = copyFileSync( 'src.txt', 'dest.txt' );
	* if ( err instanceof Error ) {
	*     throw err;
	* }
	*/
	sync( src: string | Buffer, dest: string | Buffer, mode?: number ): Error | null;
}

/**
* Asynchronously copies src to dest.
*
* @param src - source filename to copy
* @param dest - destination filename of the copy operation
* @param mode - modifiers for copy operation (default: 0)
* @param clbk - callback to invoke after copying src file to dest file
*
* @example
* function onCopy( error ) {
*     if ( error ) {
*         throw error;
*     }
* }
*
* copyFile( 'src.txt', 'dest.txt', onCopy );
*/
declare var copyFile: CopyFile;


// EXPORTS //

export = copyFile;
