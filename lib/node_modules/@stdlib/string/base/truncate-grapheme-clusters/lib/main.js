/**
* @license Apache-2.0
*
* Copyright (c) 2023 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var numGraphemeClusters = require( '@stdlib/string/num-grapheme-clusters' );
var nextGraphemeClusterBreak = require( '@stdlib/string/next-grapheme-cluster-break' );


// MAIN //

/**
* Truncates grapheme clusters of a string to a specified length.
*
* @param {string} str - input string
* @param {NonNegativeInteger} len - output string length (including ending)
* @param {string} ending - ending string
* @returns {string} truncated string
*
* @example
* var str = 'beep boop';
* var out = truncate( str, 7, '...' );
* // returns 'beep...'
*
* @example
* var str = 'beep boop';
* var out = truncate( str, 5, '>>>' );
* // returns 'be>>>'
*
* @example
* var str = 'beep boop';
* var out = truncate( str, 10, '...' );
* // returns 'beep boop'
*
* @example
* var str = 'beep boop';
* var out = truncate( str, 0, '...' );
* // returns ''
*
* @example
* var str = 'beep boop';
* var out = truncate( str, 2, '...' );
* // returns '..'
*/
function truncate( str, len, ending ) {
	var endingLength;
	var strLength;
	var n;
	var i;

	if ( len <= 0 ) {
		return '';
	}
	strLength = numGraphemeClusters( str );
	if ( len >= strLength ) {
		return str;
	}
	endingLength = numGraphemeClusters( ending );
	if ( endingLength >= len ) {
		str = ending;
		ending = '';
		endingLength = 0;
	}
	i = 0;
	n = len - endingLength;
	while ( n > 0 ) {
		i = nextGraphemeClusterBreak( str, i );
		n -= 1;
	}
	if ( i === -1 ) {
		return str;
	}
	return str.substring( 0, i ) + ending;
}


// EXPORTS //

module.exports = truncate;
