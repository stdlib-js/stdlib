/**
* @license Apache-2.0
*
* Copyright (c) 2023 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var truncate = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof truncate, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function truncates a string to the specified length', function test( t ) {
	var expected;
	var actual;
	var str;
	var len;

	str = 'beep boop';
	len = 5;
	expected = 'be...';
	actual = truncate( str, len, '...' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = 'beep boop';
	len = 10;
	expected = 'beep boop';
	actual = truncate( str, len, '...' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = 'beep boop';
	len = 0;
	expected = '';
	actual = truncate( str, len, '...' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = 'beep boop';
	len = 1;
	expected = '.';
	actual = truncate( str, len, '...' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = 'अनुच्छेद';
	len = 7;
	expected = 'अनुच...';
	actual = truncate( str, len, '...' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = '六书/六書';
	len = 4;
	expected = '六...';
	actual = truncate( str, len, '...' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = '𐒻𐓟𐒻𐓟𐒻𐓟𐒻𐓟𐒻𐓟';
	len = 5;
	expected = '𐒻...';
	actual = truncate( str, len, '...' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = '\uD800𐓟𐒻𐓟𐒻𐓟𐒻𐓟𐒻𐓟';
	len = 4;
	expected = '...';
	actual = truncate( str, len, '...' );
	t.strictEqual( actual, expected, 'returns expected value' );

	t.end();
});

tape( 'the function truncates a string to the specified length (custom ending)', function test( t ) {
	var expected;
	var actual;
	var str;
	var len;

	str = 'beep boop';
	len = 5;
	expected = 'beep|';
	actual = truncate( str, len, '|' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = 'beep boop';
	len = 10;
	expected = 'beep boop';
	actual = truncate( str, len, '!' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = 'beep boop';
	len = 3;
	expected = 'be!';
	actual = truncate( str, len, '!' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = 'अनुच्छेद';
	len = 7;
	expected = 'अनुच् &';
	actual = truncate( str, len, ' &' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = '六书/六書';
	len = 4;
	expected = '六书/&';
	actual = truncate( str, len, '&' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = '六书/六';
	len = 4;
	expected = '六书/六';
	actual = truncate( str, len, '書' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = '六书/六';
	len = 4;
	expected = '六书/六';
	actual = truncate( str, len, '' );
	t.strictEqual( actual, expected, 'returns expected value' );

	t.end();
});

tape( 'the function truncates a string to the specified length (truncate ending)', function test( t ) {
	var expected;
	var actual;
	var str;
	var len;

	str = 'beep boop';
	len = 5;
	expected = '|||||';
	actual = truncate( str, len, '||||||' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = 'beep boop';
	len = 3;
	expected = '~~!';
	actual = truncate( str, len, '~~!' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = 'aaa ';
	len = 2;
	expected = 'अन';
	actual = truncate( str, len, 'अनुच्छेद' );
	t.strictEqual( actual, expected, 'returns expected value' );

	str = '六书/六';
	len = 3;
	expected = '六书書';
	actual = truncate( str, len, '書' );
	t.strictEqual( actual, expected, 'returns expected value' );

	t.end();
});
