
{{alias}}( len[, options] )
    Returns an array containing pseudorandom integers on the interval
    `[0, 4294967295]`.

    Parameters
    ----------
    len: integer
        Output array length.

    options: Object (optional)
        Options.

    options.dtype: string (optional)
        Output array data type. Default: 'float64'.

    Returns
    -------
    out: Array<number>|TypedArray
        Output array.

    Examples
    --------
    > var out = {{alias}}( 3 )
    <Float64Array>


{{alias}}.normalized( len[, options] )
    Returns an array containing pseudorandom numbers on the interval `[0, 1)`
    with 53-bit precision.

    Parameters
    ----------
    len: integer
        Output array length.

    options: Object (optional)
        Options.

    options.dtype: string (optional)
        Output array data type. Default: 'float64'.

    Returns
    -------
    out: Array<number>|Float64Array|Float32Array
        Output array.

    Examples
    --------
    > var out = {{alias}}.normalized( 3 )
    <Float64Array>


{{alias}}.factory( [options] )
    Returns a function for creating arrays containing pseudorandom numbers
    generated using a 32-bit Mersenne Twister pseudorandom number generator.

    The returned function and its attached `normalized` method accept the
    following options:

    - dtype: output array data type. This overrides the default output array
    data type.

    Parameters
    ----------
    options: Object (optional)
        Options.

    options.seed: integer|ArrayLikeObject<integer> (optional)
        Pseudorandom number generator seed. The seed may be either a positive
        unsigned 32-bit integer or, for arbitrary length seeds, an array-like
        object containing unsigned 32-bit integers.

    options.state: Uint32Array (optional)
        Pseudorandom number generator state. If provided, the `seed` option is
        ignored.

    options.copy: boolean (optional)
        Boolean indicating whether to copy a provided pseudorandom number
        generator state. Setting this option to `false` allows sharing state
        between two or more pseudorandom number generators. Setting this option
        to `true` ensures that a returned generator has exclusive control over
        its internal state. Default: true.

    options.idtype: string (optional)
        Default output array data type when generating integers. Default:
        'float64'.

    options.ndtype: string (optional)
        Default output array data type when generating normalized numbers.
        Default: 'float64'.

    Returns
    -------
    fcn: Function
        Function for creating arrays.

    Examples
    --------
    > var fcn = {{alias}}.factory();
    > var out = fcn( 3 )
    <Float64Array>


{{alias}}.PRNG
    Underlying pseudorandom number generator.

    Examples
    --------
    > var prng = {{alias}}.PRNG;


{{alias}}.seed
    Pseudorandom number generator seed.

    Examples
    --------
    > var seed = {{alias}}.seed;


{{alias}}.seedLength
    Length of generator seed.

    Examples
    --------
    > var len = {{alias}}.seedLength;


{{alias}}.state
    Generator state.

    Examples
    --------
    > var out = {{alias}}( 3 )
    <Float64Array>

    // Get a copy of the current state:
    > var state = {{alias}}.state;

    > out = {{alias}}( 3 )
    <Float64Array>
    > out = {{alias}}( 3 )
    <Float64Array>

    // Set the state:
    > {{alias}}.state = state;

    // Regenerate a previous array:
    > out = {{alias}}( 3 )
    <Float64Array>


{{alias}}.stateLength
    Length of generator state.

    Examples
    --------
    > var len = {{alias}}.stateLength;


{{alias}}.byteLength
    Size (in bytes) of generator state.

    Examples
    --------
    > var sz = {{alias}}.byteLength;

    See Also
    --------

