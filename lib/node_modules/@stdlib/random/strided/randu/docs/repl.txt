
{{alias}}( N, out, so[, options] )
    Fills a strided array with uniformly distributed pseudorandom numbers
    between 0 and 1.

    The `N` and stride parameters determine which elements in the provided
    strided array are accessed at runtime.

    Indexing is relative to the first index. To introduce an offset, use typed
    array views.

    If `N` is less than or equal to `0`, the output strided array is left
    unchanged.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    out: ArrayLikeObject
        Output array.

    so: integer
        Index increment for `out`.

    options: Object (optional)
        Options.

    options.name: string (optional)
        Name of a supported pseudorandom number generator (PRNG), which will
        serve as the underlying source of pseudorandom numbers. The following
        PRNGs are supported:

        - mt19937: 32-bit Mersenne Twister.
        - minstd: linear congruential PRNG based on Park and Miller.
        - minstd-shuffle: linear congruential PRNG whose output is shuffled.

        Default: `'mt19937'`.

    options.seed: any (optional)
        Pseudorandom number generator seed. Valid seed values vary according to
        the underlying PRNG.

    options.state: any (optional)
        Pseudorandom number generator state. Valid state values vary according
        to the underling PRNG. If provided, the `seed` option is ignored.

    options.copy: boolean (optional)
        Boolean indicating whether to copy a provided pseudorandom number
        generator state. Setting this option to `false` allows sharing state
        between two or more pseudorandom number generators. Setting this option
        to `true` ensures that a returned generator has exclusive control over
        its internal state. Default: true.

    Returns
    -------
    out: ArrayLikeObject
        Output array.

    Examples
    --------
    > var out = {{alias:@stdlib/array/zeros}}( 5, 'generic' );
    > {{alias}}( out.length, out, 1 )
    [...]


{{alias}}.ndarray( N, out, so, oo[, options] )
    Fills a strided array with uniformly distributed pseudorandom numbers
    between 0 and 1 using alternative indexing semantics.

    While typed array views mandate a view offset based on the underlying
    buffer, the offset parameters support indexing semantics based on starting
    indices.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    out: ArrayLikeObject
        Output array.

    so: integer
        Index increment for `out`.

    oo: integer
        Starting index for `out`.

    options: Object (optional)
        Options.

    options.name: string (optional)
        Name of a supported pseudorandom number generator (PRNG), which will
        serve as the underlying source of pseudorandom numbers. The following
        PRNGs are supported:

        - mt19937: 32-bit Mersenne Twister.
        - minstd: linear congruential PRNG based on Park and Miller.
        - minstd-shuffle: linear congruential PRNG whose output is shuffled.

        Default: `'mt19937'`.

    options.seed: any (optional)
        Pseudorandom number generator seed. Valid seed values vary according to
        the underlying PRNG.

    options.state: any (optional)
        Pseudorandom number generator state. Valid state values vary according
        to the underling PRNG. If provided, the `seed` option is ignored.

    options.copy: boolean (optional)
        Boolean indicating whether to copy a provided pseudorandom number
        generator state. Setting this option to `false` allows sharing state
        between two or more pseudorandom number generators. Setting this option
        to `true` ensures that a returned generator has exclusive control over
        its internal state. Default: true.

    Returns
    -------
    out: ArrayLikeObject
        Output array.

    Examples
    --------
    > var out = {{alias:@stdlib/array/zeros}}( 5, 'generic' );
    > {{alias}}.ndarray( out.length, out, 1, 0 )
    [...]

    See Also
    --------

