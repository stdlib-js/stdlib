
{{alias}}( N, out, so[, options] )
    Fills a strided array with pseudorandom integers between 1 and 2147483646
    (inclusive).

    The `N` and stride parameters determine which elements in the provided
    strided array are accessed at runtime.

    Indexing is relative to the first index. To introduce an offset, use typed
    array views.

    If `N` is less than or equal to `0`, the output strided array is left
    unchanged.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    out: ArrayLikeObject
        Output array.

    so: integer
        Index increment for `out`.

    options: Object (optional)
        Options.

    options.seed: integer|ArrayLikeObject<integer> (optional)
        Pseudorandom number generator seed. The seed may be either a positive
        signed 32-bit integer on the interval `[1, 2147483646]` or, for
        arbitrary length seeds, an array-like object containing signed 32-bit
        integers.

    options.state: Int32Array (optional)
        Pseudorandom number generator state. If provided, the `seed` option is
        ignored.

    options.copy: boolean (optional)
        Boolean indicating whether to copy a provided pseudorandom number
        generator state. Setting this option to `false` allows sharing state
        between two or more pseudorandom number generators. Setting this option
        to `true` ensures that a returned generator has exclusive control over
        its internal state. Default: true.

    Returns
    -------
    out: ArrayLikeObject
        Output array.

    Examples
    --------
    > var out = {{alias:@stdlib/array/zeros}}( 5, 'generic' );
    > {{alias}}( out.length, out, 1 )
    [...]


{{alias}}.ndarray( N, out, so, oo[, options] )
    Fills a strided array with pseudorandom integers between 1 and 2147483646
    (inclusive) using alternative indexing semantics.

    While typed array views mandate a view offset based on the underlying
    buffer, the offset parameters support indexing semantics based on starting
    indices.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    out: ArrayLikeObject
        Output array.

    so: integer
        Index increment for `out`.

    oo: integer
        Starting index for `out`.

    options: Object (optional)
        Options.

    options.seed: integer|ArrayLikeObject<integer> (optional)
        Pseudorandom number generator seed. The seed may be either a positive
        signed 32-bit integer on the interval `[1, 2147483646]` or, for
        arbitrary length seeds, an array-like object containing signed 32-bit
        integers.

    options.state: Int32Array (optional)
        Pseudorandom number generator state. If provided, the `seed` option is
        ignored.

    options.copy: boolean (optional)
        Boolean indicating whether to copy a provided pseudorandom number
        generator state. Setting this option to `false` allows sharing state
        between two or more pseudorandom number generators. Setting this option
        to `true` ensures that a returned generator has exclusive control over
        its internal state. Default: true.

    Returns
    -------
    out: ArrayLikeObject
        Output array.

    Examples
    --------
    > var out = {{alias:@stdlib/array/zeros}}( 5, 'generic' );
    > {{alias}}.ndarray( out.length, out, 1, 0 )
    [...]


{{alias}}.normalized( N, out, so[, options] )
    Fills a strided array with pseudorandom numbers between 0 and 1.

    The `N` and stride parameters determine which elements in the provided
    strided array are accessed at runtime.

    Indexing is relative to the first index. To introduce an offset, use typed
    array views.

    If `N` is less than or equal to `0`, the output strided array is left
    unchanged.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    out: ArrayLikeObject
        Output array.

    so: integer
        Index increment for `out`.

    options: Object (optional)
        Options.

    options.seed: integer|ArrayLikeObject<integer> (optional)
        Pseudorandom number generator seed. The seed may be either a positive
        signed 32-bit integer on the interval `[1, 2147483646]` or, for
        arbitrary length seeds, an array-like object containing signed 32-bit
        integers.

    options.state: Int32Array (optional)
        Pseudorandom number generator state. If provided, the `seed` option is
        ignored.

    options.copy: boolean (optional)
        Boolean indicating whether to copy a provided pseudorandom number
        generator state. Setting this option to `false` allows sharing state
        between two or more pseudorandom number generators. Setting this option
        to `true` ensures that a returned generator has exclusive control over
        its internal state. Default: true.

    Returns
    -------
    out: ArrayLikeObject
        Output array.

    Examples
    --------
    > var out = {{alias:@stdlib/array/zeros}}( 5, 'generic' );
    > {{alias}}.normalized( out.length, out, 1 )
    [...]


{{alias}}.normalized.ndarray( N, out, so, oo[, options] )
    Fills a strided array with pseudorandom numbers between 0 and 1 using
    alternative indexing semantics.

    While typed array views mandate a view offset based on the underlying
    buffer, the offset parameters support indexing semantics based on starting
    indices.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    out: ArrayLikeObject
        Output array.

    so: integer
        Index increment for `out`.

    oo: integer
        Starting index for `out`.

    options: Object (optional)
        Options.

    options.seed: integer|ArrayLikeObject<integer> (optional)
        Pseudorandom number generator seed. The seed may be either a positive
        signed 32-bit integer on the interval `[1, 2147483646]` or, for
        arbitrary length seeds, an array-like object containing signed 32-bit
        integers.

    options.state: Int32Array (optional)
        Pseudorandom number generator state. If provided, the `seed` option is
        ignored.

    options.copy: boolean (optional)
        Boolean indicating whether to copy a provided pseudorandom number
        generator state. Setting this option to `false` allows sharing state
        between two or more pseudorandom number generators. Setting this option
        to `true` ensures that a returned generator has exclusive control over
        its internal state. Default: true.

    Returns
    -------
    out: ArrayLikeObject
        Output array.

    Examples
    --------
    > var out = {{alias:@stdlib/array/zeros}}( 5, 'generic' );
    > {{alias}}.normalized.ndarray( out.length, out, 1, 0 )
    [...]

    See Also
    --------

