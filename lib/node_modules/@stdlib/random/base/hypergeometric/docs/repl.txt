
{{alias}}( N, K, n )
    Returns a pseudorandom number drawn from a hypergeometric distribution.

    `N`, `K`, and `n` must all be nonnegative integers; otherwise, the function
    returns `NaN`.

    If `n > N` or `K > N`, the function returns `NaN`.

    Parameters
    ----------
    N: integer
        Population size.

    K: integer
        Subpopulation size.

    n: integer
        Number of draws.

    Returns
    -------
    r: integer
        Pseudorandom number.

    Examples
    --------
    > var r = {{alias}}( 20, 10, 7 );


{{alias}}.factory( [N, K, n, ][options] )
    Returns a pseudorandom number generator (PRNG) for generating pseudorandom
    numbers drawn from a hypergeometric distribution.

    If provided `N`, `K`, and `n`, the returned PRNG returns random variates
    drawn from the specified distribution.

    If not provided `N`, `K`, and `n`, the returned PRNG requires that `N`, `K`,
    and `n` be provided at each invocation.

    Parameters
    ----------
    N: integer (optional)
        Population size.

    K: integer (optional)
        Subpopulation size.

    n: integer (optional)
        Number of draws.

    options: Object (optional)
        Options.

    options.seed: any (optional)
        Pseudorandom number generator seed.

    Returns
    -------
    rand: Function
        Pseudorandom number generator (PRNG).

    Examples
    --------
    // Basic usage:
    > var rand = {{alias}}.factory();
    > var r = rand( 20, 10, 15 );
    > r = rand( 20, 10, 7 );

    // Provide `N`, `K`, and `n`:
    > rand = {{alias}}.factory( 20, 10, 15 );
    > r = rand();
    > r = rand();


{{alias}}.NAME
    Generator name.

    Examples
    --------
    > var str = {{alias}}.NAME
    'hypergeometric'


{{alias}}.PRNG
    Underlying pseudorandom number generator.

    Examples
    --------
    > var prng = {{alias}}.PRNG;


{{alias}}.SEED
    Pseudorandom number generator seed.

    Examples
    --------
    > var seed = {{alias}}.SEED;

    See Also
    --------

