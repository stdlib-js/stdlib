/*
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

// TypeScript Version: 2.0

/* tslint:disable:max-line-length */
/* tslint:disable:max-file-line-count */

import Object = require( '@stdlib/object/ctor' );

/**
* Interface describing the `object` namespace.
*/
interface Namespace {
	/**
	* Returns an object.
	*
	* ## Notes
	*
	* -   If provided `null` or `undefined`, the function returns an empty object.
	* -   If provided an existing object, the function returns the input value unchanged.
	* -   Otherwise, if provided any other value (e.g., a number, string, etc), the function will return an object of the corresponding type.
	*
	* @param value - input value
	* @returns object
	*
	* @example
	* var o = new ns.Object( null );
	* // returns {}
	*
	* @example
	* var o = new ns.Object( 5.0 );
	* // returns <Number>
	*
	* @example
	* var o = new ns.Object( 'beep' );
	* // returns <String>
	*
	* @example
	* var o1 = {};
	*
	* var o2 = new ns.Object( o1 );
	* // returns {}
	*
	* var bool = ( o1 === o2 );
	* // returns true
	*/
	Object: typeof Object;
}

/**
* Object.
*/
declare var ns: Namespace;


// EXPORTS //

export = ns;
