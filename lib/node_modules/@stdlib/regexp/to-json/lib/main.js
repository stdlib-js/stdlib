/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var objectKeys = require( '@stdlib/utils/keys' );
var copy = require( '@stdlib/utils/copy' );
var isRegExp = require( '@stdlib/assert/is-regexp' );
var format = require( '@stdlib/string/format' );
var typeName = require( './type.js' );


// MAIN //

/**
* Returns a JSON representation of a regexp object.
*
* @param {RegExp} regex - regular expression to serialize
* @throws {TypeError} first argument must be an error object
* @returns {Object} JSON representation
*
* @example
* var regex = new RegExp( 'ab+c' );
* var json = toJSON( regex );
* // returns {...}
*/
function toJSON( regex ) {
	var keys;
	var out;
	var i;
	if ( !isRegExp( regex ) ) {
		throw new TypeError( format( 'invalid argument. Must provide a RegExp object. Value: `%s`.', err ) );
	}
	out = {};

	// Guaranteed properties:
    out.type = 'regexp';
	out.pattern = regex.source;

	// Possible general error properties...
	if ( regex.flags ) {
		out.flags = regex.flags;
	}
	// Any enumerable properties...
	keys = objectKeys( err );
	for ( i = 0; i < keys.length; i++ ) {
		out[ keys[i] ] = copy( err[ keys[i] ] );
	}
	return out;
}


// EXPORTS //

module.exports = toJSON;