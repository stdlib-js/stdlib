#/
# @license Apache-2.0
#
# Copyright (c) 2021 The Stdlib Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/

# DEPENDENCIES #

# Note: keep in alphabetical order...
include $(TOOLS_MAKE_LIB_DIR)/lint/c/cppcheck.mk


# RULES #

#/
# Checks whether C linters are installed.
#
# @private
#
# @example
# make check-c-linters
#/
check-c-linters: check-cppcheck

.PHONY: check-c-linters

#/
# Lints C files.
#
# ## Notes
#
# -   This rule is useful when wanting to glob for files, irrespective of context, for a particular directory in order to lint all contained C files.
#
# @param {string} [SOURCES_FILTER] - file path pattern (e.g., `.*/blas/base/dasum/.*`)
# @param {string} [TESTS_FIXTURES_FILTER] - file path pattern (e.g., `.*/blas/base/dasum/.*`)
# @param {string} [EXAMPLES_FILTER] - file path pattern (e.g., `.*/blas/base/dasum/.*`)
# @param {string} [BENCHMARKS_FILTER] - file path pattern (e.g., `.*/blas/base/dasum/.*`)
# @param {*} [FAST_FAIL] - flag indicating whether to stop linting upon encountering a lint error
#
# @example
# make lint-c
#
# @example
# make lint-c SOURCES_FILTER=".*/blas/base/dasum/.*" TESTS_FIXTURES_FILTER=".*/blas/base/dasum/.*" EXAMPLES_FILTER=".*/blas/base/dasum/.*" BENCHMARKS_FILTER=".*/blas/base/dasum/.*"
#/
lint-c: lint-c-src lint-c-examples lint-c-benchmarks lint-c-tests-fixtures

.PHONY: lint-c

#/
# Lints C source files.
#
# ## Notes
#
# -   This rule is useful when wanting to glob for C source files (e.g., lint all C source files for a particular package).
#
# @param {string} [SOURCES_FILTER] - file path pattern (e.g., `.*/math/base/special/abs/.*`)
# @param {*} [FAST_FAIL] - flag indicating whether to stop linting upon encountering a lint error
#
# @example
# make lint-c-src
#
# @example
# make lint-c-src SOURCES_FILTER=".*/math/base/special/abs/.*"
#/
lint-c-src:
ifeq ($(C_LINTER), cppcheck)
	$(QUIET) $(MAKE) -f $(this_file) cppcheck-src
endif

.PHONY: lint-c-src

#/
# Lints C examples files.
#
# ## Notes
#
# -   This rule is useful when wanting to glob for C examples files (e.g., lint all C examples files for a particular package).
#
# @param {string} [EXAMPLES_FILTER] - file path pattern (e.g., `.*/math/base/special/abs/.*`)
# @param {*} [FAST_FAIL] - flag indicating whether to stop linting upon encountering a lint error
#
# @example
# make lint-c-examples
#
# @example
# make lint-c-examples EXAMPLES_FILTER=".*/math/base/special/abs/.*"
#/
lint-c-examples:
ifeq ($(C_LINTER), cppcheck)
	$(QUIET) $(MAKE) -f $(this_file) cppcheck-examples
endif

.PHONY: lint-c-examples

#/
# Lints C benchmark files.
#
# ## Notes
#
# -   This rule is useful when wanting to glob for C benchmark files (e.g., lint all C benchmark files for a particular package).
#
# @param {string} [BENCHMARKS_FILTER] - file path pattern (e.g., `.*/math/base/special/abs/.*`)
# @param {*} [FAST_FAIL] - flag indicating whether to stop linting upon encountering a lint error
#
# @example
# make lint-c-benchmarks
#
# @example
# make lint-c-benchmarks BENCHMARKS_FILTER=".*/math/base/special/abs/.*"
#/
lint-c-benchmarks:
ifeq ($(C_LINTER), cppcheck)
	$(QUIET) $(MAKE) -f $(this_file) cppcheck-benchmarks
endif

.PHONY: lint-c-benchmarks

#/
# Lints C test fixture files.
#
# ## Notes
#
# -   This rule is useful when wanting to glob for C test fixture files (e.g., lint all C test fixture files for a particular package).
#
# @param {string} [TESTS_FIXTURES_FILTER] - file path pattern (e.g., `.*/math/base/special/abs/.*`)
# @param {*} [FAST_FAIL] - flag indicating whether to stop linting upon encountering a lint error
#
# @example
# make lint-c-tests-fixtures
#
# @example
# make lint-c-tests-fixtures TESTS_FIXTURES_FILTER=".*/math/base/special/abs/.*"
#/
lint-c-tests-fixtures:
ifeq ($(C_LINTER), cppcheck)
	$(QUIET) $(MAKE) -f $(this_file) cppcheck-tests-fixtures
endif

.PHONY: lint-c-tests-fixtures

#/
# Lints a specified list of C files.
#
# ## Notes
#
# -   This rule is useful when wanting to lint a list of C files generated by some other command (e.g., a list of changed C files obtained via `git diff`).
#
# @param {string} FILES - list of C file paths
# @param {*} [FAST_FAIL] - flag indicating whether to stop linting upon encountering a lint error
#
# @example
# make lint-c-files FILES='/foo/file.c /bar/file.c'
#/
lint-c-files:
ifeq ($(C_LINTER), cppcheck)
	$(QUIET) FILES="$(FILES)" $(MAKE) -f $(this_file) cppcheck-files
endif

.PHONY: lint-c-files
