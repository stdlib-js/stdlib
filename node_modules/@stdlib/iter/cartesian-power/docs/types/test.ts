/*
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

const iterCartesianPower = require( './index' );


// TESTS //

// The function returns an iterator...
{
	iterCartesianPower( [ 'a', 'b', 'c' ], 2 ); // $ExpectType Iterator
	iterCartesianPower( [ 'a', 'b', 'c' ], 3 ); // $ExpectType Iterator
	iterCartesianPower( [ 1, 2, 3 ], 3 ); // $ExpectType Iterator
}

// The compiler throws an error if the function is provided a first argument which is not an array-like object...
{
	iterCartesianPower( 5, 2 ); // $ExpectError
	iterCartesianPower( true, 2 ); // $ExpectError
	iterCartesianPower( false, 2 ); // $ExpectError
	iterCartesianPower( null, 2 ); // $ExpectError
	iterCartesianPower( {}, 2 ); // $ExpectError
	iterCartesianPower( ( x: number ): number => x, 2 ); // $ExpectError
}

// The compiler throws an error if the function is provided a second argument which is not a number...
{
	iterCartesianPower( [ 'a', 'b', 'c' ], '5' ); // $ExpectError
	iterCartesianPower( [ 'a', 'b', 'c' ], true ); // $ExpectError
	iterCartesianPower( [ 'a', 'b', 'c' ], false ); // $ExpectError
	iterCartesianPower( [ 'a', 'b', 'c' ], null ); // $ExpectError
	iterCartesianPower( [ 'a', 'b', 'c' ], [] ); // $ExpectError
	iterCartesianPower( [ 'a', 'b', 'c' ], {} ); // $ExpectError
	iterCartesianPower( [ 'a', 'b', 'c' ], ( x: number ): number => x ); // $ExpectError
}

// The compiler throws an error if the function is provided insufficient arguments...
{
	iterCartesianPower(); // $ExpectError
	iterCartesianPower( [ 'a', 'b', 'c' ] ); // $ExpectError
	iterCartesianPower( [ 'a', 'b', 'c' ], 2, 3 ); // $ExpectError
}
