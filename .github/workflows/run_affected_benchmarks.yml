#/
# @license Apache-2.0
#
# Copyright (c) 2022 The Stdlib Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/

# Workflow name:
name: run_affected_benchmarks

# Workflow triggers:
on:
  push:
    paths:
      # List paths for which changes should trigger this workflow:
      - 'lib/**/benchmark/**'

  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      # List paths for which changes should trigger this workflow:
      - 'lib/**/benchmark/**'

# Global permissions:
permissions:
  # Allow read-only access to the repository contents:
  contents: read

# Workflow jobs:
jobs:

  # Define a job for running changed benchmarks...
  process:

    # Define a display name:
    name: 'Run affected benchmarks'

    # Define the type of virtual host machine:
    runs-on: ubuntu-latest

    # Define the sequence of job steps...
    steps:
      # Checkout the repository:
      - name: 'Checkout repository'
        # Pin action to full length commit SHA
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:

          # Specify whether to remove untracked files before checking out the repository:
          clean: true

          # Limit clone depth to the last 1000 commits:
          fetch-depth: 1000

          # Specify whether to download Git-LFS files:
          lfs: false
        timeout-minutes: 10

      # Install Node.js:
      - name: 'Install Node.js'
        # Pin action to full length commit SHA
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: '16' # 'lts/*'
        timeout-minutes: 5

      # Install dependencies (accounting for possible network failures, etc, when installing node module dependencies):
      - name: 'Install dependencies'
        run: |
          make install-node-modules || make install-node-modules || make install-node-modules
        timeout-minutes: 15

      # Initialize development environment:
      - name: 'Initialize development environment'
        run: |
          make init
        timeout-minutes: 5

      # Get list of changed files:
      - name: 'Get list of changed files'
        id: changed-files
        continue-on-error: true
        run: |
          if [ -n "${{ github.event.pull_request.number }}" ]; then
            # Get the list of changed files in pull request:
            ancestor_commit=$(git merge-base ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
            files=$(git diff --diff-filter=AM --name-only $ancestor_commit ${{ github.event.pull_request.head.sha }})
          else
            # Get changed files by comparing the current commit to the commit before the push event or with its parent:
            if [ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ]; then
              files=$(git diff --diff-filter=AM --name-only HEAD~ ${{ github.event.after }})
            else
              files=$(git diff --diff-filter=AM --name-only ${{ github.event.before }} ${{ github.event.after }})
            fi
          fi
          # Keep only benchmark files:
          files=$(echo "$files" | grep -E 'benchmark/' | tr '\n' ' ' | sed 's/ $//')
          echo "files=${files}" >> $GITHUB_OUTPUT

      # Run JavaScript benchmarks:
      - name: 'Run JavaScript benchmarks'
        run: |
          files=$(echo "${{ steps.changed-files.outputs.files }}" | tr ' ' '\n' | grep -E '\.js$' | tr '\n' ' ' | sed 's/ $//')
          if [ -n "$files" ]; then
            make benchmark-javascript-files FILES="${files}"
          fi
        timeout-minutes: 30

      # Run C benchmarks:
      - name: 'Run C benchmarks'
        run: |
          files=$(echo "${{ steps.changed-files.outputs.files }}" | tr ' ' '\n' | grep -E '\.c$' | sed "s|^|${GITHUB_WORKSPACE}/|" | tr '\n' ' ' | sed 's/ $//')
          if [ -n "$files" ]; then
            make benchmark-c-files FILES="${files}"
          fi
        timeout-minutes: 15
