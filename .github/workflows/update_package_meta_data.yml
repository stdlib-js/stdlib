#/
# @license Apache-2.0
#
# Copyright (c) 2022 The Stdlib Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/

# Workflow name:
name: update_package_meta_data

# Workflow triggers:
on:
  # Allow the workflow to be manually run:
  workflow_dispatch:

  # Run the workflow on a schedule:
  schedule:
    # Run the workflow every week on Sunday at 00:00 UTC:
    - cron: '0 0 * * 0'

# Global permissions:
permissions:
  # Allow read-only access to the repository contents:
  contents: read

# Workflow jobs:
jobs:

  # Define a job for updating `package.json` files...
  update:

    # Define a display name:
    name: 'Update meta data'

    # Define the type of virtual host machine:
    runs-on: ubuntu-latest

    # Define the sequence of job steps...
    steps:

      # Checkout the repository:
      - name: 'Checkout repository'
        # Pin action to full length commit SHA
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          # Specify whether to remove untracked files before checking out the repository:
          clean: false

          # Limit clone depth to the most recent commit:
          fetch-depth: 1

          # Specify whether to download Git-LFS files:
          lfs: false
        timeout-minutes: 10

      # Install Node.js:
      - name: 'Install Node.js'
        # Pin action to full length commit SHA
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: '16' # 'lts/*'
        timeout-minutes: 5

      # Install dependencies (accounting for possible network failures, etc, when installing node module dependencies):
      - name: 'Install dependencies'
        run: |
          make install-node-modules || make install-node-modules || make install-node-modules
        timeout-minutes: 15

      # Update directories:
      - name: 'Update directories'
        run: |
          node lib/node_modules/@stdlib/_tools/package-json/scripts/update_directories lib/node_modules/@stdlib

      # Create a pull request with the updated `package.json` files:
      - name: 'Create pull request'
        id: cpr
        # Pin action to full length commit SHA
        uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38 # v5.0.2
        with:
          title: 'Update package meta data'
          body: |
            This PR

            -   updates package meta data

          commit-message: 'chore: update package meta data'
          committer: 'stdlib-bot <noreply@stdlib.io>'
          token: ${{ secrets.PULL_REQUEST_TOKEN }}
          labels: |
            automated-pr
          team-reviewers: |
            reviewers
          branch: update-package-meta-data
          delete-branch: true

      # Create a pull request summary:
      - name: 'Create summary'
        run: |
          echo "# :tada: Pull Request created! :tada:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Pull request ${{ steps.cpr.outputs.pull-request-number }} was successfully ${{ steps.cpr.outputs.pull-request-operation }}."
          echo ":link: [${{ steps.cpr.outputs.pull-request-url }}](${{ steps.cpr.outputs.pull-request-url }})." >> $GITHUB_STEP_SUMMARY
          echo "Head SHA: [${{ steps.cpr.outputs.pull-request-head-sha }}](${{ steps.cpr.outputs.pull-request-url }}/commits/${{ steps.cpr.outputs.pull-request-head-sha }})." >> $GITHUB_STEP_SUMMARY
