#/
# @license Apache-2.0
#
# Copyright (c) 2022 The Stdlib Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/

# Workflow name:
name: scaffold_package_via_push_to_branch

# Workflow triggers:
on:
  push:
    branches:
      - 'scaffold/**'
      - 'scaffold-**/**'

# Workflow jobs:
jobs:
  scaffold:
    # Define the type of virtual host machine on which to run the job:
    runs-on: ubuntu-latest

    # Define the sequence of job steps...
    steps:
      # Checkout the new branch:
      - uses: actions/checkout@v2
        with:
          # Refers to the branch name of the branch being pushed:
          ref: ${{ github.event.push.head.ref }}

          # Refers to the repository name of the branch being pushed:
          repository: ${{ github.event.push.head.repo.full_name }}

          # Specify whether to remove untracked files before checking out the repository:
          clean: true

          # Limit clone depth to the last 25 commits:
          fetch-depth: 25

          # Specify whether to download Git-LFS files:
          lfs: false

      # Get list of changed files:
      - name: 'Get list of changed files'
        id: changed-files
        uses: tj-actions/changed-files@v32
        with:
          separator: ' '

      # Run the command to scaffold a package:
      - name: 'Scaffold package'
        id: scaffold
        uses: stdlib-js/scaffold-pkg-pr-action@main
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          added-files: ${{ steps.changed-files.outputs.added_files }}

      # Configure git:
      - name: 'Configure git'
        run: |
          git config --local user.email "noreply@stdlib.io"
          git config --local user.name "stdlib-bot"

      # Commit changes:
      - name: 'Commit changes'
        run: |
          git add -A
          git commit -m "Scaffold ${{ steps.scaffold.outputs.path }} package files"

      # Push changes:
      - name: 'Push changes'
        run: |
          SLUG=${{ github.repository }}
          echo "Pushing changes to $SLUG..."
          git push "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$SLUG.git" HEAD:${{ github.event.push.head.ref }}

      # Check if branch name contains an issue number:
      - name: 'Check if branch name contains an issue number'
        id: check-branch-name
        run: |
          if [[ ${{ github.event.push.head.ref }} =~ ^scaffold-([0-9]+) ]]; then
            echo "Branch name contains an issue number: ${BASH_REMATCH[1]}"
            echo "::set-output name=issue-number::${BASH_REMATCH[1]}"
          fi

      # Add a comment to the pull request:
      - name: 'Add comment to pull request'
        if: steps.check-branch-name.outputs.issue-number != ''
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ steps.check-branch-name.outputs.issue-number }}
          body: |
            Based off the `README.md` file, the [stdlib-bot](https://github.com/stdlib-bot) has generated contents for the [${{ steps.scaffold.outputs.alias }}](../tree/${{ steps.scaffold.outputs.path }}/${{ steps.scaffold.outputs.dir }}) package.

            ## Notes

            *   :warning: The stdlib-bot uses AI to generate package content. The generated content is not guaranteed to be correct, and will require manual review and editing. :warning:
